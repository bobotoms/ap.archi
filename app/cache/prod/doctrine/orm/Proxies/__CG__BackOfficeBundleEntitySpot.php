<?php

namespace Proxies\__CG__\BackOfficeBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Spot extends \BackOfficeBundle\Entity\Spot implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BackOfficeBundle\\Entity\\Spot' . "\0" . 'id', 'name', 'subTitle', 'slider', 'map', 'description', 'country', 'sites', 'packages', 'lng', 'lat', 'team', 'expertNotice', 'listSpecies', 'praticalInformation', '' . "\0" . 'BackOfficeBundle\\Entity\\Spot' . "\0" . 'gallery');
        }

        return array('__isInitialized__', '' . "\0" . 'BackOfficeBundle\\Entity\\Spot' . "\0" . 'id', 'name', 'subTitle', 'slider', 'map', 'description', 'country', 'sites', 'packages', 'lng', 'lat', 'team', 'expertNotice', 'listSpecies', 'praticalInformation', '' . "\0" . 'BackOfficeBundle\\Entity\\Spot' . "\0" . 'gallery');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Spot $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubTitle($subTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubTitle', array($subTitle));

        return parent::setSubTitle($subTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubTitle', array());

        return parent::getSubTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlider($slider)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlider', array($slider));

        return parent::setSlider($slider);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlider()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlider', array());

        return parent::getSlider();
    }

    /**
     * {@inheritDoc}
     */
    public function setMap($map)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMap', array($map));

        return parent::setMap($map);
    }

    /**
     * {@inheritDoc}
     */
    public function getMap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMap', array());

        return parent::getMap();
    }

    /**
     * {@inheritDoc}
     */
    public function setSites($sites)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSites', array($sites));

        return parent::setSites($sites);
    }

    /**
     * {@inheritDoc}
     */
    public function getSites()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSites', array());

        return parent::getSites();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', array($country));

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', array());

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setPackages($packages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPackages', array($packages));

        return parent::setPackages($packages);
    }

    /**
     * {@inheritDoc}
     */
    public function getPackages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackages', array());

        return parent::getPackages();
    }

    /**
     * {@inheritDoc}
     */
    public function setLng($lng)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLng', array($lng));

        return parent::setLng($lng);
    }

    /**
     * {@inheritDoc}
     */
    public function getLng()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLng', array());

        return parent::getLng();
    }

    /**
     * {@inheritDoc}
     */
    public function setLat($lat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLat', array($lat));

        return parent::setLat($lat);
    }

    /**
     * {@inheritDoc}
     */
    public function getLat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLat', array());

        return parent::getLat();
    }

    /**
     * {@inheritDoc}
     */
    public function setTeam($team)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTeam', array($team));

        return parent::setTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeam', array());

        return parent::getTeam();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpertNotice($expertNotice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpertNotice', array($expertNotice));

        return parent::setExpertNotice($expertNotice);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpertNotice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpertNotice', array());

        return parent::getExpertNotice();
    }

    /**
     * {@inheritDoc}
     */
    public function setListSpecies($listSpecies)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setListSpecies', array($listSpecies));

        return parent::setListSpecies($listSpecies);
    }

    /**
     * {@inheritDoc}
     */
    public function getListSpecies()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getListSpecies', array());

        return parent::getListSpecies();
    }

    /**
     * {@inheritDoc}
     */
    public function SetPraticalInformation($praticalInformation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'SetPraticalInformation', array($praticalInformation));

        return parent::SetPraticalInformation($praticalInformation);
    }

    /**
     * {@inheritDoc}
     */
    public function getPraticalInformation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPraticalInformation', array());

        return parent::getPraticalInformation();
    }

    /**
     * {@inheritDoc}
     */
    public function setGallery($gallery)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGallery', array($gallery));

        return parent::setGallery($gallery);
    }

    /**
     * {@inheritDoc}
     */
    public function getGallery()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGallery', array());

        return parent::getGallery();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
