<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">C:\wamp\www\Aparchi\app</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">C:/wamp/www/Aparchi/app/cache/dev</parameter>
    <parameter key="kernel.logs_dir">C:\wamp\www\Aparchi\app\logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</parameter>
      <parameter key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</parameter>
      <parameter key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</parameter>
      <parameter key="SonataCacheBundle">Sonata\CacheBundle\SonataCacheBundle</parameter>
      <parameter key="SonataSeoBundle">Sonata\SeoBundle\SonataSeoBundle</parameter>
      <parameter key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</parameter>
      <parameter key="SonataNotificationBundle">Sonata\NotificationBundle\SonataNotificationBundle</parameter>
      <parameter key="ApplicationSonataNotificationBundle">Application\Sonata\NotificationBundle\ApplicationSonataNotificationBundle</parameter>
      <parameter key="SonataPageBundle">Sonata\PageBundle\SonataPageBundle</parameter>
      <parameter key="ApplicationSonataPageBundle">Application\Sonata\PageBundle\ApplicationSonataPageBundle</parameter>
      <parameter key="CmfRoutingBundle">Symfony\Cmf\Bundle\RoutingBundle\CmfRoutingBundle</parameter>
      <parameter key="KnpMarkdownBundle">Knp\Bundle\MarkdownBundle\KnpMarkdownBundle</parameter>
      <parameter key="IvoryCKEditorBundle">Ivory\CKEditorBundle\IvoryCKEditorBundle</parameter>
      <parameter key="SonataFormatterBundle">Sonata\FormatterBundle\SonataFormatterBundle</parameter>
      <parameter key="FrontOfficeBundle">FrontOfficeBundle\FrontOfficeBundle</parameter>
      <parameter key="BackOfficeBundle">BackOfficeBundle\BackOfficeBundle</parameter>
      <parameter key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</parameter>
      <parameter key="SonataUserBundle">Sonata\UserBundle\SonataUserBundle</parameter>
      <parameter key="ApplicationSonataUserBundle">Application\Sonata\UserBundle\ApplicationSonataUserBundle</parameter>
      <parameter key="SonataMediaBundle">Sonata\MediaBundle\SonataMediaBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="ApplicationSonataMediaBundle">Application\Sonata\MediaBundle\ApplicationSonataMediaBundle</parameter>
      <parameter key="ApplicationSonataAdminBundle">Application\Sonata\AdminBundle\ApplicationSonataAdminBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="AsseticBundle">Symfony\Bundle\AsseticBundle\AsseticBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</parameter>
      <parameter key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\symfony\monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\symfony\swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\doctrine\doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sensio\framework-extra-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="SonataCoreBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle</parameter>
        <parameter key="namespace">Sonata\CoreBundle</parameter>
      </parameter>
      <parameter key="SonataBlockBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\block-bundle</parameter>
        <parameter key="namespace">Sonata\BlockBundle</parameter>
      </parameter>
      <parameter key="KnpMenuBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\knplabs\knp-menu-bundle</parameter>
        <parameter key="namespace">Knp\Bundle\MenuBundle</parameter>
      </parameter>
      <parameter key="SonataDoctrineORMAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\doctrine-orm-admin-bundle</parameter>
        <parameter key="namespace">Sonata\DoctrineORMAdminBundle</parameter>
      </parameter>
      <parameter key="SonataAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle</parameter>
        <parameter key="namespace">Sonata\AdminBundle</parameter>
      </parameter>
      <parameter key="SonataCacheBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\cache-bundle</parameter>
        <parameter key="namespace">Sonata\CacheBundle</parameter>
      </parameter>
      <parameter key="SonataSeoBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\seo-bundle</parameter>
        <parameter key="namespace">Sonata\SeoBundle</parameter>
      </parameter>
      <parameter key="SonataEasyExtendsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\easy-extends-bundle</parameter>
        <parameter key="namespace">Sonata\EasyExtendsBundle</parameter>
      </parameter>
      <parameter key="SonataNotificationBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle</parameter>
        <parameter key="namespace">Sonata\NotificationBundle</parameter>
      </parameter>
      <parameter key="ApplicationSonataNotificationBundle" type="collection">
        <parameter key="parent">SonataNotificationBundle</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle</parameter>
        <parameter key="namespace">Application\Sonata\NotificationBundle</parameter>
      </parameter>
      <parameter key="SonataPageBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle</parameter>
        <parameter key="namespace">Sonata\PageBundle</parameter>
      </parameter>
      <parameter key="ApplicationSonataPageBundle" type="collection">
        <parameter key="parent">SonataPageBundle</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle</parameter>
        <parameter key="namespace">Application\Sonata\PageBundle</parameter>
      </parameter>
      <parameter key="CmfRoutingBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\symfony-cmf\routing-bundle</parameter>
        <parameter key="namespace">Symfony\Cmf\Bundle\RoutingBundle</parameter>
      </parameter>
      <parameter key="KnpMarkdownBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\knplabs\knp-markdown-bundle</parameter>
        <parameter key="namespace">Knp\Bundle\MarkdownBundle</parameter>
      </parameter>
      <parameter key="IvoryCKEditorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\egeloen\ckeditor-bundle</parameter>
        <parameter key="namespace">Ivory\CKEditorBundle</parameter>
      </parameter>
      <parameter key="SonataFormatterBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle</parameter>
        <parameter key="namespace">Sonata\FormatterBundle</parameter>
      </parameter>
      <parameter key="FrontOfficeBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\src\FrontOfficeBundle</parameter>
        <parameter key="namespace">FrontOfficeBundle</parameter>
      </parameter>
      <parameter key="BackOfficeBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\src\BackOfficeBundle</parameter>
        <parameter key="namespace">BackOfficeBundle</parameter>
      </parameter>
      <parameter key="FOSUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle</parameter>
        <parameter key="namespace">FOS\UserBundle</parameter>
      </parameter>
      <parameter key="SonataUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle</parameter>
        <parameter key="namespace">Sonata\UserBundle</parameter>
      </parameter>
      <parameter key="ApplicationSonataUserBundle" type="collection">
        <parameter key="parent">SonataUserBundle</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle</parameter>
        <parameter key="namespace">Application\Sonata\UserBundle</parameter>
      </parameter>
      <parameter key="SonataMediaBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle</parameter>
        <parameter key="namespace">Sonata\MediaBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\jms\serializer-bundle\JMS\SerializerBundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="ApplicationSonataMediaBundle" type="collection">
        <parameter key="parent">SonataMediaBundle</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle</parameter>
        <parameter key="namespace">Application\Sonata\MediaBundle</parameter>
      </parameter>
      <parameter key="ApplicationSonataAdminBundle" type="collection">
        <parameter key="parent">SonataAdminBundle</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\src\Application\Sonata\AdminBundle</parameter>
        <parameter key="namespace">Application\Sonata\AdminBundle</parameter>
      </parameter>
      <parameter key="DoctrineFixturesBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\doctrine\doctrine-fixtures-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\FixturesBundle</parameter>
      </parameter>
      <parameter key="AsseticBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\symfony\assetic-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\AsseticBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\DebugBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="SensioDistributionBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sensio\distribution-bundle\Sensio\Bundle\DistributionBundle</parameter>
        <parameter key="namespace">Sensio\Bundle\DistributionBundle</parameter>
      </parameter>
      <parameter key="SensioGeneratorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\wamp\www\Aparchi\vendor\sensio\generator-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\GeneratorBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="database_host">127.0.0.1</parameter>
    <parameter key="database_port">null</parameter>
    <parameter key="database_name">aparchi</parameter>
    <parameter key="database_user">root</parameter>
    <parameter key="database_password">null</parameter>
    <parameter key="mailer_transport">smtp</parameter>
    <parameter key="mailer_host">127.0.0.1</parameter>
    <parameter key="mailer_user">null</parameter>
    <parameter key="mailer_password">null</parameter>
    <parameter key="secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="provider" type="collection">
      <parameter key="4" type="collection">
        <parameter key="name">AMV SUBOCEA SEJOUR</parameter>
        <parameter key="key">a053b5ea27edcddb81ab7a26b503a7d5</parameter>
      </parameter>
      <parameter key="5" type="collection">
        <parameter key="name">AMV SUBOCEA CROISIERE</parameter>
        <parameter key="key">93b8d15d2264ddf19390d5d531582050</parameter>
      </parameter>
      <parameter key="21" type="collection">
        <parameter key="name">AMV SUBOCEA SAFARIS</parameter>
        <parameter key="key">0b0sqsdqsdqb1e98370630996648d0149cdc7514</parameter>
      </parameter>
      <parameter key="18" type="collection">
        <parameter key="name">DUNE SEJOURS</parameter>
        <parameter key="key">028a21927201e12a6fa4d415bf206d5a</parameter>
      </parameter>
      <parameter key="17" type="collection">
        <parameter key="name">DUNE CROISIERES</parameter>
        <parameter key="key">cd48d64b7e7f2c5620cad002df485a7d</parameter>
      </parameter>
      <parameter key="20" type="collection">
        <parameter key="name">DUNE SAFARIS</parameter>
        <parameter key="key">9db56b24jkhjkhjk6d1e68f0a435c3f5c8be5be5</parameter>
      </parameter>
    </parameter>
    <parameter key="controller_resolver.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver</parameter>
    <parameter key="controller_name_converter.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser</parameter>
    <parameter key="response_listener.class">Symfony\Component\HttpKernel\EventListener\ResponseListener</parameter>
    <parameter key="streamed_response_listener.class">Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</parameter>
    <parameter key="locale_listener.class">Symfony\Component\HttpKernel\EventListener\LocaleListener</parameter>
    <parameter key="event_dispatcher.class">Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher</parameter>
    <parameter key="http_kernel.class">Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel</parameter>
    <parameter key="filesystem.class">Symfony\Component\Filesystem\Filesystem</parameter>
    <parameter key="cache_warmer.class">Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate</parameter>
    <parameter key="cache_clearer.class">Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer</parameter>
    <parameter key="file_locator.class">Symfony\Component\HttpKernel\Config\FileLocator</parameter>
    <parameter key="uri_signer.class">Symfony\Component\HttpKernel\UriSigner</parameter>
    <parameter key="request_stack.class">Symfony\Component\HttpFoundation\RequestStack</parameter>
    <parameter key="fragment.handler.class">Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler</parameter>
    <parameter key="fragment.renderer.inline.class">Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.class">Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.renderer.esi.class">Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="translator.class">Symfony\Bundle\FrameworkBundle\Translation\Translator</parameter>
    <parameter key="translator.identity.class">Symfony\Component\Translation\IdentityTranslator</parameter>
    <parameter key="translator.selector.class">Symfony\Component\Translation\MessageSelector</parameter>
    <parameter key="translation.loader.php.class">Symfony\Component\Translation\Loader\PhpFileLoader</parameter>
    <parameter key="translation.loader.yml.class">Symfony\Component\Translation\Loader\YamlFileLoader</parameter>
    <parameter key="translation.loader.xliff.class">Symfony\Component\Translation\Loader\XliffFileLoader</parameter>
    <parameter key="translation.loader.po.class">Symfony\Component\Translation\Loader\PoFileLoader</parameter>
    <parameter key="translation.loader.mo.class">Symfony\Component\Translation\Loader\MoFileLoader</parameter>
    <parameter key="translation.loader.qt.class">Symfony\Component\Translation\Loader\QtFileLoader</parameter>
    <parameter key="translation.loader.csv.class">Symfony\Component\Translation\Loader\CsvFileLoader</parameter>
    <parameter key="translation.loader.res.class">Symfony\Component\Translation\Loader\IcuResFileLoader</parameter>
    <parameter key="translation.loader.dat.class">Symfony\Component\Translation\Loader\IcuDatFileLoader</parameter>
    <parameter key="translation.loader.ini.class">Symfony\Component\Translation\Loader\IniFileLoader</parameter>
    <parameter key="translation.loader.json.class">Symfony\Component\Translation\Loader\JsonFileLoader</parameter>
    <parameter key="translation.dumper.php.class">Symfony\Component\Translation\Dumper\PhpFileDumper</parameter>
    <parameter key="translation.dumper.xliff.class">Symfony\Component\Translation\Dumper\XliffFileDumper</parameter>
    <parameter key="translation.dumper.po.class">Symfony\Component\Translation\Dumper\PoFileDumper</parameter>
    <parameter key="translation.dumper.mo.class">Symfony\Component\Translation\Dumper\MoFileDumper</parameter>
    <parameter key="translation.dumper.yml.class">Symfony\Component\Translation\Dumper\YamlFileDumper</parameter>
    <parameter key="translation.dumper.qt.class">Symfony\Component\Translation\Dumper\QtFileDumper</parameter>
    <parameter key="translation.dumper.csv.class">Symfony\Component\Translation\Dumper\CsvFileDumper</parameter>
    <parameter key="translation.dumper.ini.class">Symfony\Component\Translation\Dumper\IniFileDumper</parameter>
    <parameter key="translation.dumper.json.class">Symfony\Component\Translation\Dumper\JsonFileDumper</parameter>
    <parameter key="translation.dumper.res.class">Symfony\Component\Translation\Dumper\IcuResFileDumper</parameter>
    <parameter key="translation.extractor.php.class">Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor</parameter>
    <parameter key="translation.loader.class">Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader</parameter>
    <parameter key="translation.extractor.class">Symfony\Component\Translation\Extractor\ChainExtractor</parameter>
    <parameter key="translation.writer.class">Symfony\Component\Translation\Writer\TranslationWriter</parameter>
    <parameter key="property_accessor.class">Symfony\Component\PropertyAccess\PropertyAccessor</parameter>
    <parameter key="kernel.secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.trusted_proxies" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="session.class">Symfony\Component\HttpFoundation\Session\Session</parameter>
    <parameter key="session.flashbag.class">Symfony\Component\HttpFoundation\Session\Flash\FlashBag</parameter>
    <parameter key="session.attribute_bag.class">Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag</parameter>
    <parameter key="session.storage.metadata_bag.class">Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.native.class">Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage</parameter>
    <parameter key="session.storage.php_bridge.class">Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage</parameter>
    <parameter key="session.storage.mock_file.class">Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage</parameter>
    <parameter key="session.handler.native_file.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler</parameter>
    <parameter key="session.handler.write_check.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\WriteCheckSessionHandler</parameter>
    <parameter key="session_listener.class">Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">C:/wamp/www/Aparchi/app/cache/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="security.secure_random.class">Symfony\Component\Security\Core\Util\SecureRandom</parameter>
    <parameter key="form.resolved_type_factory.class">Symfony\Component\Form\ResolvedFormTypeFactory</parameter>
    <parameter key="form.registry.class">Symfony\Component\Form\FormRegistry</parameter>
    <parameter key="form.factory.class">Symfony\Component\Form\FormFactory</parameter>
    <parameter key="form.extension.class">Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension</parameter>
    <parameter key="form.type_guesser.validator.class">Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</parameter>
    <parameter key="form.type_extension.form.request_handler.class">Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="security.csrf.token_generator.class">Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator</parameter>
    <parameter key="security.csrf.token_storage.class">Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage</parameter>
    <parameter key="security.csrf.token_manager.class">Symfony\Component\Security\Csrf\CsrfTokenManager</parameter>
    <parameter key="templating.engine.delegating.class">Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine</parameter>
    <parameter key="templating.name_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser</parameter>
    <parameter key="templating.filename_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser</parameter>
    <parameter key="templating.cache_warmer.template_paths.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer</parameter>
    <parameter key="templating.locator.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator</parameter>
    <parameter key="templating.loader.filesystem.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader</parameter>
    <parameter key="templating.loader.cache.class">Symfony\Component\Templating\Loader\CacheLoader</parameter>
    <parameter key="templating.loader.chain.class">Symfony\Component\Templating\Loader\ChainLoader</parameter>
    <parameter key="templating.finder.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder</parameter>
    <parameter key="templating.helper.assets.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper</parameter>
    <parameter key="templating.helper.router.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.class">Symfony\Component\Validator\Validator\ValidatorInterface</parameter>
    <parameter key="validator.builder.class">Symfony\Component\Validator\ValidatorBuilderInterface</parameter>
    <parameter key="validator.builder.factory.class">Symfony\Component\Validator\Validation</parameter>
    <parameter key="validator.mapping.cache.apc.class">Symfony\Component\Validator\Mapping\Cache\ApcCache</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.validator_factory.class">Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory</parameter>
    <parameter key="validator.expression.class">Symfony\Component\Validator\Constraints\ExpressionValidator</parameter>
    <parameter key="validator.email.class">Symfony\Component\Validator\Constraints\EmailValidator</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="validator.api">2.5-bc</parameter>
    <parameter key="fragment.listener.class">Symfony\Component\HttpKernel\EventListener\FragmentListener</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="profiler.class">Symfony\Component\HttpKernel\Profiler\Profiler</parameter>
    <parameter key="profiler_listener.class">Symfony\Component\HttpKernel\EventListener\ProfilerListener</parameter>
    <parameter key="data_collector.config.class">Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector</parameter>
    <parameter key="data_collector.request.class">Symfony\Component\HttpKernel\DataCollector\RequestDataCollector</parameter>
    <parameter key="data_collector.exception.class">Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector</parameter>
    <parameter key="data_collector.events.class">Symfony\Component\HttpKernel\DataCollector\EventDataCollector</parameter>
    <parameter key="data_collector.logger.class">Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector</parameter>
    <parameter key="data_collector.time.class">Symfony\Component\HttpKernel\DataCollector\TimeDataCollector</parameter>
    <parameter key="data_collector.memory.class">Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector</parameter>
    <parameter key="data_collector.router.class">Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector</parameter>
    <parameter key="form.resolved_type_factory.data_collector_proxy.class">Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy</parameter>
    <parameter key="form.type_extension.form.data_collector.class">Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</parameter>
    <parameter key="data_collector.form.class">Symfony\Component\Form\Extension\DataCollector\FormDataCollector</parameter>
    <parameter key="data_collector.form.extractor.class">Symfony\Component\Form\Extension\DataCollector\FormDataExtractor</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:C:/wamp/www/Aparchi/app/cache/dev/profiler</parameter>
    <parameter key="profiler.storage.username"></parameter>
    <parameter key="profiler.storage.password"></parameter>
    <parameter key="profiler.storage.lifetime">86400</parameter>
    <parameter key="router.class">Symfony\Bundle\FrameworkBundle\Routing\Router</parameter>
    <parameter key="router.request_context.class">Symfony\Component\Routing\RequestContext</parameter>
    <parameter key="routing.loader.class">Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader</parameter>
    <parameter key="routing.resolver.class">Symfony\Component\Config\Loader\LoaderResolver</parameter>
    <parameter key="routing.loader.xml.class">Symfony\Component\Routing\Loader\XmlFileLoader</parameter>
    <parameter key="routing.loader.yml.class">Symfony\Component\Routing\Loader\YamlFileLoader</parameter>
    <parameter key="routing.loader.php.class">Symfony\Component\Routing\Loader\PhpFileLoader</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.cache_warmer.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer</parameter>
    <parameter key="router.options.matcher.cache_class">appDevDebugProjectContainerUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appDevDebugProjectContainerUrlGenerator</parameter>
    <parameter key="router_listener.class">Symfony\Component\HttpKernel\EventListener\RouterListener</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">C:\wamp\www\Aparchi\app/config/routing_dev.yml</parameter>
    <parameter key="router.cache_class_prefix">appDevDebugProjectContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="annotations.reader.class">Doctrine\Common\Annotations\AnnotationReader</parameter>
    <parameter key="annotations.cached_reader.class">Doctrine\Common\Annotations\CachedReader</parameter>
    <parameter key="annotations.file_cache_reader.class">Doctrine\Common\Annotations\FileCacheReader</parameter>
    <parameter key="debug.debug_handlers_listener.class">Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</parameter>
    <parameter key="debug.stopwatch.class">Symfony\Component\Stopwatch\Stopwatch</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.event_dispatcher.class">Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher</parameter>
    <parameter key="debug.container.dump">C:/wamp/www/Aparchi/app/cache/dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="debug.controller_resolver.class">Symfony\Component\HttpKernel\Controller\TraceableControllerResolver</parameter>
    <parameter key="security.context.class">Symfony\Component\Security\Core\SecurityContext</parameter>
    <parameter key="security.user_checker.class">Symfony\Component\Security\Core\User\UserChecker</parameter>
    <parameter key="security.encoder_factory.generic.class">Symfony\Component\Security\Core\Encoder\EncoderFactory</parameter>
    <parameter key="security.encoder.digest.class">Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder</parameter>
    <parameter key="security.encoder.plain.class">Symfony\Component\Security\Core\Encoder\PlaintextPasswordEncoder</parameter>
    <parameter key="security.encoder.pbkdf2.class">Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder</parameter>
    <parameter key="security.encoder.bcrypt.class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</parameter>
    <parameter key="security.user.provider.in_memory.class">Symfony\Component\Security\Core\User\InMemoryUserProvider</parameter>
    <parameter key="security.user.provider.in_memory.user.class">Symfony\Component\Security\Core\User\User</parameter>
    <parameter key="security.user.provider.chain.class">Symfony\Component\Security\Core\User\ChainUserProvider</parameter>
    <parameter key="security.authentication.trust_resolver.class">Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.authentication.manager.class">Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager</parameter>
    <parameter key="security.authentication.session_strategy.class">Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy</parameter>
    <parameter key="security.access.decision_manager.class">Symfony\Component\Security\Core\Authorization\AccessDecisionManager</parameter>
    <parameter key="security.access.simple_role_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleVoter</parameter>
    <parameter key="security.access.authenticated_voter.class">Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter</parameter>
    <parameter key="security.access.role_hierarchy_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter</parameter>
    <parameter key="security.access.expression_voter.class">Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter</parameter>
    <parameter key="security.firewall.class">Symfony\Component\Security\Http\Firewall</parameter>
    <parameter key="security.firewall.map.class">Symfony\Bundle\SecurityBundle\Security\FirewallMap</parameter>
    <parameter key="security.firewall.context.class">Symfony\Bundle\SecurityBundle\Security\FirewallContext</parameter>
    <parameter key="security.matcher.class">Symfony\Component\HttpFoundation\RequestMatcher</parameter>
    <parameter key="security.expression_matcher.class">Symfony\Component\HttpFoundation\ExpressionRequestMatcher</parameter>
    <parameter key="security.role_hierarchy.class">Symfony\Component\Security\Core\Role\RoleHierarchy</parameter>
    <parameter key="security.http_utils.class">Symfony\Component\Security\Http\HttpUtils</parameter>
    <parameter key="security.validator.user_password.class">Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator</parameter>
    <parameter key="security.expression_language.class">Symfony\Component\Security\Core\Authorization\ExpressionLanguage</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_SONATA_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
      <parameter key="SONATA" type="collection">
        <parameter>ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT</parameter>
      </parameter>
    </parameter>
    <parameter key="security.authentication.retry_entry_point.class">Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint</parameter>
    <parameter key="security.channel_listener.class">Symfony\Component\Security\Http\Firewall\ChannelListener</parameter>
    <parameter key="security.authentication.form_entry_point.class">Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.form.class">Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_form.class">Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_preauth.class">Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.basic.class">Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener</parameter>
    <parameter key="security.authentication.basic_entry_point.class">Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.digest.class">Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener</parameter>
    <parameter key="security.authentication.digest_entry_point.class">Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.x509.class">Symfony\Component\Security\Http\Firewall\X509AuthenticationListener</parameter>
    <parameter key="security.authentication.listener.anonymous.class">Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener</parameter>
    <parameter key="security.authentication.switchuser_listener.class">Symfony\Component\Security\Http\Firewall\SwitchUserListener</parameter>
    <parameter key="security.logout_listener.class">Symfony\Component\Security\Http\Firewall\LogoutListener</parameter>
    <parameter key="security.logout.handler.session.class">Symfony\Component\Security\Http\Logout\SessionLogoutHandler</parameter>
    <parameter key="security.logout.handler.cookie_clearing.class">Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler</parameter>
    <parameter key="security.logout.success_handler.class">Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler</parameter>
    <parameter key="security.access_listener.class">Symfony\Component\Security\Http\Firewall\AccessListener</parameter>
    <parameter key="security.access_map.class">Symfony\Component\Security\Http\AccessMap</parameter>
    <parameter key="security.exception_listener.class">Symfony\Component\Security\Http\Firewall\ExceptionListener</parameter>
    <parameter key="security.context_listener.class">Symfony\Component\Security\Http\Firewall\ContextListener</parameter>
    <parameter key="security.authentication.provider.dao.class">Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.simple.class">Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.pre_authenticated.class">Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.anonymous.class">Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider</parameter>
    <parameter key="security.authentication.success_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler</parameter>
    <parameter key="security.authentication.failure_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler</parameter>
    <parameter key="security.authentication.simple_success_failure_handler.class">Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler</parameter>
    <parameter key="security.authentication.provider.rememberme.class">Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider</parameter>
    <parameter key="security.authentication.listener.rememberme.class">Symfony\Component\Security\Http\Firewall\RememberMeListener</parameter>
    <parameter key="security.rememberme.token.provider.in_memory.class">Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider</parameter>
    <parameter key="security.authentication.rememberme.services.persistent.class">Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices</parameter>
    <parameter key="security.authentication.rememberme.services.simplehash.class">Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices</parameter>
    <parameter key="security.rememberme.response_listener.class">Symfony\Component\Security\Http\RememberMe\ResponseListener</parameter>
    <parameter key="templating.helper.logout_url.class">Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper</parameter>
    <parameter key="templating.helper.security.class">Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper</parameter>
    <parameter key="twig.extension.logout_url.class">Symfony\Bridge\Twig\Extension\LogoutUrlExtension</parameter>
    <parameter key="twig.extension.security.class">Symfony\Bridge\Twig\Extension\SecurityExtension</parameter>
    <parameter key="data_collector.security.class">Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector</parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.acl.permission_granting_strategy.class">Symfony\Component\Security\Acl\Domain\PermissionGrantingStrategy</parameter>
    <parameter key="security.acl.voter.class">Symfony\Component\Security\Acl\Voter\AclVoter</parameter>
    <parameter key="security.acl.permission.map.class">Symfony\Component\Security\Acl\Permission\BasicPermissionMap</parameter>
    <parameter key="security.acl.object_identity_retrieval_strategy.class">Symfony\Component\Security\Acl\Domain\ObjectIdentityRetrievalStrategy</parameter>
    <parameter key="security.acl.security_identity_retrieval_strategy.class">Symfony\Component\Security\Acl\Domain\SecurityIdentityRetrievalStrategy</parameter>
    <parameter key="security.acl.collection_cache.class">Symfony\Component\Security\Acl\Domain\AclCollectionCache</parameter>
    <parameter key="security.acl.cache.doctrine.class">Symfony\Component\Security\Acl\Domain\DoctrineAclCache</parameter>
    <parameter key="security.acl.dbal.provider.class">Symfony\Component\Security\Acl\Dbal\MutableAclProvider</parameter>
    <parameter key="security.acl.dbal.schema.class">Symfony\Component\Security\Acl\Dbal\Schema</parameter>
    <parameter key="security.acl.dbal.schema_listener.class">Symfony\Bundle\SecurityBundle\EventListener\AclSchemaListener</parameter>
    <parameter key="security.acl.dbal.class_table_name">acl_classes</parameter>
    <parameter key="security.acl.dbal.entry_table_name">acl_entries</parameter>
    <parameter key="security.acl.dbal.oid_table_name">acl_object_identities</parameter>
    <parameter key="security.acl.dbal.oid_ancestors_table_name">acl_object_identity_ancestors</parameter>
    <parameter key="security.acl.dbal.sid_table_name">acl_security_identities</parameter>
    <parameter key="twig.class">Twig\Environment</parameter>
    <parameter key="twig.loader.filesystem.class">Symfony\Bundle\TwigBundle\Loader\FilesystemLoader</parameter>
    <parameter key="twig.loader.chain.class">Twig\Loader\ChainLoader</parameter>
    <parameter key="templating.engine.twig.class">Symfony\Bundle\TwigBundle\TwigEngine</parameter>
    <parameter key="twig.cache_warmer.class">Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer</parameter>
    <parameter key="twig.extension.trans.class">Symfony\Bridge\Twig\Extension\TranslationExtension</parameter>
    <parameter key="twig.extension.actions.class">Symfony\Bundle\TwigBundle\Extension\ActionsExtension</parameter>
    <parameter key="twig.extension.code.class">Symfony\Bridge\Twig\Extension\CodeExtension</parameter>
    <parameter key="twig.extension.routing.class">Symfony\Bridge\Twig\Extension\RoutingExtension</parameter>
    <parameter key="twig.extension.yaml.class">Symfony\Bridge\Twig\Extension\YamlExtension</parameter>
    <parameter key="twig.extension.form.class">Symfony\Bridge\Twig\Extension\FormExtension</parameter>
    <parameter key="twig.extension.httpkernel.class">Symfony\Bridge\Twig\Extension\HttpKernelExtension</parameter>
    <parameter key="twig.extension.debug.stopwatch.class">Symfony\Bridge\Twig\Extension\StopwatchExtension</parameter>
    <parameter key="twig.extension.expression.class">Symfony\Bridge\Twig\Extension\ExpressionExtension</parameter>
    <parameter key="twig.form.engine.class">Symfony\Bridge\Twig\Form\TwigRendererEngine</parameter>
    <parameter key="twig.form.renderer.class">Symfony\Bridge\Twig\Form\TwigRenderer</parameter>
    <parameter key="twig.translation.extractor.class">Symfony\Bridge\Twig\Translation\TwigExtractor</parameter>
    <parameter key="twig.exception_listener.class">Symfony\Component\HttpKernel\EventListener\ExceptionListener</parameter>
    <parameter key="twig.controller.exception.class">Symfony\Bundle\TwigBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.controller.preview_error.class">Symfony\Bundle\TwigBundle\Controller\PreviewErrorController</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception:showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>IvoryCKEditorBundle:Form:ckeditor_widget.html.twig</parameter>
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>SonataFormatterBundle:Form:formatter.html.twig</parameter>
      <parameter>bootstrap_3_layout.html.twig</parameter>
      <parameter>SonataUserBundle:Form:form_admin_fields.html.twig</parameter>
    </parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="swiftmailer.class">Swift_Mailer</parameter>
    <parameter key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</parameter>
    <parameter key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</parameter>
    <parameter key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</parameter>
    <parameter key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</parameter>
    <parameter key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</parameter>
    <parameter key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</parameter>
    <parameter key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</parameter>
    <parameter key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</parameter>
    <parameter key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</parameter>
    <parameter key="swiftmailer.spool.file.class">Swift_FileSpool</parameter>
    <parameter key="swiftmailer.spool.memory.class">Swift_MemorySpool</parameter>
    <parameter key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</parameter>
    <parameter key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">127.0.0.1</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.local_domain">null</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">C:/wamp/www/Aparchi/app/cache/dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="json" type="collection">
        <parameter key="class">Sonata\Doctrine\Types\JsonType</parameter>
        <parameter key="commented">true</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\ORM\Mapping\DefaultEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">C:/wamp/www/Aparchi/app/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</parameter>
    <parameter key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</parameter>
    <parameter key="sensio_framework_extra.converter.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</parameter>
    <parameter key="sensio_framework_extra.converter.manager.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager</parameter>
    <parameter key="sensio_framework_extra.converter.doctrine.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter</parameter>
    <parameter key="sensio_framework_extra.converter.datetime.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter</parameter>
    <parameter key="sensio_framework_extra.view.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</parameter>
    <parameter key="sonata.core.flashmessage.manager.class">Sonata\CoreBundle\FlashMessage\FlashManager</parameter>
    <parameter key="sonata.core.twig.extension.flashmessage.class">Sonata\CoreBundle\Twig\Extension\FlashMessageExtension</parameter>
    <parameter key="sonata.core.form_type">standard</parameter>
    <parameter key="sonata.core.form.mapping.type" type="collection"/>
    <parameter key="sonata.core.form.mapping.extension" type="collection"/>
    <parameter key="sonata.block.service.container.class">Sonata\BlockBundle\Block\Service\ContainerBlockService</parameter>
    <parameter key="sonata.block.service.empty.class">Sonata\BlockBundle\Block\Service\EmptyBlockService</parameter>
    <parameter key="sonata.block.service.text.class">Sonata\BlockBundle\Block\Service\TextBlockService</parameter>
    <parameter key="sonata.block.service.rss.class">Sonata\BlockBundle\Block\Service\RssBlockService</parameter>
    <parameter key="sonata.block.service.menu.class">Sonata\BlockBundle\Block\Service\MenuBlockService</parameter>
    <parameter key="sonata.block.service.template.class">Sonata\BlockBundle\Block\Service\TemplateBlockService</parameter>
    <parameter key="sonata.block.exception.strategy.manager.class">Sonata\BlockBundle\Exception\Strategy\StrategyManager</parameter>
    <parameter key="sonata.block.container.types" type="collection">
      <parameter>sonata.block.service.container</parameter>
      <parameter>sonata.page.block.container</parameter>
      <parameter>sonata.dashboard.block.container</parameter>
      <parameter>cmf.block.container</parameter>
      <parameter>cmf.block.slideshow</parameter>
    </parameter>
    <parameter key="sonata_block.blocks" type="collection">
      <parameter key="sonata.admin.block.admin_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.text" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.rss" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.media" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.gallery" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.formatter.block.formatter" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.menu" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.account" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata_block.blocks_by_class" type="collection"/>
    <parameter key="sonata_block.cache_blocks" type="collection">
      <parameter key="by_type" type="collection">
        <parameter key="sonata.admin.block.admin_list">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.text">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.rss">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.media">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.gallery">sonata.cache.noop</parameter>
        <parameter key="sonata.formatter.block.formatter">sonata.cache.noop</parameter>
        <parameter key="sonata.user.block.menu">sonata.cache.noop</parameter>
        <parameter key="sonata.user.block.account">sonata.cache.noop</parameter>
      </parameter>
    </parameter>
    <parameter key="knp_menu.factory.class">Knp\Menu\MenuFactory</parameter>
    <parameter key="knp_menu.factory_extension.routing.class">Knp\Menu\Integration\Symfony\RoutingExtension</parameter>
    <parameter key="knp_menu.helper.class">Knp\Menu\Twig\Helper</parameter>
    <parameter key="knp_menu.matcher.class">Knp\Menu\Matcher\Matcher</parameter>
    <parameter key="knp_menu.menu_provider.chain.class">Knp\Menu\Provider\ChainProvider</parameter>
    <parameter key="knp_menu.menu_provider.container_aware.class">Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.menu_provider.builder_alias.class">Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider</parameter>
    <parameter key="knp_menu.renderer_provider.class">Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.renderer.list.class">Knp\Menu\Renderer\ListRenderer</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.listener.voters.class">Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener</parameter>
    <parameter key="knp_menu.voter.router.class">Knp\Menu\Matcher\Voter\RouteVoter</parameter>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">KnpMenuBundle::menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="sonata.admin.manipulator.acl.object.orm.class">Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator</parameter>
    <parameter key="sonata_doctrine_orm_admin.entity_manager">null</parameter>
    <parameter key="sonata_doctrine_orm_admin.templates" type="collection">
      <parameter key="types" type="collection">
        <parameter key="list" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:list_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</parameter>
          <parameter key="date">SonataAdminBundle:CRUD:list_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:list_time.html.twig</parameter>
          <parameter key="datetime">SonataAdminBundle:CRUD:list_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="email">SonataAdminBundle:CRUD:list_email.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="smallint">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="bigint">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="integer">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="decimal">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="currency">SonataAdminBundle:CRUD:list_currency.html.twig</parameter>
          <parameter key="percent">SonataAdminBundle:CRUD:list_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:list_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:list_html.html.twig</parameter>
        </parameter>
        <parameter key="show" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:show_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</parameter>
          <parameter key="date">SonataAdminBundle:CRUD:show_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:show_time.html.twig</parameter>
          <parameter key="datetime">SonataAdminBundle:CRUD:show_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="email">SonataAdminBundle:CRUD:show_email.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="smallint">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="bigint">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="integer">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="decimal">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="currency">SonataAdminBundle:CRUD:show_currency.html.twig</parameter>
          <parameter key="percent">SonataAdminBundle:CRUD:show_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:show_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:show_html.html.twig</parameter>
        </parameter>
      </parameter>
      <parameter key="form" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</parameter>
      </parameter>
      <parameter key="filter" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.twig.extension.x_editable_type_mapping" type="collection">
      <parameter key="choice">select</parameter>
      <parameter key="boolean">select</parameter>
      <parameter key="text">text</parameter>
      <parameter key="textarea">textarea</parameter>
      <parameter key="html">textarea</parameter>
      <parameter key="email">email</parameter>
      <parameter key="string">text</parameter>
      <parameter key="smallint">text</parameter>
      <parameter key="bigint">text</parameter>
      <parameter key="integer">number</parameter>
      <parameter key="decimal">number</parameter>
      <parameter key="currency">number</parameter>
      <parameter key="percent">number</parameter>
      <parameter key="url">url</parameter>
      <parameter key="date">date</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.global_search.empty_boxes">show</parameter>
    <parameter key="sonata.admin.configuration.templates" type="collection">
      <parameter key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</parameter>
      <parameter key="layout">ApplicationSonataAdminBundle::layout.html.twig</parameter>
      <parameter key="add_block">SonataAdminBundle:Core:add_block.html.twig</parameter>
      <parameter key="ajax">SonataAdminBundle::ajax_layout.html.twig</parameter>
      <parameter key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</parameter>
      <parameter key="search">SonataAdminBundle:Core:search.html.twig</parameter>
      <parameter key="list">SonataAdminBundle:CRUD:list.html.twig</parameter>
      <parameter key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      <parameter key="show">SonataAdminBundle:CRUD:show.html.twig</parameter>
      <parameter key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</parameter>
      <parameter key="edit">SonataAdminBundle:CRUD:edit.html.twig</parameter>
      <parameter key="preview">SonataAdminBundle:CRUD:preview.html.twig</parameter>
      <parameter key="history">SonataAdminBundle:CRUD:history.html.twig</parameter>
      <parameter key="acl">SonataAdminBundle:CRUD:acl.html.twig</parameter>
      <parameter key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</parameter>
      <parameter key="action">SonataAdminBundle:CRUD:action.html.twig</parameter>
      <parameter key="select">SonataAdminBundle:CRUD:list__select.html.twig</parameter>
      <parameter key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</parameter>
      <parameter key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</parameter>
      <parameter key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</parameter>
      <parameter key="delete">SonataAdminBundle:CRUD:delete.html.twig</parameter>
      <parameter key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</parameter>
      <parameter key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</parameter>
      <parameter key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</parameter>
      <parameter key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</parameter>
      <parameter key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</parameter>
      <parameter key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</parameter>
      <parameter key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</parameter>
      <parameter key="pager_links">SonataAdminBundle:Pager:links.html.twig</parameter>
      <parameter key="pager_results">SonataAdminBundle:Pager:results.html.twig</parameter>
      <parameter key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</parameter>
      <parameter key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</parameter>
      <parameter key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</parameter>
      <parameter key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</parameter>
      <parameter key="button_create">SonataAdminBundle:Button:create_button.html.twig</parameter>
      <parameter key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</parameter>
      <parameter key="button_history">SonataAdminBundle:Button:history_button.html.twig</parameter>
      <parameter key="button_list">SonataAdminBundle:Button:list_button.html.twig</parameter>
      <parameter key="button_show">SonataAdminBundle:Button:show_button.html.twig</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.admin_services" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_groups" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="settings" type="collection"/>
        <parameter key="type">sonata.admin.block.admin_list</parameter>
        <parameter key="roles" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.sort_admins">false</parameter>
    <parameter key="sonata.admin.configuration.breadcrumbs" type="collection">
      <parameter key="child_admin_route">edit</parameter>
    </parameter>
    <parameter key="sonata.admin.security.acl_user_manager">fos_user.user_manager</parameter>
    <parameter key="sonata.admin.configuration.security.information" type="collection"/>
    <parameter key="sonata.admin.configuration.security.admin_permissions" type="collection">
      <parameter>CREATE</parameter>
      <parameter>LIST</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>EXPORT</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.object_permissions" type="collection">
      <parameter>VIEW</parameter>
      <parameter>EDIT</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
      <parameter>OWNER</parameter>
    </parameter>
    <parameter key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</parameter>
    <parameter key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</parameter>
    <parameter key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</parameter>
    <parameter key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</parameter>
    <parameter key="sonata.admin.extension.map" type="collection">
      <parameter key="admins" type="collection"/>
      <parameter key="excludes" type="collection"/>
      <parameter key="implements" type="collection"/>
      <parameter key="extends" type="collection"/>
      <parameter key="instanceof" type="collection"/>
      <parameter key="uses" type="collection"/>
    </parameter>
    <parameter key="sonata.admin.configuration.filters.persist">false</parameter>
    <parameter key="sonata.admin.configuration.show.mosaic.button">true</parameter>
    <parameter key="sonata.admin.configuration.translate_group_label">false</parameter>
    <parameter key="sonata.seo.block.social.container.class">Sonata\SeoBundle\Block\Social\SocialBlockContainer</parameter>
    <parameter key="sonata.seo.block.email.share_button.class">Sonata\SeoBundle\Block\Social\EmailShareButtonBlockService</parameter>
    <parameter key="sonata.seo.block.facebook.like_box.class">Sonata\SeoBundle\Block\Social\FacebookLikeBoxBlockService</parameter>
    <parameter key="sonata.seo.block.facebook.like_button.class">Sonata\SeoBundle\Block\Social\FacebookLikeButtonBlockService</parameter>
    <parameter key="sonata.seo.block.facebook.send_button.class">Sonata\SeoBundle\Block\Social\FacebookSendButtonBlockService</parameter>
    <parameter key="sonata.seo.block.facebook.share_button.class">Sonata\SeoBundle\Block\Social\FacebookShareButtonBlockService</parameter>
    <parameter key="sonata.seo.block.twitter.share_button.class">Sonata\SeoBundle\Block\Social\TwitterShareButtonBlockService</parameter>
    <parameter key="sonata.seo.block.twitter.follow_button.class">Sonata\SeoBundle\Block\Social\TwitterFollowButtonBlockService</parameter>
    <parameter key="sonata.seo.block.twitter.hashtag_button.class">Sonata\SeoBundle\Block\Social\TwitterHashtagButtonBlockService</parameter>
    <parameter key="sonata.seo.block.twitter.mention_button.class">Sonata\SeoBundle\Block\Social\TwitterMentionButtonBlockService</parameter>
    <parameter key="sonata.seo.block.twitter.embed.class">Sonata\SeoBundle\Block\Social\TwitterEmbedTweetBlockService</parameter>
    <parameter key="sonata.seo.block.pinterest.pin_button.class">Sonata\SeoBundle\Block\Social\PinterestPinButtonBlockService</parameter>
    <parameter key="sonata.seo.block.breadcrumb.homepage.class">Sonata\SeoBundle\Block\Breadcrumb\HomepageBreadcrumbBlockService</parameter>
    <parameter key="sonata.seo.exporter.database_source_iterator.class">Exporter\Source\DoctrineDBALConnectionSourceIterator</parameter>
    <parameter key="sonata.seo.exporter.sitemap_source_iterator.class">Exporter\Source\SymfonySitemapSourceIterator</parameter>
    <parameter key="sonata.seo.page.default.class">Sonata\SeoBundle\Seo\SeoPage</parameter>
    <parameter key="sonata.seo.twig.extension.class">Sonata\SeoBundle\Twig\Extension\SeoExtension</parameter>
    <parameter key="sonata.seo.sitemap.manager.class">Sonata\SeoBundle\Sitemap\SourceManager</parameter>
    <parameter key="sonata.notification.backend">sonata.notification.backend.runtime</parameter>
    <parameter key="sonata.notification.message.class">Application\Sonata\NotificationBundle\Entity\Message</parameter>
    <parameter key="sonata.notification.admin.message.entity">Application\Sonata\NotificationBundle\Entity\Message</parameter>
    <parameter key="sonata.notification.manager.message.entity">Application\Sonata\NotificationBundle\Entity\Message</parameter>
    <parameter key="sonata.notification.event.iteration_listeners" type="collection">
      <parameter>sonata.notification.event.doctrine_optimize</parameter>
    </parameter>
    <parameter key="sonata.notification.admin.message.class">Sonata\NotificationBundle\Admin\MessageAdmin</parameter>
    <parameter key="sonata.notification.admin.message.controller">SonataNotificationBundle:MessageAdmin</parameter>
    <parameter key="sonata.notification.admin.message.translation_domain">SonataNotificationBundle</parameter>
    <parameter key="sonata.page.cms_manager.page.class">Sonata\PageBundle\CmsManager\CmsPageManager</parameter>
    <parameter key="sonata.page.cms_manager.snapshot.class">Sonata\PageBundle\CmsManager\CmsSnapshotManager</parameter>
    <parameter key="sonata.page.cms_manager_selector.class">Sonata\PageBundle\CmsManager\CmsManagerSelector</parameter>
    <parameter key="sonata.page.decorator_strategy.class">Sonata\PageBundle\CmsManager\DecoratorStrategy</parameter>
    <parameter key="sonata.page.response_listener.class">Sonata\PageBundle\Listener\ResponseListener</parameter>
    <parameter key="sonata.page.request_listener.class">Sonata\PageBundle\Listener\RequestListener</parameter>
    <parameter key="sonata.page.site.selector.host.class">Sonata\PageBundle\Site\HostSiteSelector</parameter>
    <parameter key="sonata.page.site.selector.host_by_locale.class">Sonata\PageBundle\Site\HostByLocaleSiteSelector</parameter>
    <parameter key="sonata.page.site.selector.host_with_path.class">Sonata\PageBundle\Site\HostPathSiteSelector</parameter>
    <parameter key="sonata.page.site.selector.host_with_path_by_locale.class">Sonata\PageBundle\Site\HostPathByLocaleSiteSelector</parameter>
    <parameter key="sonata.page.router.class">Sonata\PageBundle\Route\CmsPageRouter</parameter>
    <parameter key="sonata.page.route.page.generator.class">Sonata\PageBundle\Route\RoutePageGenerator</parameter>
    <parameter key="sonata.page.service.manager.class">Sonata\PageBundle\Page\PageServiceManager</parameter>
    <parameter key="sonata.page.template.manager.class">Sonata\PageBundle\Page\TemplateManager</parameter>
    <parameter key="sonata.page.service.default.class">Sonata\PageBundle\Page\Service\DefaultPageService</parameter>
    <parameter key="sonata.page.admin.page.class">Sonata\PageBundle\Admin\PageAdmin</parameter>
    <parameter key="sonata.page.admin.page.controller">SonataPageBundle:PageAdmin</parameter>
    <parameter key="sonata.page.admin.page.translation_domain">SonataPageBundle</parameter>
    <parameter key="sonata.page.admin.site.class">Sonata\PageBundle\Admin\SiteAdmin</parameter>
    <parameter key="sonata.page.admin.site.controller">SonataPageBundle:SiteAdmin</parameter>
    <parameter key="sonata.page.admin.site.translation_domain">SonataPageBundle</parameter>
    <parameter key="sonata.page.admin.block.class">Sonata\PageBundle\Admin\BlockAdmin</parameter>
    <parameter key="sonata.page.admin.block.controller">SonataPageBundle:BlockAdmin</parameter>
    <parameter key="sonata.page.admin.block.translation_domain">SonataPageBundle</parameter>
    <parameter key="sonata.page.admin.shared_block.class">Sonata\PageBundle\Admin\SharedBlockAdmin</parameter>
    <parameter key="sonata.page.admin.shared_block.controller">SonataPageBundle:BlockAdmin</parameter>
    <parameter key="sonata.page.admin.shared_block.translation_domain">SonataPageBundle</parameter>
    <parameter key="sonata.page.admin.snapshot.class">Sonata\PageBundle\Admin\SnapshotAdmin</parameter>
    <parameter key="sonata.page.admin.snapshot.controller">SonataPageBundle:SnapshotAdmin</parameter>
    <parameter key="sonata.page.admin.snapshot.translation_domain">SonataPageBundle</parameter>
    <parameter key="sonata.page.block.container.class">Sonata\PageBundle\Block\ContainerBlockService</parameter>
    <parameter key="sonata.page.block.children_pages.class">Sonata\PageBundle\Block\ChildrenPagesBlockService</parameter>
    <parameter key="sonata.page.block.ajax.class">Sonata\PageBundle\Controller\AjaxController</parameter>
    <parameter key="sonata.page.block.breadcrumb.class">Sonata\PageBundle\Block\BreadcrumbBlockService</parameter>
    <parameter key="sonata.page.block.shared_block.class">Sonata\PageBundle\Block\SharedBlockBlockService</parameter>
    <parameter key="sonata.page.block.pagelist.class">Sonata\PageBundle\Block\PageListBlockService</parameter>
    <parameter key="sonata.page.manager.page.class">Sonata\PageBundle\Entity\PageManager</parameter>
    <parameter key="sonata.page.manager.block.class">Sonata\PageBundle\Entity\BlockManager</parameter>
    <parameter key="sonata.page.manager.snapshot.class">Sonata\PageBundle\Entity\SnapshotManager</parameter>
    <parameter key="sonata.page.manager.site.class">Sonata\PageBundle\Entity\SiteManager</parameter>
    <parameter key="sonata.page.block_interactor.class">Sonata\PageBundle\Entity\BlockInteractor</parameter>
    <parameter key="sonata.page.transformer.class">Sonata\PageBundle\Entity\Transformer</parameter>
    <parameter key="sonata.page.proxy.snapshot.class">Sonata\PageBundle\Model\SnapshotPageProxy</parameter>
    <parameter key="sonata.page.proxy.snapshot.factory.class">Sonata\PageBundle\Model\SnapshotPageProxyFactory</parameter>
    <parameter key="sonata.page.assets" type="collection">
      <parameter key="stylesheets" type="collection">
        <parameter>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</parameter>
        <parameter>bundles/sonatapage/sonata-page.front.css</parameter>
      </parameter>
      <parameter key="javascripts" type="collection">
        <parameter>bundles/sonatacore/vendor/jquery/dist/jquery.min.js</parameter>
        <parameter>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js</parameter>
        <parameter>bundles/sonatapage/sonata-page.front.js</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.page.slugify_service">sonata.core.slugify.native</parameter>
    <parameter key="sonata.page.is_inline_edition_on">false</parameter>
    <parameter key="sonata.page.hide_disabled_blocks">false</parameter>
    <parameter key="sonata.page.site.class">Application\Sonata\PageBundle\Entity\Site</parameter>
    <parameter key="sonata.page.block.class">Application\Sonata\PageBundle\Entity\Block</parameter>
    <parameter key="sonata.page.snapshot.class">Application\Sonata\PageBundle\Entity\Snapshot</parameter>
    <parameter key="sonata.page.page.class">Application\Sonata\PageBundle\Entity\Page</parameter>
    <parameter key="sonata.page.admin.site.entity">Application\Sonata\PageBundle\Entity\Site</parameter>
    <parameter key="sonata.page.admin.block.entity">Application\Sonata\PageBundle\Entity\Block</parameter>
    <parameter key="sonata.page.admin.snapshot.entity">Application\Sonata\PageBundle\Entity\Snapshot</parameter>
    <parameter key="sonata.page.admin.page.entity">Application\Sonata\PageBundle\Entity\Page</parameter>
    <parameter key="cmf_routing.chain_router.class">Symfony\Cmf\Component\Routing\ChainRouter</parameter>
    <parameter key="cmf_routing.replace_symfony_router">true</parameter>
    <parameter key="cmf_routing.route_type_type.class">Symfony\Cmf\Bundle\RoutingBundle\Form\Type\RouteTypeType</parameter>
    <parameter key="cmf_routing.validator.route_defaults.class">Symfony\Cmf\Bundle\RoutingBundle\Validator\Constraints\RouteDefaultsValidator</parameter>
    <parameter key="templating.helper.markdown.class">Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper</parameter>
    <parameter key="sonata.formatter.text.markdown.class">Sonata\FormatterBundle\Formatter\MarkdownFormatter</parameter>
    <parameter key="sonata.formatter.text.text.class">Sonata\FormatterBundle\Formatter\TextFormatter</parameter>
    <parameter key="sonata.formatter.text.raw.class">Sonata\FormatterBundle\Formatter\RawFormatter</parameter>
    <parameter key="sonata.formatter.text.twigengine.class">Sonata\FormatterBundle\Formatter\TwigFormatter</parameter>
    <parameter key="sonata.formatter.block.formatter.class">Sonata\FormatterBundle\Block\FormatterBlockService</parameter>
    <parameter key="sonata.formatter.ckeditor.extension.class">Sonata\FormatterBundle\Admin\CkeditorAdminExtension</parameter>
    <parameter key="sonata.formatter.ckeditor.configuration.templates" type="collection">
      <parameter key="browser">SonataFormatterBundle:Ckeditor:browser.html.twig</parameter>
      <parameter key="upload">SonataFormatterBundle:Ckeditor:upload.html.twig</parameter>
    </parameter>
    <parameter key="fos_user.validator.password.class">FOS\UserBundle\Validator\PasswordValidator</parameter>
    <parameter key="fos_user.validator.unique.class">FOS\UserBundle\Validator\UniqueValidator</parameter>
    <parameter key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\Security\InteractiveLoginListener</parameter>
    <parameter key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</parameter>
    <parameter key="fos_user.resetting.email.template">FOSUserBundle:Resetting:email.txt.twig</parameter>
    <parameter key="fos_user.registration.confirmation.template">FOSUserBundle:Registration:email.txt.twig</parameter>
    <parameter key="fos_user.storage">orm</parameter>
    <parameter key="fos_user.firewall_name">main</parameter>
    <parameter key="fos_user.model_manager_name">null</parameter>
    <parameter key="fos_user.model.user.class">Application\Sonata\UserBundle\Entity\User</parameter>
    <parameter key="fos_user.template.engine">twig</parameter>
    <parameter key="fos_user.profile.form.type">fos_user_profile</parameter>
    <parameter key="fos_user.profile.form.name">fos_user_profile_form</parameter>
    <parameter key="fos_user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.from_email" type="collection">
      <parameter key="webmaster@example.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.enabled">false</parameter>
    <parameter key="fos_user.registration.form.type">fos_user_registration</parameter>
    <parameter key="fos_user.registration.form.name">fos_user_registration_form</parameter>
    <parameter key="fos_user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.change_password.form.type">fos_user_change_password</parameter>
    <parameter key="fos_user.change_password.form.name">fos_user_change_password_form</parameter>
    <parameter key="fos_user.change_password.form.validation_groups" type="collection">
      <parameter>ChangePassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.resetting.email.from_email" type="collection">
      <parameter key="webmaster@example.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.resetting.token_ttl">86400</parameter>
    <parameter key="fos_user.resetting.form.type">fos_user_resetting</parameter>
    <parameter key="fos_user.resetting.form.name">fos_user_resetting_form</parameter>
    <parameter key="fos_user.resetting.form.validation_groups" type="collection">
      <parameter>ResetPassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.group_manager.class">FOS\UserBundle\Doctrine\GroupManager</parameter>
    <parameter key="fos_user.model.group.class">Application\Sonata\UserBundle\Entity\Group</parameter>
    <parameter key="fos_user.group.form.type">fos_user_group</parameter>
    <parameter key="fos_user.group.form.name">fos_user_group_form</parameter>
    <parameter key="fos_user.group.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="sonata.user.admin.groupname">sonata_user</parameter>
    <parameter key="sonata.user.admin.label_catalogue">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.groupicon">&lt;i class='fa fa-users'&gt;&lt;/i&gt;</parameter>
    <parameter key="sonata.user.block.breadcrumb_index.class">Sonata\UserBundle\Block\Breadcrumb\UserIndexBreadcrumbBlockService</parameter>
    <parameter key="sonata.user.block.breadcrumb_profile.class">Sonata\UserBundle\Block\Breadcrumb\UserProfileBreadcrumbBlockService</parameter>
    <parameter key="security.acl.user_voter.class">Sonata\UserBundle\Security\Authorization\Voter\UserAclVoter</parameter>
    <parameter key="sonata.user.admin.user.class">Sonata\UserBundle\Admin\Entity\UserAdmin</parameter>
    <parameter key="sonata.user.admin.group.class">Sonata\UserBundle\Admin\Entity\GroupAdmin</parameter>
    <parameter key="sonata.user.admin.user.entity">Application\Sonata\UserBundle\Entity\User</parameter>
    <parameter key="sonata.user.admin.group.entity">Application\Sonata\UserBundle\Entity\Group</parameter>
    <parameter key="sonata.user.admin.user.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.group.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.user.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.user.admin.group.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.user.default_avatar">bundles/sonatauser/default_avatar.png</parameter>
    <parameter key="sonata.user.impersonating">false</parameter>
    <parameter key="sonata.user.google.authenticator.enabled">false</parameter>
    <parameter key="sonata.user.profile.form.type">sonata_user_profile</parameter>
    <parameter key="sonata.user.profile.form.name">sonata_user_profile_form</parameter>
    <parameter key="sonata.user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="sonata.user.register.confirm.redirect_route">sonata_user_profile_show</parameter>
    <parameter key="sonata.user.register.confirm.redirect_route_params" type="collection"/>
    <parameter key="sonata.user.configuration.profile_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="settings" type="collection">
          <parameter key="content">&lt;h2&gt;Welcome!&lt;/h2&gt; This is a sample user profile dashboard, feel free to override it in the configuration!</parameter>
        </parameter>
        <parameter key="type">sonata.block.service.text</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.user.registration.form.options" type="collection"/>
    <parameter key="sonata.user.registration.form.type">sonata_user_registration</parameter>
    <parameter key="sonata.user.registration.form.name">sonata_user_registration_form</parameter>
    <parameter key="sonata.user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="sonata.media.provider.image.class">Sonata\MediaBundle\Provider\ImageProvider</parameter>
    <parameter key="sonata.media.provider.file.class">Sonata\MediaBundle\Provider\FileProvider</parameter>
    <parameter key="sonata.media.provider.youtube.class">Sonata\MediaBundle\Provider\YouTubeProvider</parameter>
    <parameter key="sonata.media.provider.dailymotion.class">Sonata\MediaBundle\Provider\DailyMotionProvider</parameter>
    <parameter key="sonata.media.provider.vimeo.class">Sonata\MediaBundle\Provider\VimeoProvider</parameter>
    <parameter key="sonata.media.thumbnail.format">Sonata\MediaBundle\Thumbnail\FormatThumbnail</parameter>
    <parameter key="sonata.media.thumbnail.format.default">jpg</parameter>
    <parameter key="sonata.media.thumbnail.liip_imagine">Sonata\MediaBundle\Thumbnail\LiipImagineThumbnail</parameter>
    <parameter key="sonata.media.pool.class">Sonata\MediaBundle\Provider\Pool</parameter>
    <parameter key="sonata.media.resizer.simple.class">Sonata\MediaBundle\Resizer\SimpleResizer</parameter>
    <parameter key="sonata.media.resizer.square.class">Sonata\MediaBundle\Resizer\SquareResizer</parameter>
    <parameter key="sonata.media.adapter.image.gd.class">Imagine\Gd\Imagine</parameter>
    <parameter key="sonata.media.adapter.image.imagick.class">Imagine\Imagick\Imagine</parameter>
    <parameter key="sonata.media.adapter.image.gmagick.class">Imagine\Gmagick\Imagine</parameter>
    <parameter key="sonata.media.metadata.proxy.class">Sonata\MediaBundle\Metadata\ProxyMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.amazon.class">Sonata\MediaBundle\Metadata\AmazonMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.noop.class">Sonata\MediaBundle\Metadata\NoopMetadataBuilder</parameter>
    <parameter key="sonata.media.adapater.filesystem.opencloud.class"></parameter>
    <parameter key="sonata.media.block.media.class">Sonata\MediaBundle\Block\MediaBlockService</parameter>
    <parameter key="sonata.media.block.feature_media.class">Sonata\MediaBundle\Block\FeatureMediaBlockService</parameter>
    <parameter key="sonata.media.block.gallery.class">Sonata\MediaBundle\Block\GalleryBlockService</parameter>
    <parameter key="sonata.media.block.gallery_list.class">Sonata\MediaBundle\Block\GalleryListBlockService</parameter>
    <parameter key="sonata.media.block.breadcrumb_view.class">Sonata\MediaBundle\Block\Breadcrumb\GalleryViewBreadcrumbBlockService</parameter>
    <parameter key="sonata.media.block.breadcrumb_index.class">Sonata\MediaBundle\Block\Breadcrumb\GalleryIndexBreadcrumbBlockService</parameter>
    <parameter key="sonata.media.block.breadcrumb_media.class">Sonata\MediaBundle\Block\Breadcrumb\MediaViewBreadcrumbBlockService</parameter>
    <parameter key="sonata.media.manager.media.class">Sonata\MediaBundle\Entity\MediaManager</parameter>
    <parameter key="sonata.media.manager.gallery.class">Sonata\MediaBundle\Entity\GalleryManager</parameter>
    <parameter key="sonata.media.admin.groupname">sonata_media</parameter>
    <parameter key="sonata.media.admin.groupicon">&lt;i class='fa fa-image'&gt;&lt;/i&gt;</parameter>
    <parameter key="sonata.media.admin.media.class">Sonata\MediaBundle\Admin\ORM\MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.controller">SonataMediaBundle:MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery.class">Sonata\MediaBundle\Admin\GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.controller">SonataMediaBundle:GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.class">Sonata\MediaBundle\Admin\GalleryHasMediaAdmin</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin_format" type="collection">
      <parameter key="width">200</parameter>
      <parameter key="height">false</parameter>
      <parameter key="quality">90</parameter>
      <parameter key="format">jpg</parameter>
      <parameter key="constraint">true</parameter>
    </parameter>
    <parameter key="sonata.media.resizer.simple.adapter.mode">inset</parameter>
    <parameter key="sonata.media.resizer.square.adapter.mode">inset</parameter>
    <parameter key="sonata.media.admin.media.entity">Application\Sonata\MediaBundle\Entity\Media</parameter>
    <parameter key="sonata.media.admin.gallery.entity">Application\Sonata\MediaBundle\Entity\Gallery</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.entity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</parameter>
    <parameter key="sonata.media.media.class">Application\Sonata\MediaBundle\Entity\Media</parameter>
    <parameter key="sonata.media.gallery.class">Application\Sonata\MediaBundle\Entity\Gallery</parameter>
    <parameter key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</parameter>
    <parameter key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</parameter>
    <parameter key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</parameter>
    <parameter key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_phpcr_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</parameter>
    <parameter key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\CamelCaseNamingStrategy</parameter>
    <parameter key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</parameter>
    <parameter key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</parameter>
    <parameter key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</parameter>
    <parameter key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</parameter>
    <parameter key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</parameter>
    <parameter key="jms_serializer.serializer.class">JMS\Serializer\Serializer</parameter>
    <parameter key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</parameter>
    <parameter key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.class">JMS\Serializer\JsonSerializationVisitor</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.options">0</parameter>
    <parameter key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
    <parameter key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</parameter>
    <parameter key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</parameter>
    <parameter key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</parameter>
    <parameter key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</parameter>
    <parameter key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</parameter>
    <parameter key="jms_serializer.form_error_handler.class">JMS\Serializer\Handler\FormErrorHandler</parameter>
    <parameter key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</parameter>
    <parameter key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</parameter>
    <parameter key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</parameter>
    <parameter key="jms_serializer.infer_types_from_doctrine_metadata">true</parameter>
    <parameter key="assetic.asset_factory.class">Symfony\Bundle\AsseticBundle\Factory\AssetFactory</parameter>
    <parameter key="assetic.asset_manager.class">Assetic\Factory\LazyAssetManager</parameter>
    <parameter key="assetic.asset_manager_cache_warmer.class">Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer</parameter>
    <parameter key="assetic.cached_formula_loader.class">Assetic\Factory\Loader\CachedFormulaLoader</parameter>
    <parameter key="assetic.config_cache.class">Assetic\Cache\ConfigCache</parameter>
    <parameter key="assetic.config_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader</parameter>
    <parameter key="assetic.config_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource</parameter>
    <parameter key="assetic.coalescing_directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource</parameter>
    <parameter key="assetic.directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource</parameter>
    <parameter key="assetic.filter_manager.class">Symfony\Bundle\AsseticBundle\FilterManager</parameter>
    <parameter key="assetic.worker.ensure_filter.class">Assetic\Factory\Worker\EnsureFilterWorker</parameter>
    <parameter key="assetic.worker.cache_busting.class">Assetic\Factory\Worker\CacheBustingWorker</parameter>
    <parameter key="assetic.value_supplier.class">Symfony\Bundle\AsseticBundle\DefaultValueSupplier</parameter>
    <parameter key="assetic.node.paths" type="collection"/>
    <parameter key="assetic.cache_dir">C:/wamp/www/Aparchi/app/cache/dev/assetic</parameter>
    <parameter key="assetic.bundles" type="collection"/>
    <parameter key="assetic.twig_extension.class">Symfony\Bundle\AsseticBundle\Twig\AsseticExtension</parameter>
    <parameter key="assetic.twig_formula_loader.class">Assetic\Extension\Twig\TwigFormulaLoader</parameter>
    <parameter key="assetic.helper.dynamic.class">Symfony\Bundle\AsseticBundle\Templating\DynamicAsseticHelper</parameter>
    <parameter key="assetic.helper.static.class">Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper</parameter>
    <parameter key="assetic.php_formula_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\AsseticHelperFormulaLoader</parameter>
    <parameter key="assetic.debug">true</parameter>
    <parameter key="assetic.use_controller">false</parameter>
    <parameter key="assetic.enable_profiler">false</parameter>
    <parameter key="assetic.read_from">C:\wamp\www\Aparchi\app/../web</parameter>
    <parameter key="assetic.write_to">C:\wamp\www\Aparchi\app/../web</parameter>
    <parameter key="assetic.variables" type="collection"/>
    <parameter key="assetic.java.bin">C:\ProgramData\Oracle\Java\javapath\java.EXE</parameter>
    <parameter key="assetic.node.bin">/usr/bin/node</parameter>
    <parameter key="assetic.ruby.bin">/usr/bin/ruby</parameter>
    <parameter key="assetic.sass.bin">/usr/bin/sass</parameter>
    <parameter key="assetic.reactjsx.bin">/usr/bin/jsx</parameter>
    <parameter key="assetic.filter.scssphp.class">Assetic\Filter\ScssphpFilter</parameter>
    <parameter key="assetic.filter.scssphp.import_paths" type="collection"/>
    <parameter key="assetic.filter.scssphp.compass">false</parameter>
    <parameter key="assetic.filter.scssphp.variables" type="collection"/>
    <parameter key="assetic.filter.scssphp.formatter">Leafo\ScssPhp\Formatter\Compressed</parameter>
    <parameter key="assetic.filter.cssrewrite.class">Assetic\Filter\CssRewriteFilter</parameter>
    <parameter key="assetic.twig_extension.functions" type="collection"/>
    <parameter key="web_profiler.controller.profiler.class">Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController</parameter>
    <parameter key="web_profiler.controller.router.class">Symfony\Bundle\WebProfilerBundle\Controller\RouterController</parameter>
    <parameter key="web_profiler.controller.exception.class">Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.extension.webprofiler.class">Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension</parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="web_profiler.debug_toolbar.class">Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="sensio_distribution.webconfigurator.class">Sensio\Bundle\DistributionBundle\Configurator\Configurator</parameter>
    <parameter key="sensio_distribution.webconfigurator.doctrine_step.class">Sensio\Bundle\DistributionBundle\Configurator\Step\DoctrineStep</parameter>
    <parameter key="sensio_distribution.webconfigurator.secret_step.class">Sensio\Bundle\DistributionBundle\Configurator\Step\SecretStep</parameter>
    <parameter key="sensio_distribution.security_checker.class">SensioLabs\Security\SecurityChecker</parameter>
    <parameter key="sensio_distribution.security_checker.command.class">SensioLabs\Security\Command\SecurityCheckerCommand</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="sonata.block.data_collector" type="collection">
        <parameter>block</parameter>
        <parameter>SonataBlockBundle:Profiler:block.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>sensio_distribution.security_checker.command</parameter>
    </parameter>
    <parameter key="sonata.core.form.types" type="collection">
      <parameter>form.type.form</parameter>
      <parameter>form.type.birthday</parameter>
      <parameter>form.type.checkbox</parameter>
      <parameter>form.type.choice</parameter>
      <parameter>form.type.collection</parameter>
      <parameter>form.type.country</parameter>
      <parameter>form.type.date</parameter>
      <parameter>form.type.datetime</parameter>
      <parameter>form.type.email</parameter>
      <parameter>form.type.file</parameter>
      <parameter>form.type.hidden</parameter>
      <parameter>form.type.integer</parameter>
      <parameter>form.type.language</parameter>
      <parameter>form.type.locale</parameter>
      <parameter>form.type.money</parameter>
      <parameter>form.type.number</parameter>
      <parameter>form.type.password</parameter>
      <parameter>form.type.percent</parameter>
      <parameter>form.type.radio</parameter>
      <parameter>form.type.range</parameter>
      <parameter>form.type.repeated</parameter>
      <parameter>form.type.search</parameter>
      <parameter>form.type.textarea</parameter>
      <parameter>form.type.text</parameter>
      <parameter>form.type.time</parameter>
      <parameter>form.type.timezone</parameter>
      <parameter>form.type.url</parameter>
      <parameter>form.type.button</parameter>
      <parameter>form.type.submit</parameter>
      <parameter>form.type.reset</parameter>
      <parameter>form.type.currency</parameter>
      <parameter>form.type.entity</parameter>
      <parameter>sonata.core.form.type.array</parameter>
      <parameter>sonata.core.form.type.boolean</parameter>
      <parameter>sonata.core.form.type.collection</parameter>
      <parameter>sonata.core.form.type.translatable_choice</parameter>
      <parameter>sonata.core.form.type.date_range</parameter>
      <parameter>sonata.core.form.type.datetime_range</parameter>
      <parameter>sonata.core.form.type.date_picker</parameter>
      <parameter>sonata.core.form.type.datetime_picker</parameter>
      <parameter>sonata.core.form.type.date_range_picker</parameter>
      <parameter>sonata.core.form.type.datetime_range_picker</parameter>
      <parameter>sonata.core.form.type.equal</parameter>
      <parameter>sonata.core.form.type.color_selector</parameter>
      <parameter>sonata.core.form.type.color</parameter>
      <parameter>sonata.block.form.type.block</parameter>
      <parameter>sonata.block.form.type.container_template</parameter>
      <parameter>sonata.admin.form.type.admin</parameter>
      <parameter>sonata.admin.form.type.model_choice</parameter>
      <parameter>sonata.admin.form.type.model_list</parameter>
      <parameter>sonata.admin.form.type.model_reference</parameter>
      <parameter>sonata.admin.form.type.model_hidden</parameter>
      <parameter>sonata.admin.form.type.model_autocomplete</parameter>
      <parameter>sonata.admin.form.type.collection</parameter>
      <parameter>sonata.admin.doctrine_orm.form.type.choice_field_mask</parameter>
      <parameter>sonata.admin.form.filter.type.number</parameter>
      <parameter>sonata.admin.form.filter.type.choice</parameter>
      <parameter>sonata.admin.form.filter.type.default</parameter>
      <parameter>sonata.admin.form.filter.type.date</parameter>
      <parameter>sonata.admin.form.filter.type.daterange</parameter>
      <parameter>sonata.admin.form.filter.type.datetime</parameter>
      <parameter>sonata.admin.form.filter.type.datetime_range</parameter>
      <parameter>sonata.page.form.type.page_selector</parameter>
      <parameter>sonata.page.form.create_snapshot</parameter>
      <parameter>sonata.page.form.template_choice</parameter>
      <parameter>sonata.page.form.page_type_choice</parameter>
      <parameter>cmf_routing.route_type_form_type</parameter>
      <parameter>ivory_ck_editor.form.type</parameter>
      <parameter>sonata.formatter.form.type.selector</parameter>
      <parameter>sonata.formatter.form.type.simple</parameter>
      <parameter>fos_user.username_form_type</parameter>
      <parameter>fos_user.profile.form.type</parameter>
      <parameter>fos_user.registration.form.type</parameter>
      <parameter>fos_user.change_password.form.type</parameter>
      <parameter>fos_user.resetting.form.type</parameter>
      <parameter>fos_user.group.form.type</parameter>
      <parameter>sonata.user.form.type.security_roles</parameter>
      <parameter>sonata.user.profile.form.type</parameter>
      <parameter>sonata.user.form.gender_list</parameter>
      <parameter>sonata.user.registration.form.type</parameter>
      <parameter>sonata.media.form.type.media</parameter>
    </parameter>
    <parameter key="sonata.core.form.type_extensions" type="collection">
      <parameter>form.type_extension.form.http_foundation</parameter>
      <parameter>form.type_extension.form.validator</parameter>
      <parameter>form.type_extension.repeated.validator</parameter>
      <parameter>form.type_extension.submit.validator</parameter>
      <parameter>form.type_extension.upload.validator</parameter>
      <parameter>form.type_extension.csrf</parameter>
      <parameter>form.type_extension.form.data_collector</parameter>
      <parameter>sonata.admin.form.extension.field</parameter>
      <parameter>sonata.admin.form.extension.field.mopa</parameter>
      <parameter>sonata.admin.form.extension.choice</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="admin.first" class="BackOfficeBundle\Admin\FirstAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Ap Architecture" label="L'agencee" icon="&lt;i class=&quot;fa fa-map&quot;&gt;&lt;/i&gt;"/>
      <argument>admin.first</argument>
      <argument>BackOfficeBundle\Entity\First</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>L'agencee</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="admin.second" class="BackOfficeBundle\Admin\SecondAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Ap Architecture" label="Pourquoi" icon="&lt;i class=&quot;fa fa-map&quot;&gt;&lt;/i&gt;"/>
      <argument>admin.second</argument>
      <argument>BackOfficeBundle\Entity\Second</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Pourquoi</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="admin.third" class="BackOfficeBundle\Admin\ThirdAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Ap Architecture" label="Missions" icon="&lt;i class=&quot;fa fa-map&quot;&gt;&lt;/i&gt;"/>
      <argument>admin.third</argument>
      <argument>BackOfficeBundle\Entity\Third</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Missions</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="admin.fourth" class="BackOfficeBundle\Admin\FourthAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Ap Architecture" label="Réalisations" icon="&lt;i class=&quot;fa fa-map&quot;&gt;&lt;/i&gt;"/>
      <argument>admin.fourth</argument>
      <argument>BackOfficeBundle\Entity\Fourth</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Réalisations</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="admin.slide" class="BackOfficeBundle\Admin\SlideAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Sliders" label="Slide" icon="&lt;i class=&quot;fa fa-caret-square-o-right&quot;&gt;&lt;/i&gt;"/>
      <argument>admin.slide</argument>
      <argument>BackOfficeBundle\Entity\Slide</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Slide</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">BackOfficeBundle::slideedit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="admin.slider" class="BackOfficeBundle\Admin\SliderAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Sliders" label="Slider" icon="&lt;i class=&quot;fa fa-caret-square-o-right&quot;&gt;&lt;/i&gt;"/>
      <argument>admin.slider</argument>
      <argument>BackOfficeBundle\Entity\Slider</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Slider</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="controller_resolver" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="cmf_routing.router" on-invalid="ignore"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument>false</argument>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="20"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>C:\wamp\www\Aparchi\app/Resources</argument>
              </service>
            </argument>
            <argument type="service" id="templating.locator"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="10"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
        <argument type="service" id="kernel.class_cache.cache_warmer"/>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="translator.default"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="cmf_routing.router"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="service_container"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>C:\wamp\www\Aparchi\app/Resources</argument>
              </service>
            </argument>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="service_container"/>
            <argument type="service">
              <service class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
                <argument type="service" id="kernel"/>
                <argument>C:\wamp\www\Aparchi\app</argument>
                <argument type="collection"/>
              </service>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="doctrine"/>
          </service>
        </argument>
        <argument type="service" id="sonata.admin.route.cache_warmup"/>
      </argument>
    </service>
    <service id="kernel.class_cache.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer">
      <tag name="kernel.cache_warmer"/>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection"/>
    </service>
    <service id="request" scope="request" synthetic="true" synchronized="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 2.7 and will be removed in 3.0. Use the "request_stack" service instead.</deprecated>
    </service>
    <service id="service_container" synthetic="true">
      <autowiring-type>Symfony\Component\DependencyInjection\ContainerInterface</autowiring-type>
      <autowiring-type>Symfony\Component\DependencyInjection\Container</autowiring-type>
    </service>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>C:\wamp\www\Aparchi\app/Resources</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
            <tag name="config_cache.resource_checker" priority="-990"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Config\Resource\BCResourceInterfaceChecker" public="false">
            <tag name="config_cache.resource_checker" priority="-1000"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <call method="addRendererService">
        <argument>inline</argument>
        <argument>fragment.renderer.inline</argument>
      </call>
      <call method="addRendererService">
        <argument>hinclude</argument>
        <argument>fragment.renderer.hinclude</argument>
      </call>
      <call method="addRendererService">
        <argument>hinclude</argument>
        <argument>fragment.renderer.hinclude</argument>
      </call>
      <call method="addRendererService">
        <argument>esi</argument>
        <argument>fragment.renderer.esi</argument>
      </call>
      <call method="addRendererService">
        <argument>ssi</argument>
        <argument>fragment.renderer.ssi</argument>
      </call>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.ssi" class="Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="ssi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\Translation\MessageSelector" public="false"/>
      </argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">C:/wamp/www/Aparchi/app/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ar.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.ar.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.ar.xliff</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.az.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.az.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.az.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.bg.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.bg.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.bg.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.bg.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.bg.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.bg.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.bg.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.bg.xliff</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ca.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.ca.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.ca.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.ca.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.ca.xliff</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.cs.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.cs.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.cs.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/translations\SonataNotificationBundle.cs.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.cs.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.cs.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.cs.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.cs.xliff</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.da.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.da.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.da.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.da.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.da.yml</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.de.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.de.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.de.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.de.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\block-bundle/Resources/translations\SonataBlockBundle.de.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.de.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\seo-bundle/Resources/translations\SonataSeoBundle.de.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/translations\SonataNotificationBundle.de.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.de.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\validators.de.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony-cmf\routing-bundle/Resources/translations\CmfRoutingBundle.de.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.de.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.de.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.de.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.de.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.de.xliff</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.el.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.el.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.en.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.en.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.en.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.en.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\block-bundle/Resources/translations\SonataBlockBundle.en.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.en.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\seo-bundle/Resources/translations\SonataSeoBundle.en.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/translations\SonataNotificationBundle.en.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.en.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\validators.en.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony-cmf\routing-bundle/Resources/translations\CmfRoutingBundle.en.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.en.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.en.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.en.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\FOSUserBundle.en.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.en.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.en.xliff</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.es.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.es.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.es.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.es.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.es.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/translations\SonataNotificationBundle.es.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.es.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\validators.es.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.es.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.es.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.es.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.es.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.es.xliff</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.et.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.et.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.et.yml</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.eu.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.eu.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.eu.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.eu.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.eu.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.eu.yml</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.fa.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.fa.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.fa.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.fa.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.fa.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.fa.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.fa.xliff</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.fi.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.fi.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.fi.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.fi.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.fi.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\FOSUserBundle.fi.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.fi.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.fi.xliff</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.fr.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\block-bundle/Resources/translations\SonataBlockBundle.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\seo-bundle/Resources/translations\SonataSeoBundle.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/translations\SonataNotificationBundle.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\validators.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony-cmf\routing-bundle/Resources/translations\CmfRoutingBundle.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.fr.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.fr.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\FOSUserBundle.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.fr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\app/Resources/translations\messages.fr.xliff</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.he.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.he.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.hr.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.hr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.hr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.hr.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.hr.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\FOSUserBundle.hr.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.hr.xliff</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.hu.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.hu.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\block-bundle/Resources/translations\SonataBlockBundle.hu.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.hu.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.hu.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\validators.hu.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.hu.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.hu.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.hu.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.hu.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.hu.xliff</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.hy.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.id.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.id.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.it.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.it.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.it.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.it.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\block-bundle/Resources/translations\SonataBlockBundle.it.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.it.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\seo-bundle/Resources/translations\SonataSeoBundle.it.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/translations\SonataNotificationBundle.it.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.it.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\validators.it.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony-cmf\routing-bundle/Resources/translations\CmfRoutingBundle.it.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.it.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.it.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.it.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\FOSUserBundle.it.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.it.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.it.xliff</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ja.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.ja.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.ja.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.ja.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\validators.ja.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.ja.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.ja.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.ja.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.ja.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.ja.xliff</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.lb.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.lb.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.lb.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.lb.yml</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.lt.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.lt.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.lt.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.lt.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.lt.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.lt.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.lt.xliff</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.lv.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.lv.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.lv.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.lv.yml</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.mn.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.mn.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.nl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.nl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.nl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\seo-bundle/Resources/translations\SonataSeoBundle.nl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/translations\SonataNotificationBundle.nl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.nl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\validators.nl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony-cmf\routing-bundle/Resources/translations\CmfRoutingBundle.nl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.nl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.nl.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.nl.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.nl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.nl.xliff</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.no.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.no.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.no.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.no.xliff</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.pl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.pl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.pl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony-cmf\routing-bundle/Resources/translations\CmfRoutingBundle.pl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.pl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.pl.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.pl.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.pl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.pl.xliff</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.pt.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.pt.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.pt.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.pt.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.pt.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.pt.xliff</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.pt_BR.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.pt_BR.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.pt_BR.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.pt_BR.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\validators.pt_BR.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.pt_BR.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.pt_BR.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.pt_BR.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.pt_BR.xliff</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ro.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.ro.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.ro.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.ro.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.ro.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.ro.xliff</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ru.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.ru.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.ru.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.ru.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.ru.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.ru.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.ru.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.ru.xliff</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sk.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.sk.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.sk.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/translations\SonataNotificationBundle.sk.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.sk.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\validators.sk.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.sk.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.sk.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.sk.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.sk.xliff</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.sl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.sl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/translations\SonataNotificationBundle.sl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\SonataPageBundle.sl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/translations\validators.sl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/translations\SonataFormatterBundle.sl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.sl.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.sl.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.sl.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.sl.xliff</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sr_Latn.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.sr_Latn.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.sr_Latn.yml</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sv.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.sv.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.sv.yml</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.th.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.th.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.tr.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.tr.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.tr.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.tr.yml</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.uk.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.uk.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.uk.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.uk.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.uk.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.uk.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.uk.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/translations\SonataMediaBundle.uk.xliff</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.vi.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.zh_CN.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.zh_CN.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.zh_CN.xliff</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.zh_CN.yml</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\validators.zh_CN.yml</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.zh_TW.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.zh_TW.xliff</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.pt_PT.xlf</argument>
            <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/translations\FOSUserBundle.pt_PT.yml</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ua.xlf</argument>
          </argument>
          <argument key="sv_SE" type="collection">
            <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.sv_SE.xliff</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
      <autowiring-type>Symfony\Component\Translation\TranslatorInterface</autowiring-type>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="cookie_httponly">true</argument>
        <argument key="gc_probability">1</argument>
      </argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="security.secure_random" class="Symfony\Component\Security\Core\Util\SecureRandom">
      <deprecated>The "%service_id%" service is deprecated since Symfony 2.8 and will be removed in 3.0. Use the random_bytes() function instead.</deprecated>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service">
        <service class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
      </argument>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type" alias="form"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType">
      <tag name="form.type" alias="birthday"/>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType">
      <tag name="form.type" alias="checkbox"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type" alias="choice"/>
      <argument type="service">
        <service class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
          <argument type="service">
            <service class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
              <argument type="service">
                <service class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
              </argument>
              <argument type="service" id="property_accessor"/>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType">
      <tag name="form.type" alias="collection"/>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType">
      <tag name="form.type" alias="country"/>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType">
      <tag name="form.type" alias="date"/>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType">
      <tag name="form.type" alias="datetime"/>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType">
      <tag name="form.type" alias="email"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <tag name="form.type" alias="file"/>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType">
      <tag name="form.type" alias="hidden"/>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType">
      <tag name="form.type" alias="integer"/>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType">
      <tag name="form.type" alias="language"/>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType">
      <tag name="form.type" alias="locale"/>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType">
      <tag name="form.type" alias="money"/>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType">
      <tag name="form.type" alias="number"/>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType">
      <tag name="form.type" alias="password"/>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType">
      <tag name="form.type" alias="percent"/>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType">
      <tag name="form.type" alias="radio"/>
    </service>
    <service id="form.type.range" class="Symfony\Component\Form\Extension\Core\Type\RangeType">
      <tag name="form.type" alias="range"/>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType">
      <tag name="form.type" alias="repeated"/>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType">
      <tag name="form.type" alias="search"/>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType">
      <tag name="form.type" alias="textarea"/>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType">
      <tag name="form.type" alias="text"/>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType">
      <tag name="form.type" alias="time"/>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType">
      <tag name="form.type" alias="timezone"/>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType">
      <tag name="form.type" alias="url"/>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType">
      <tag name="form.type" alias="button"/>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType">
      <tag name="form.type" alias="submit"/>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType">
      <tag name="form.type" alias="reset"/>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType">
      <tag name="form.type" alias="currency"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service">
        <service class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
          <argument type="service" id="form.server_params"/>
        </service>
      </argument>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\RepeatedType" extended-type="Symfony\Component\Form\Extension\Core\Type\RepeatedType"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator"/>
      <argument>validators</argument>
    </service>
    <service id="form.csrf_provider" class="Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter">
      <argument type="service" id="security.csrf.token_manager"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 2.4 and will be removed in 3.0. Use the "security.csrf.token_manager" service instead.</deprecated>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
          <argument type="service" id="session"/>
        </service>
      </argument>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service">
        <service class="Symfony\Component\Asset\PathPackage" public="false">
          <argument></argument>
          <argument type="service">
            <service class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
          </argument>
          <argument type="service" id="assets.context"/>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>C:/wamp/www/Aparchi/app/cache/dev</argument>
    </service>
    <service id="templating.helper.assets" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper">
      <tag name="templating.helper" alias="assets"/>
      <argument type="service" id="assets.packages"/>
      <argument type="collection"/>
    </service>
    <service id="templating.helper.router" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper">
      <tag name="templating.helper" alias="router"/>
      <argument type="service" id="cmf_routing.router"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/config/validation.xml</argument>
          <argument>C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/config/validation.xml</argument>
          <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/config/validation.xml</argument>
          <argument>C:\wamp\www\Aparchi\vendor\symfony-cmf\routing-bundle/Resources/config/validation.xml</argument>
          <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/config/validation.xml</argument>
          <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotation_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
          <argument type="service">
            <service class="FOS\UserBundle\Validator\Initializer" public="false">
              <tag name="validator.initializer"/>
              <argument type="service" id="fos_user.user_manager"/>
            </service>
          </argument>
        </argument>
      </call>
      <call method="addXmlMapping">
        <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle\DependencyInjection\Compiler/../../Resources/config/storage-validation/orm.xml</argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="validator.expression">validator.expression</argument>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator">validator.expression</argument>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator">validator.email</argument>
        <argument key="security.validator.user_password">security.validator.user_password</argument>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">security.validator.user_password</argument>
        <argument key="doctrine.orm.validator.unique">doctrine.orm.validator.unique</argument>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">doctrine.orm.validator.unique</argument>
        <argument key="sonata.core.validator.inline">sonata.core.validator.inline</argument>
        <argument key="Sonata\CoreBundle\Validator\InlineValidator">sonata.admin.validator.inline</argument>
        <argument key="sonata.admin.validator.inline">sonata.admin.validator.inline</argument>
        <argument key="sonata.page.validator.unique_url">sonata.page.validator.unique_url</argument>
        <argument key="Sonata\PageBundle\Validator\UniqueUrlValidator">sonata.page.validator.unique_url</argument>
        <argument key="cmf_routing.validator.route_defaults">cmf_routing.validator.route_defaults</argument>
        <argument key="Symfony\Cmf\Bundle\RoutingBundle\Validator\Constraints\RouteDefaultsValidator">cmf_routing.validator.route_defaults</argument>
        <argument key="sonata.formatter.validator.formatter">sonata.formatter.validator.formatter</argument>
        <argument key="Sonata\FormatterBundle\Validator\Constraints\FormatterValidator">sonata.formatter.validator.formatter</argument>
        <argument key="sonata.media.validator.format">sonata.media.validator.format</argument>
        <argument key="Sonata\MediaBundle\Validator\FormatValidator">sonata.media.validator.format</argument>
      </argument>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler">
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service">
        <service class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
          <argument>file:C:/wamp/www/Aparchi/app/cache/dev/profiler</argument>
          <argument></argument>
          <argument></argument>
          <argument>86400</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
            <argument type="service" id="kernel" on-invalid="ignore"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
            <tag name="monolog.logger" channel="profiler"/>
            <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
            <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
            <argument type="service" id="security.token_storage" on-invalid="ignore"/>
            <argument type="service" id="security.role_hierarchy"/>
            <argument type="service" id="security.logout_url_generator"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
            <argument type="service" id="twig.profile"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
            <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
            <argument type="service" id="doctrine"/>
            <call method="addLogger">
              <argument>default</argument>
              <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
            <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Sonata\BlockBundle\Profiler\DataCollector\BlockDataCollector" public="false">
            <tag name="data_collector" id="block" template="SonataBlockBundle:Profiler:block.html.twig"/>
            <argument type="service" id="sonata.block.templating.helper"/>
            <argument type="collection">
              <argument>sonata.block.service.container</argument>
              <argument>sonata.page.block.container</argument>
              <argument>sonata.dashboard.block.container</argument>
              <argument>cmf.block.container</argument>
              <argument>cmf.block.slideshow</argument>
            </argument>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
            <call method="setKernel">
              <argument type="service" id="kernel" on-invalid="ignore"/>
            </call>
          </service>
        </argument>
      </call>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
    </service>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service" id="sonata.admin.route_loader"/>
          </call>
        </service>
      </argument>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="service_container"/>
      <argument>C:\wamp\www\Aparchi\app/config/routing_dev.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">C:/wamp/www/Aparchi/app/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>-4182</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service">
        <service class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>data_collector.router</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>sonata.block.cache.handler.default</argument>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>knp_menu.listener.voters</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.block.event.breadcrumb</argument>
        <argument type="collection">
          <argument>sonata.seo.event.breadcrumb</argument>
          <argument>onBlock</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument>sonata.notification.backend.postpone</argument>
          <argument>onEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.notification.event.message_iterate_event</argument>
        <argument type="collection">
          <argument>sonata.notification.event.doctrine_optimize</argument>
          <argument>iterate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>sonata.page.site.selector.host</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>47</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>sonata.page.site.selector.host</argument>
          <argument>onKernelRequestRedirect</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>sonata.page.response_listener</argument>
          <argument>onCoreResponse</argument>
        </argument>
        <argument>-1</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>sonata.page.request_listener</argument>
          <argument>onCoreRequest</argument>
        </argument>
        <argument>30</argument>
      </call>
      <call method="addListenerService">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument>sonata.page.cms_manager_selector</argument>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument>sonata.page.kernel.exception_listener</argument>
          <argument>onKernelException</argument>
        </argument>
        <argument>-127</argument>
      </call>
      <call method="addListenerService">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument>fos_user.security.interactive_login_listener</argument>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addSubscriberService">
        <argument>response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>streamed_response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>locale_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>translator_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\TranslatorListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>validate_request_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ValidateRequestListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session_listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session.save_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\SaveSessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fragment.listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\FragmentListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>profiler_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ProfilerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>data_collector.request</argument>
        <argument>Symfony\Component\HttpKernel\DataCollector\RequestDataCollector</argument>
      </call>
      <call method="addSubscriberService">
        <argument>router_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\RouterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.debug_handlers_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.firewall</argument>
        <argument>Symfony\Component\Security\Http\Firewall</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.rememberme.response_listener</argument>
        <argument>Symfony\Component\Security\Http\RememberMe\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>twig.exception_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>monolog.handler.console</argument>
        <argument>Symfony\Bridge\Monolog\Handler\ConsoleHandler</argument>
      </call>
      <call method="addSubscriberService">
        <argument>swiftmailer.email_sender.listener</argument>
        <argument>Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.controller.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.converter.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.view.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.cache.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.security.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.dump_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DumpListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>web_profiler.debug_toolbar</argument>
        <argument>Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <argument type="service" id="controller_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="security.context" class="Symfony\Component\Security\Core\SecurityContext">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 2.6 and will be removed in 3.0.</deprecated>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="fos_user.user_provider.username"/>
            <argument type="service" id="security.user_checker.admin"/>
            <argument>admin</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>59cb999f4be750.54294288</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="fos_user.user_provider.username"/>
            <argument type="service" id="security.user_checker.admin"/>
            <argument>main</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false">
            <argument type="service" id="security.user_checker.admin"/>
            <argument>ThisTokenIsNotSoSecretChangeIt</argument>
            <argument>main</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>59cb999f4be750.54294288</argument>
          </service>
        </argument>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="collection"/>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
      <call method="setVoters">
        <argument type="collection">
          <argument type="service">
            <service class="Symfony\Component\Security\Acl\Voter\AclVoter" public="false">
              <tag name="monolog.logger" channel="security"/>
              <tag name="security.voter" priority="255"/>
              <argument type="service" id="security.acl.provider"/>
              <argument type="service">
                <service class="Symfony\Component\Security\Acl\Domain\ObjectIdentityRetrievalStrategy" public="false"/>
              </argument>
              <argument type="service">
                <service class="Symfony\Component\Security\Acl\Domain\SecurityIdentityRetrievalStrategy" public="false">
                  <argument type="service" id="security.role_hierarchy"/>
                  <argument type="service" id="security.authentication.trust_resolver"/>
                </service>
              </argument>
              <argument type="service">
                <service class="Symfony\Component\Security\Acl\Permission\BasicPermissionMap" public="false"/>
              </argument>
              <argument type="service" id="monolog.logger.security" on-invalid="null"/>
              <argument>true</argument>
            </service>
          </argument>
          <argument type="service">
            <service class="Sonata\UserBundle\Security\Authorization\Voter\UserAclVoter" public="false">
              <tag name="monolog.logger" channel="security"/>
              <tag name="security.voter" priority="255"/>
              <argument type="service" id="security.acl.provider"/>
              <argument type="service">
                <service class="Symfony\Component\Security\Acl\Domain\ObjectIdentityRetrievalStrategy" public="false"/>
              </argument>
              <argument type="service">
                <service class="Symfony\Component\Security\Acl\Domain\SecurityIdentityRetrievalStrategy" public="false">
                  <argument type="service" id="security.role_hierarchy"/>
                  <argument type="service" id="security.authentication.trust_resolver"/>
                </service>
              </argument>
              <argument type="service">
                <service class="Symfony\Component\Security\Acl\Permission\BasicPermissionMap" public="false"/>
              </argument>
              <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
              <tag name="security.voter" priority="250"/>
              <argument type="service" id="security.authentication.trust_resolver"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
              <tag name="security.voter" priority="245"/>
              <argument type="service" id="security.role_hierarchy"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
              <tag name="security.voter" priority="245"/>
              <argument type="service">
                <service class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
              </argument>
              <argument type="service" id="security.authentication.trust_resolver"/>
              <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
            </service>
          </argument>
        </argument>
      </call>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection">
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_ALLOWED_TO_SWITCH</argument>
        </argument>
        <argument key="SONATA" type="collection">
          <argument>ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT</argument>
        </argument>
      </argument>
    </service>
    <service id="security.firewall" class="Symfony\Component\Security\Http\Firewall">
      <tag name="kernel.event_subscriber"/>
      <argument type="service">
        <service class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="security.firewall.map.context.dev" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.admin" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>/admin(.*)</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.main" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>.*</argument>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="cmf_routing.router" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>admin</argument>
        <argument>/admin/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="cmf_routing.router" on-invalid="null"/>
      <argument type="service" id="cmf_routing.router" on-invalid="null"/>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
          <argument>80</argument>
          <argument>443</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/login$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/logout$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/login_check$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/resetting</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/.*</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="collection">
        <argument type="service" id="fos_user.user_provider.username"/>
      </argument>
      <argument>user</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.firewall.map.context.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.http_utils"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument>/admin/login</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="csrf_token_id">logout</argument>
              <argument key="logout_path">/admin/logout</argument>
            </argument>
            <call method="addHandler">
              <argument type="service" id="security.logout.handler.session"/>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="admin" provider="security.user.provider.concrete.fos_userbundle"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>admin</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/admin/login</argument>
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="default_target_path">/</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>admin</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/admin/login</argument>
                    <argument key="failure_path">null</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="use_forward">false</argument>
              <argument key="check_path">/admin/login_check</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="username_parameter">_username</argument>
              <argument key="password_parameter">_password</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="csrf_token_id">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument>null</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument>59cb999f4be750.54294288</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>admin</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service" id="security.http_utils"/>
              <argument>/admin/login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.http_utils"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument>/</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="csrf_token_id">logout</argument>
              <argument key="logout_path">/logout</argument>
            </argument>
            <call method="addHandler">
              <argument type="service" id="security.logout.handler.session"/>
            </call>
            <call method="addHandler">
              <argument type="service">
                <service class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false">
                  <argument type="collection">
                    <argument type="service" id="fos_user.user_provider.username"/>
                  </argument>
                  <argument>ThisTokenIsNotSoSecretChangeIt</argument>
                  <argument>main</argument>
                  <argument type="collection">
                    <argument key="lifetime">604800</argument>
                    <argument key="path">/</argument>
                    <argument key="name">REMEMBERME</argument>
                    <argument key="domain">null</argument>
                    <argument key="secure">false</argument>
                    <argument key="httponly">true</argument>
                    <argument key="always_remember_me">false</argument>
                    <argument key="remember_me_parameter">_remember_me</argument>
                  </argument>
                  <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                </service>
              </argument>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.fos_userbundle"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>main</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/login</argument>
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="default_target_path">/</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>main</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/login</argument>
                    <argument key="failure_path">null</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="use_forward">false</argument>
              <argument key="check_path">/login_check</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="username_parameter">_username</argument>
              <argument key="password_parameter">_password</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="csrf_token_id">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument>null</argument>
            <call method="setRememberMeServices">
              <argument type="service">
                <service class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false">
                  <argument type="collection">
                    <argument type="service" id="fos_user.user_provider.username"/>
                  </argument>
                  <argument>ThisTokenIsNotSoSecretChangeIt</argument>
                  <argument>main</argument>
                  <argument type="collection">
                    <argument key="lifetime">604800</argument>
                    <argument key="path">/</argument>
                    <argument key="name">REMEMBERME</argument>
                    <argument key="domain">null</argument>
                    <argument key="secure">false</argument>
                    <argument key="httponly">true</argument>
                    <argument key="always_remember_me">false</argument>
                    <argument key="remember_me_parameter">_remember_me</argument>
                  </argument>
                  <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                </service>
              </argument>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false">
                <argument type="collection">
                  <argument type="service" id="fos_user.user_provider.username"/>
                </argument>
                <argument>ThisTokenIsNotSoSecretChangeIt</argument>
                <argument>main</argument>
                <argument type="collection">
                  <argument key="lifetime">604800</argument>
                  <argument key="path">/</argument>
                  <argument key="name">REMEMBERME</argument>
                  <argument key="domain">null</argument>
                  <argument key="secure">false</argument>
                  <argument key="httponly">true</argument>
                  <argument key="always_remember_me">false</argument>
                  <argument key="remember_me_parameter">_remember_me</argument>
                </argument>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
              </service>
            </argument>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument>true</argument>
            <argument type="service" id="security.authentication.session_strategy"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument>59cb999f4be750.54294288</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>main</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service" id="security.http_utils"/>
              <argument>/login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="security.acl.dbal.schema" class="Symfony\Component\Security\Acl\Dbal\Schema">
      <argument type="collection">
        <argument key="class_table_name">acl_classes</argument>
        <argument key="entry_table_name">acl_entries</argument>
        <argument key="oid_table_name">acl_object_identities</argument>
        <argument key="oid_ancestors_table_name">acl_object_identity_ancestors</argument>
        <argument key="sid_table_name">acl_security_identities</argument>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="security.acl.dbal.schema_listener" class="Symfony\Bundle\SecurityBundle\EventListener\AclSchemaListener">
      <tag name="doctrine.event_listener" connection="default" event="postGenerateSchema" lazy="1"/>
      <argument type="service" id="security.acl.dbal.schema"/>
    </service>
    <service id="twig" class="Twig\Environment">
      <argument type="service" id="twig.loader"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
          <argument>SonataFormatterBundle:Form:formatter.html.twig</argument>
          <argument>bootstrap_3_layout.html.twig</argument>
        </argument>
        <argument key="exception_controller">twig.controller.exception:showAction</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">C:/wamp/www/Aparchi/app/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="paths" type="collection"/>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.logout_url_generator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="twig.profile"/>
            <argument type="service" id="debug.stopwatch" on-invalid="null"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="translator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="assets.packages"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
                <tag name="twig.extension"/>
                <argument type="service" id="request_stack"/>
                <argument type="service" id="router.request_context" on-invalid="ignore"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\Extension\ActionsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="fragment.handler"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
            <tag name="twig.extension"/>
            <argument>null</argument>
            <argument>C:\wamp\www\Aparchi\app</argument>
            <argument>UTF-8</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="cmf_routing.router"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="fragment.handler"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="router.request_context" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig\Extension\DebugExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Form\TwigRenderer" public="false">
                <argument type="service">
                  <service class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
                    <argument type="collection">
                      <argument>IvoryCKEditorBundle:Form:ckeditor_widget.html.twig</argument>
                      <argument>form_div_layout.html.twig</argument>
                      <argument>SonataFormatterBundle:Form:formatter.html.twig</argument>
                      <argument>bootstrap_3_layout.html.twig</argument>
                      <argument>SonataUserBundle:Form:form_admin_fields.html.twig</argument>
                    </argument>
                  </service>
                </argument>
                <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.flashmessage.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.wrapping"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.text"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.status_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\BlockBundle\Twig\Extension\BlockExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.block.templating.helper"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Menu\Twig\MenuExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Knp\Menu\Twig\Helper" public="false">
                <argument type="service" id="knp_menu.renderer_provider"/>
                <argument type="service" id="knp_menu.menu_provider"/>
                <argument type="service">
                  <service class="Knp\Menu\Util\MenuManipulator" public="false"/>
                </argument>
                <argument type="service" id="knp_menu.matcher"/>
              </service>
            </argument>
            <argument type="service" id="knp_menu.matcher"/>
            <argument type="service">
              <service class="Knp\Menu\Util\MenuManipulator" public="false"/>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\SeoBundle\Twig\Extension\SeoExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.seo.page.default"/>
            <argument>UTF-8</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\PageBundle\Twig\Extension\PageExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.page.cms_manager_selector"/>
            <argument type="service" id="sonata.page.site.selector.host"/>
            <argument type="service" id="cmf_routing.router"/>
            <argument type="service" id="sonata.block.templating.helper"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
                <tag name="twig.extension"/>
                <argument type="service" id="fragment.handler"/>
              </service>
            </argument>
            <argument>false</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Twig\Extension\MarkdownTwigExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="markdown.parser.parser_manager"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="ivory_ck_editor.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\FormatterBundle\Twig\Extension\TextFormatterExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.formatter.pool"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.media.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="JMS\Serializer\Twig\SerializerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="jms_serializer"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Twig\AsseticExtension" public="false">
            <tag name="twig.extension"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service" id="assetic.asset_factory"/>
            <argument type="service" id="templating.name_parser"/>
            <argument>false</argument>
            <argument type="collection"/>
            <argument type="collection"/>
            <argument type="service">
              <service class="Symfony\Bundle\AsseticBundle\DefaultValueSupplier" public="false">
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="var_dumper.cloner"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service">
          <service class="Symfony\Bridge\Twig\AppVariable" public="false">
            <call method="setEnvironment">
              <argument>dev</argument>
            </call>
            <call method="setDebug">
              <argument>true</argument>
            </call>
            <call method="setTokenStorage">
              <argument type="service" id="security.token_storage" on-invalid="ignore"/>
            </call>
            <call method="setRequestStack">
              <argument type="service" id="request_stack" on-invalid="ignore"/>
            </call>
            <call method="setContainer">
              <argument type="service" id="service_container"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>sonata_block</argument>
        <argument type="service" id="sonata.block.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_admin</argument>
        <argument type="service" id="sonata.admin.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_page</argument>
        <argument type="service" id="sonata.page.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_user</argument>
        <argument type="service" id="sonata.user.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_media</argument>
        <argument type="service" id="sonata.media.twig.global"/>
      </call>
      <configurator method="configure">
        <service class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
          <argument>F j, Y H:i</argument>
          <argument>%d days</argument>
          <argument>null</argument>
          <argument>0</argument>
          <argument>.</argument>
          <argument>,</argument>
        </service>
      </configurator>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception:showAction</argument>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy"/>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>C:\wamp\www\Aparchi\app\logs/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer">
      <argument type="service" id="swiftmailer.mailer.default.transport"/>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection">
        <argument key="json" type="collection">
          <argument key="class">Sonata\Doctrine\Types\JsonType</argument>
          <argument key="commented">true</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="default">doctrine.dbal.default_connection</argument>
      </argument>
      <argument type="collection">
        <argument key="default">doctrine.orm.default_entity_manager</argument>
      </argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">127.0.0.1</argument>
        <argument key="port">null</argument>
        <argument key="dbname">aparchi</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="charset">UTF8</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\DBAL\Configuration" public="false">
          <call method="setSQLLogger">
            <argument type="service">
              <service class="Doctrine\DBAL\Logging\LoggerChain" public="false">
                <call method="addLogger">
                  <argument type="service">
                    <service class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
                      <tag name="monolog.logger" channel="doctrine"/>
                      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
                      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
                    </service>
                  </argument>
                </call>
                <call method="addLogger">
                  <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
                </call>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
          <argument type="service" id="service_container"/>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.cache.orm.event_subscriber"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.easy_extends.doctrine.mapper"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="FOS\UserBundle\Entity\UserListener" public="false">
                <tag name="doctrine.event_subscriber"/>
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.media.doctrine.event_subscriber"/>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>postGenerateSchema</argument>
            </argument>
            <argument>security.acl.dbal.schema_listener</argument>
          </call>
        </service>
      </argument>
      <argument type="collection">
        <argument key="enum">string</argument>
      </argument>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_1e9fae16b9da5a49cd08e3527d79320c2fc1583fae92ff53f7d16e67f8eb1191</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_1e9fae16b9da5a49cd08e3527d79320c2fc1583fae92ff53f7d16e67f8eb1191</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_1e9fae16b9da5a49cd08e3527d79320c2fc1583fae92ff53f7d16e67f8eb1191</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\ORM\Mapping\DefaultEntityListenerResolver"/>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service">
        <service class="Doctrine\ORM\Configuration" public="false">
          <call method="setEntityNamespaces">
            <argument type="collection">
              <argument key="ApplicationSonataPageBundle">Application\Sonata\PageBundle\Entity</argument>
              <argument key="SonataPageBundle">Sonata\PageBundle\Entity</argument>
              <argument key="SonataNotificationBundle">Sonata\NotificationBundle\Entity</argument>
              <argument key="ApplicationSonataNotificationBundle">Application\Sonata\NotificationBundle\Entity</argument>
              <argument key="SonataMediaBundle">Sonata\MediaBundle\Entity</argument>
              <argument key="ApplicationSonataMediaBundle">Application\Sonata\MediaBundle\Entity</argument>
              <argument key="ApplicationSonataAdminBundle">Application\Sonata\AdminBundle\Entity</argument>
              <argument key="ApplicationSonataUserBundle">Application\Sonata\UserBundle\Entity</argument>
              <argument key="FrontOfficeBundle">FrontOfficeBundle\Entity</argument>
              <argument key="BackOfficeBundle">BackOfficeBundle\Entity</argument>
              <argument key="FOSUserBundle">FOS\UserBundle\Entity</argument>
              <argument key="SonataUserBundle">Sonata\UserBundle\Entity</argument>
            </argument>
          </call>
          <call method="setMetadataCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
          </call>
          <call method="setQueryCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
          </call>
          <call method="setResultCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
          </call>
          <call method="setMetadataDriverImpl">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle\Resources\config\doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle\Resources\config\doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle\Resources\config\doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle\Resources\config\doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle\Resources\config\doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle\Resources\config\doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle\Resources\config\doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle\Resources\config\doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle\Resources\config\doctrine">Sonata\UserBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\PageBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle\Resources\config\doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle\Resources\config\doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle\Resources\config\doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle\Resources\config\doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle\Resources\config\doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle\Resources\config\doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle\Resources\config\doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle\Resources\config\doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle\Resources\config\doctrine">Sonata\UserBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\PageBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle\Resources\config\doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle\Resources\config\doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle\Resources\config\doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle\Resources\config\doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle\Resources\config\doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle\Resources\config\doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle\Resources\config\doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle\Resources\config\doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle\Resources\config\doctrine">Sonata\UserBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\NotificationBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle\Resources\config\doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle\Resources\config\doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle\Resources\config\doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle\Resources\config\doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle\Resources\config\doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle\Resources\config\doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle\Resources\config\doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle\Resources\config\doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle\Resources\config\doctrine">Sonata\UserBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\NotificationBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle\Resources\config\doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle\Resources\config\doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle\Resources\config\doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle\Resources\config\doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle\Resources\config\doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle\Resources\config\doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle\Resources\config\doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle\Resources\config\doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle\Resources\config\doctrine">Sonata\UserBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\MediaBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle\Resources\config\doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle\Resources\config\doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle\Resources\config\doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle\Resources\config\doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle\Resources\config\doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle\Resources\config\doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle\Resources\config\doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle\Resources\config\doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle\Resources\config\doctrine">Sonata\UserBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\MediaBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle\Resources\config\doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle\Resources\config\doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle\Resources\config\doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle\Resources\config\doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle\Resources\config\doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle\Resources\config\doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle\Resources\config\doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle\Resources\config\doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle\Resources\config\doctrine">Sonata\UserBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\UserBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle\Resources\config\doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle\Resources\config\doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle\Resources\config\doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle\Resources\config\doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle\Resources\config\doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle\Resources\config\doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle\Resources\config\doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle\Resources\config\doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle\Resources\config\doctrine">Sonata\UserBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>FOS\UserBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle\Resources\config\doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle\Resources\config\doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle\Resources\config\doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle\Resources\config\doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle\Resources\config\doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle\Resources\config\doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle\Resources\config\doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle\Resources\config\doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle\Resources\config\doctrine">Sonata\UserBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\UserBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\AdminBundle\Entity</argument>
                        <argument>C:\wamp\www\Aparchi\src\FrontOfficeBundle\Entity</argument>
                        <argument>C:\wamp\www\Aparchi\src\BackOfficeBundle\Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>Application\Sonata\AdminBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\AdminBundle\Entity</argument>
                        <argument>C:\wamp\www\Aparchi\src\FrontOfficeBundle\Entity</argument>
                        <argument>C:\wamp\www\Aparchi\src\BackOfficeBundle\Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>FrontOfficeBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\AdminBundle\Entity</argument>
                        <argument>C:\wamp\www\Aparchi\src\FrontOfficeBundle\Entity</argument>
                        <argument>C:\wamp\www\Aparchi\src\BackOfficeBundle\Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>BackOfficeBundle\Entity</argument>
                </call>
              </service>
            </argument>
          </call>
          <call method="setProxyDir">
            <argument>C:/wamp/www/Aparchi/app/cache/dev/doctrine/orm/Proxies</argument>
          </call>
          <call method="setProxyNamespace">
            <argument>Proxies</argument>
          </call>
          <call method="setAutoGenerateProxyClasses">
            <argument>true</argument>
          </call>
          <call method="setClassMetadataFactoryName">
            <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
          </call>
          <call method="setDefaultRepositoryClassName">
            <argument>Doctrine\ORM\EntityRepository</argument>
          </call>
          <call method="setNamingStrategy">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
            </argument>
          </call>
          <call method="setQuoteStrategy">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
            </argument>
          </call>
          <call method="setEntityListenerResolver">
            <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
          </call>
        </service>
      </argument>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <argument type="service">
        <service class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
          <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
        </service>
      </argument>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.datetime"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sensio_framework_extra.converter.datetime" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service">
        <service class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
      </argument>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="sonata.core.date.moment_format_converter" class="Sonata\CoreBundle\Date\MomentFormatConverter"/>
    <service id="sonata.core.flashmessage.manager" class="Sonata\CoreBundle\FlashMessage\FlashManager">
      <tag name="sonata.status.renderer"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator"/>
      <argument type="collection">
        <argument key="success" type="collection">
          <argument key="success" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_success" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_success" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
          <argument key="fos_user_success" type="collection">
            <argument key="domain">FOSUserBundle</argument>
          </argument>
        </argument>
        <argument key="warning" type="collection">
          <argument key="warning" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_info" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
        </argument>
        <argument key="danger" type="collection">
          <argument key="error" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_error" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_error" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="success">success</argument>
        <argument key="warning">warning</argument>
        <argument key="danger">danger</argument>
      </argument>
    </service>
    <service id="sonata.core.flashmessage.twig.extension" class="Sonata\CoreBundle\Twig\Extension\FlashMessageExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.core.flashmessage.manager"/>
    </service>
    <service id="sonata.core.form.type.array" class="Sonata\CoreBundle\Form\Type\ImmutableArrayType">
      <tag name="form.type" alias="sonata_type_immutable_array"/>
    </service>
    <service id="sonata.core.form.type.boolean" class="Sonata\CoreBundle\Form\Type\BooleanType">
      <tag name="form.type" alias="sonata_type_boolean"/>
    </service>
    <service id="sonata.core.form.type.collection" class="Sonata\CoreBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_collection"/>
    </service>
    <service id="sonata.core.form.type.translatable_choice" class="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">
      <tag name="form.type" alias="sonata_type_translatable_choice"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_range" class="Sonata\CoreBundle\Form\Type\DateRangeType">
      <tag name="form.type" alias="sonata_type_date_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.datetime_range" class="Sonata\CoreBundle\Form\Type\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_datetime_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_picker" class="Sonata\CoreBundle\Form\Type\DatePickerType">
      <tag name="form.type" alias="sonata_type_date_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.datetime_picker" class="Sonata\CoreBundle\Form\Type\DateTimePickerType">
      <tag name="form.type" alias="sonata_type_datetime_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_range_picker" class="Sonata\CoreBundle\Form\Type\DateRangePickerType">
      <tag name="form.type" alias="sonata_type_date_range_picker"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.datetime_range_picker" class="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">
      <tag name="form.type" alias="sonata_type_datetime_range_picker"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.equal" class="Sonata\CoreBundle\Form\Type\EqualType">
      <tag name="form.type" alias="sonata_type_equal"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.color_selector" class="Sonata\CoreBundle\Form\Type\ColorSelectorType">
      <tag name="form.type" alias="sonata_type_color_selector"/>
    </service>
    <service id="sonata.core.form.type.color" class="Sonata\CoreBundle\Form\Type\ColorType">
      <tag name="form.type" alias="sonata_type_color"/>
    </service>
    <service id="sonata.core.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.core.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.core.twig.extension.wrapping" class="Sonata\CoreBundle\Twig\Extension\FormTypeExtension">
      <tag name="twig.extension"/>
      <argument>standard</argument>
    </service>
    <service id="sonata.core.twig.extension.text" class="Sonata\CoreBundle\Twig\Extension\DeprecatedTextExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.status_extension" class="Sonata\CoreBundle\Twig\Extension\StatusExtension">
      <tag name="twig.extension"/>
      <call method="addStatusService">
        <argument type="service" id="sonata.core.flashmessage.manager"/>
      </call>
    </service>
    <service id="sonata.core.twig.template_extension" class="Sonata\CoreBundle\Twig\Extension\TemplateExtension">
      <tag name="twig.extension"/>
      <argument>true</argument>
      <argument type="service" id="translator"/>
      <argument type="service" id="sonata.core.model.adapter.chain"/>
    </service>
    <service id="sonata.core.model.adapter.chain" class="Sonata\CoreBundle\Model\Adapter\AdapterChain">
      <call method="addAdapter">
        <argument type="service">
          <service class="Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter" public="false">
            <argument type="service" id="doctrine" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.core.slugify.cocur" class="Cocur\Slugify\Slugify">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.core.slugify.native" class="Sonata\CoreBundle\Component\NativeSlugify">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.block.service.container" class="Sonata\BlockBundle\Block\Service\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.container</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.empty" class="Sonata\BlockBundle\Block\Service\EmptyBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.text" class="Sonata\BlockBundle\Block\Service\TextBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.text</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.rss" class="Sonata\BlockBundle\Block\Service\RssBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.rss</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.menu" class="Sonata\BlockBundle\Block\Service\MenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.menu</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="sonata.block.menu.registry"/>
    </service>
    <service id="sonata.block.service.template" class="Sonata\BlockBundle\Block\Service\TemplateBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.template</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.form.type.block" class="Sonata\BlockBundle\Form\Type\ServiceListType">
      <tag name="form.type" alias="sonata_block_service_choice"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.block.form.type.container_template" class="Sonata\BlockBundle\Form\Type\ContainerTemplateType">
      <tag name="form.type" alias="sonata_type_container_template_choice"/>
      <argument type="collection">
        <argument key="SonataPageBundle:Block:block_container.html.twig">SonataPageBundle default template</argument>
        <argument key="SonataSeoBundle:Block:block_social_container.html.twig">SonataSeoBundle (to contain social buttons)</argument>
      </argument>
    </service>
    <service id="sonata.block.manager" class="Sonata\BlockBundle\Block\BlockServiceManager" public="false">
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <call method="add">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.container</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.empty</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.text</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.rss</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.menu</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.template</argument>
        <argument>sonata.block.service.template</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.stats</argument>
        <argument>sonata.admin.block.stats</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.email.share_button</argument>
        <argument>sonata.seo.block.email.share_button</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.facebook.like_box</argument>
        <argument>sonata.seo.block.facebook.like_box</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.facebook.like_button</argument>
        <argument>sonata.seo.block.facebook.like_button</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.facebook.send_button</argument>
        <argument>sonata.seo.block.facebook.send_button</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.facebook.share_button</argument>
        <argument>sonata.seo.block.facebook.share_button</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.twitter.share_button</argument>
        <argument>sonata.seo.block.twitter.share_button</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.twitter.follow_button</argument>
        <argument>sonata.seo.block.twitter.follow_button</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.twitter.hashtag_button</argument>
        <argument>sonata.seo.block.twitter.hashtag_button</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.twitter.mention_button</argument>
        <argument>sonata.seo.block.twitter.mention_button</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.twitter.embed</argument>
        <argument>sonata.seo.block.twitter.embed</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.pinterest.pin_button</argument>
        <argument>sonata.seo.block.pinterest.pin_button</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.seo.block.breadcrumb.homepage</argument>
        <argument>sonata.seo.block.breadcrumb.homepage</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.page.block.container</argument>
        <argument>sonata.page.block.container</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.page.block.children_pages</argument>
        <argument>sonata.page.block.children_pages</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.page.block.breadcrumb</argument>
        <argument>sonata.page.block.breadcrumb</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.page.block.shared_block</argument>
        <argument>sonata.page.block.shared_block</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.page.block.pagelist</argument>
        <argument>sonata.page.block.pagelist</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.formatter.block.formatter</argument>
        <argument>sonata.formatter.block.formatter</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.user.block.menu</argument>
        <argument>sonata.user.block.menu</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.user.block.account</argument>
        <argument>sonata.user.block.account</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.user.block.breadcrumb_index</argument>
        <argument>sonata.user.block.breadcrumb_index</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.user.block.breadcrumb_profile</argument>
        <argument>sonata.user.block.breadcrumb_profile</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.media</argument>
        <argument>sonata.media.block.media</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.feature_media</argument>
        <argument>sonata.media.block.feature_media</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.gallery</argument>
        <argument>sonata.media.block.gallery</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.gallery_list</argument>
        <argument>sonata.media.block.gallery_list</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.breadcrumb_view</argument>
        <argument>sonata.media.block.breadcrumb_view</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.breadcrumb_index</argument>
        <argument>sonata.media.block.breadcrumb_index</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.breadcrumb_view_media</argument>
        <argument>sonata.media.block.breadcrumb_view_media</argument>
        <argument type="collection"/>
      </call>
    </service>
    <service id="sonata.block.menu.registry" class="Sonata\BlockBundle\Menu\MenuRegistry">
      <argument type="collection"/>
    </service>
    <service id="sonata.block.context_manager.default" class="Sonata\BlockBundle\Block\BlockContextManager">
      <argument type="service" id="sonata.block.loader.chain"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
          <argument key="sonata.media.block.media">sonata.cache.noop</argument>
          <argument key="sonata.media.block.gallery">sonata.cache.noop</argument>
          <argument key="sonata.formatter.block.formatter">sonata.cache.noop</argument>
          <argument key="sonata.user.block.menu">sonata.cache.noop</argument>
          <argument key="sonata.user.block.account">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.renderer.default" class="Sonata\BlockBundle\Block\BlockRenderer">
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="sonata.block.exception.strategy.manager"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="sonata.block.templating.helper" class="Sonata\BlockBundle\Templating\Helper\BlockHelper">
      <tag name="templating.helper" alias="sonata_block"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
          <argument key="sonata.media.block.media">sonata.cache.noop</argument>
          <argument key="sonata.media.block.gallery">sonata.cache.noop</argument>
          <argument key="sonata.formatter.block.formatter">sonata.cache.noop</argument>
          <argument key="sonata.user.block.menu">sonata.cache.noop</argument>
          <argument key="sonata.user.block.account">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.page.block.context_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="sonata.cache.manager" on-invalid="ignore"/>
      <argument type="service" id="sonata.block.cache.handler.default" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.loader.chain" class="Sonata\BlockBundle\Block\BlockLoaderChain">
      <argument type="collection">
        <argument type="service" id="sonata.block.loader.service"/>
      </argument>
    </service>
    <service id="sonata.block.loader.service" class="Sonata\BlockBundle\Block\Loader\ServiceLoader">
      <tag name="sonata.block.loader"/>
      <argument type="collection">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.media.block.media</argument>
        <argument>sonata.media.block.gallery</argument>
        <argument>sonata.formatter.block.formatter</argument>
        <argument>sonata.user.block.menu</argument>
        <argument>sonata.user.block.account</argument>
      </argument>
    </service>
    <service id="sonata.block.twig.global" class="Sonata\BlockBundle\Twig\GlobalVariables">
      <argument type="collection">
        <argument key="block_base">SonataPageBundle:Block:block_base.html.twig</argument>
        <argument key="block_container">SonataPageBundle:Block:block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.cache.handler.default" class="Sonata\BlockBundle\Cache\HttpCacheHandler">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
    </service>
    <service id="sonata.block.cache.handler.noop" class="Sonata\BlockBundle\Cache\NoopHttpCacheHandler"/>
    <service id="sonata.block.exception.strategy.manager" class="Sonata\BlockBundle\Exception\Strategy\StrategyManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="debug_only">sonata.block.exception.filter.debug_only</argument>
        <argument key="ignore_block_exception">sonata.block.exception.filter.ignore_block_exception</argument>
        <argument key="keep_all">sonata.block.exception.filter.keep_all</argument>
        <argument key="keep_none">sonata.block.exception.filter.keep_none</argument>
      </argument>
      <argument type="collection">
        <argument key="inline">sonata.block.exception.renderer.inline</argument>
        <argument key="inline_debug">sonata.block.exception.renderer.inline_debug</argument>
        <argument key="throw">sonata.block.exception.renderer.throw</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setDefaultFilter">
        <argument>debug_only</argument>
      </call>
      <call method="setDefaultRenderer">
        <argument>throw</argument>
      </call>
    </service>
    <service id="sonata.block.exception.filter.keep_none" class="Sonata\BlockBundle\Exception\Filter\KeepNoneFilter"/>
    <service id="sonata.block.exception.filter.keep_all" class="Sonata\BlockBundle\Exception\Filter\KeepAllFilter"/>
    <service id="sonata.block.exception.filter.debug_only" class="Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter">
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.filter.ignore_block_exception" class="Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter">
      <argument>Sonata\BlockBundle\Exception\BlockExceptionInterface</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline" class="Sonata\BlockBundle\Exception\Renderer\InlineRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception.html.twig</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline_debug" class="Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception_debug.html.twig</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.renderer.throw" class="Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer"/>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory">
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Menu\Integration\Symfony\RoutingExtension" public="false">
            <tag name="knp_menu.factory_extension"/>
            <argument type="service" id="cmf_routing.router"/>
          </service>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher">
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.admin"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.children"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.active"/>
      </call>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider">
      <argument type="service" id="service_container"/>
      <argument>twig</argument>
      <argument type="collection">
        <argument key="list">knp_menu.renderer.list</argument>
        <argument key="twig">knp_menu.renderer.twig</argument>
      </argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.listener.voters" class="Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.admin"/>
      </call>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter" request="1"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>KnpMenuBundle::menu.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.admin.manager.orm" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.admin.builder.orm_form" class="Sonata\DoctrineORMAdminBundle\Builder\FormContractor">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.admin.builder.orm_list" class="Sonata\DoctrineORMAdminBundle\Builder\ListBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_list_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:list_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</argument>
        <argument key="date">SonataAdminBundle:CRUD:list_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:list_time.html.twig</argument>
        <argument key="datetime">SonataAdminBundle:CRUD:list_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="email">SonataAdminBundle:CRUD:list_email.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="smallint">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="bigint">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="integer">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="decimal">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="currency">SonataAdminBundle:CRUD:list_currency.html.twig</argument>
        <argument key="percent">SonataAdminBundle:CRUD:list_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:list_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:list_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_list" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_list"/>
    </service>
    <service id="sonata.admin.guesser.orm_list_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_list"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_show" class="Sonata\DoctrineORMAdminBundle\Builder\ShowBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_show_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:show_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</argument>
        <argument key="date">SonataAdminBundle:CRUD:show_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:show_time.html.twig</argument>
        <argument key="datetime">SonataAdminBundle:CRUD:show_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="email">SonataAdminBundle:CRUD:show_email.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="smallint">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="bigint">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="integer">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="decimal">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="currency">SonataAdminBundle:CRUD:show_currency.html.twig</argument>
        <argument key="percent">SonataAdminBundle:CRUD:show_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:show_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:show_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_show" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_show"/>
    </service>
    <service id="sonata.admin.guesser.orm_show_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_show"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Builder\DatagridBuilder">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.admin.builder.filter.factory"/>
      <argument type="service" id="sonata.admin.guesser.orm_datagrid_chain"/>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Guesser\FilterTypeGuesser">
      <tag name="sonata.admin.guesser.orm_datagrid"/>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_datagrid"/>
      </argument>
    </service>
    <service id="sonata.admin.orm.filter.type.boolean" class="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_boolean"/>
    </service>
    <service id="sonata.admin.orm.filter.type.callback" class="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_callback"/>
    </service>
    <service id="sonata.admin.orm.filter.type.choice" class="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_choice"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model" class="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model_autocomplete" class="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model_autocomplete"/>
    </service>
    <service id="sonata.admin.orm.filter.type.string" class="Sonata\DoctrineORMAdminBundle\Filter\StringFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_string"/>
    </service>
    <service id="sonata.admin.orm.filter.type.number" class="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_number"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date" class="Sonata\DoctrineORMAdminBundle\Filter\DateFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime"/>
    </service>
    <service id="sonata.admin.orm.filter.type.time" class="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_time"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.class" class="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_class"/>
    </service>
    <service id="sonata.admin.manipulator.acl.object.orm" class="Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator"/>
    <service id="sonata.admin.twig.extension" class="Sonata\AdminBundle\Twig\Extension\SonataAdminExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument type="service" id="translator"/>
      <call method="setXEditableTypeMapping">
        <argument type="collection">
          <argument key="choice">select</argument>
          <argument key="boolean">select</argument>
          <argument key="text">text</argument>
          <argument key="textarea">textarea</argument>
          <argument key="html">textarea</argument>
          <argument key="email">email</argument>
          <argument key="string">text</argument>
          <argument key="smallint">text</argument>
          <argument key="bigint">text</argument>
          <argument key="integer">number</argument>
          <argument key="decimal">number</argument>
          <argument key="currency">number</argument>
          <argument key="percent">number</argument>
          <argument key="url">url</argument>
          <argument key="date">date</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.pool" class="Sonata\AdminBundle\Admin\Pool">
      <argument type="service" id="service_container"/>
      <argument>Subocéa</argument>
      <argument>/bundles/backoffice/images/logo_title.png</argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="lock_protection">false</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
          <argument>bundles/sonataadmin/css/colors.css</argument>
          <argument>bundles/applicationsonataadmin/custom.css</argument>
        </argument>
      </argument>
      <argument type="service" id="property_accessor"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setAdminServiceIds">
        <argument type="collection">
          <argument>admin.first</argument>
          <argument>admin.second</argument>
          <argument>admin.third</argument>
          <argument>admin.fourth</argument>
          <argument>admin.slide</argument>
          <argument>admin.slider</argument>
          <argument>sonata.page.admin.page</argument>
          <argument>sonata.page.admin.block</argument>
          <argument>sonata.page.admin.shared_block</argument>
          <argument>sonata.page.admin.snapshot</argument>
          <argument>sonata.page.admin.site</argument>
          <argument>sonata.user.admin.user</argument>
          <argument>sonata.user.admin.group</argument>
          <argument>sonata.media.admin.media</argument>
          <argument>sonata.media.admin.gallery</argument>
          <argument>sonata.media.admin.gallery_has_media</argument>
        </argument>
      </call>
      <call method="setAdminGroups">
        <argument type="collection">
          <argument key="Ap Architecture" type="collection">
            <argument key="label">Ap Architecture</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-map"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">admin.first</argument>
                <argument key="label">L'agencee</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">admin.second</argument>
                <argument key="label">Pourquoi</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">admin.third</argument>
                <argument key="label">Missions</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">admin.fourth</argument>
                <argument key="label">Réalisations</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
          </argument>
          <argument key="Sliders" type="collection">
            <argument key="label">Sliders</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-caret-square-o-right"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">admin.slide</argument>
                <argument key="label">Slide</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">admin.slider</argument>
                <argument key="label">Slider</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
          </argument>
          <argument key="sonata_page" type="collection">
            <argument key="label">sonata_page</argument>
            <argument key="label_catalogue">SonataPageBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.page.admin.page</argument>
                <argument key="label">page</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.page.admin.shared_block</argument>
                <argument key="label">shared_block</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.page.admin.site</argument>
                <argument key="label">site</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
          </argument>
          <argument key="sonata_user" type="collection">
            <argument key="label">sonata_user</argument>
            <argument key="label_catalogue">SonataUserBundle</argument>
            <argument key="icon">&lt;i class='fa fa-users'&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.user.admin.user</argument>
                <argument key="label">users</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.user.admin.group</argument>
                <argument key="label">groups</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
          </argument>
          <argument key="sonata_media" type="collection">
            <argument key="label">sonata_media</argument>
            <argument key="label_catalogue">SonataMediaBundle</argument>
            <argument key="icon">&lt;i class='fa fa-image'&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.media.admin.media</argument>
                <argument key="label">media</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.media.admin.gallery</argument>
                <argument key="label">gallery</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="setAdminClasses">
        <argument type="collection">
          <argument key="BackOfficeBundle\Entity\First" type="collection">
            <argument>admin.first</argument>
          </argument>
          <argument key="BackOfficeBundle\Entity\Second" type="collection">
            <argument>admin.second</argument>
          </argument>
          <argument key="BackOfficeBundle\Entity\Third" type="collection">
            <argument>admin.third</argument>
          </argument>
          <argument key="BackOfficeBundle\Entity\Fourth" type="collection">
            <argument>admin.fourth</argument>
          </argument>
          <argument key="BackOfficeBundle\Entity\Slide" type="collection">
            <argument>admin.slide</argument>
          </argument>
          <argument key="BackOfficeBundle\Entity\Slider" type="collection">
            <argument>admin.slider</argument>
          </argument>
          <argument key="Application\Sonata\PageBundle\Entity\Page" type="collection">
            <argument>sonata.page.admin.page</argument>
          </argument>
          <argument key="Application\Sonata\PageBundle\Entity\Block" type="collection">
            <argument>sonata.page.admin.block</argument>
            <argument>sonata.page.admin.shared_block</argument>
          </argument>
          <argument key="Application\Sonata\PageBundle\Entity\Snapshot" type="collection">
            <argument>sonata.page.admin.snapshot</argument>
          </argument>
          <argument key="Application\Sonata\PageBundle\Entity\Site" type="collection">
            <argument>sonata.page.admin.site</argument>
          </argument>
          <argument key="Application\Sonata\UserBundle\Entity\User" type="collection">
            <argument>sonata.user.admin.user</argument>
          </argument>
          <argument key="Application\Sonata\UserBundle\Entity\Group" type="collection">
            <argument>sonata.user.admin.group</argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\Media" type="collection">
            <argument>sonata.media.admin.media</argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\Gallery" type="collection">
            <argument>sonata.media.admin.gallery</argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\GalleryHasMedia" type="collection">
            <argument>sonata.media.admin.gallery_has_media</argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.route_loader" class="Sonata\AdminBundle\Route\AdminPoolLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument>admin.first</argument>
        <argument>admin.second</argument>
        <argument>admin.third</argument>
        <argument>admin.fourth</argument>
        <argument>admin.slide</argument>
        <argument>admin.slider</argument>
        <argument>sonata.page.admin.page</argument>
        <argument>sonata.page.admin.block</argument>
        <argument>sonata.page.admin.shared_block</argument>
        <argument>sonata.page.admin.snapshot</argument>
        <argument>sonata.page.admin.site</argument>
        <argument>sonata.user.admin.user</argument>
        <argument>sonata.user.admin.group</argument>
        <argument>sonata.media.admin.media</argument>
        <argument>sonata.media.admin.gallery</argument>
        <argument>sonata.media.admin.gallery_has_media</argument>
      </argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.helper" class="Sonata\AdminBundle\Admin\AdminHelper">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.builder.filter.factory" class="Sonata\AdminBundle\Filter\FilterFactory">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="doctrine_orm_boolean">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter">sonata.admin.orm.filter.type.callback</argument>
        <argument key="doctrine_orm_callback">sonata.admin.orm.filter.type.callback</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter">sonata.admin.orm.filter.type.choice</argument>
        <argument key="doctrine_orm_choice">sonata.admin.orm.filter.type.choice</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter">sonata.admin.orm.filter.type.model</argument>
        <argument key="doctrine_orm_model">sonata.admin.orm.filter.type.model</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="doctrine_orm_model_autocomplete">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\StringFilter">sonata.admin.orm.filter.type.string</argument>
        <argument key="doctrine_orm_string">sonata.admin.orm.filter.type.string</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter">sonata.admin.orm.filter.type.number</argument>
        <argument key="doctrine_orm_number">sonata.admin.orm.filter.type.number</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateFilter">sonata.admin.orm.filter.type.date</argument>
        <argument key="doctrine_orm_date">sonata.admin.orm.filter.type.date</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="doctrine_orm_date_range">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="doctrine_orm_datetime">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter">sonata.admin.orm.filter.type.time</argument>
        <argument key="doctrine_orm_time">sonata.admin.orm.filter.type.time</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="doctrine_orm_datetime_range">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter">sonata.admin.orm.filter.type.class</argument>
        <argument key="doctrine_orm_class">sonata.admin.orm.filter.type.class</argument>
      </argument>
    </service>
    <service id="sonata.admin.breadcrumbs_builder" class="Sonata\AdminBundle\Admin\BreadcrumbsBuilder">
      <argument type="collection">
        <argument key="child_admin_route">edit</argument>
      </argument>
    </service>
    <service id="sonata.admin.label.strategy.bc" class="Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.native" class="Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.noop" class="Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.underscore" class="Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.form_component" class="Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy"/>
    <service id="sonata.admin.controller.admin" class="Sonata\AdminBundle\Controller\HelperController">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.helper"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="sonata.admin.audit.manager" class="Sonata\AdminBundle\Model\AuditManager">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.exporter" class="Sonata\AdminBundle\Export\Exporter">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.admin.search.handler" class="Sonata\AdminBundle\Search\SearchHandler">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.event.extension" class="Sonata\AdminBundle\Event\AdminEventExtension">
      <tag name="sonata.admin.extension" global="1"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.twig.global" class="Sonata\AdminBundle\Twig\GlobalVariables">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.form.type.admin" class="Sonata\AdminBundle\Form\Type\AdminType">
      <tag name="form.type" alias="sonata_type_admin"/>
    </service>
    <service id="sonata.admin.form.type.model_choice" class="Sonata\AdminBundle\Form\Type\ModelType">
      <tag name="form.type" alias="sonata_type_model"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sonata.admin.form.type.model_list" class="Sonata\AdminBundle\Form\Type\ModelListType">
      <tag name="form.type" alias="sonata_type_model_list"/>
    </service>
    <service id="sonata.admin.form.type.model_reference" class="Sonata\AdminBundle\Form\Type\ModelReferenceType">
      <tag name="form.type" alias="sonata_type_model_reference"/>
    </service>
    <service id="sonata.admin.form.type.model_hidden" class="Sonata\AdminBundle\Form\Type\ModelHiddenType">
      <tag name="form.type" alias="sonata_type_model_hidden"/>
    </service>
    <service id="sonata.admin.form.type.model_autocomplete" class="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">
      <tag name="form.type" alias="sonata_type_model_autocomplete"/>
    </service>
    <service id="sonata.admin.form.type.collection" class="Sonata\AdminBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_native_collection"/>
    </service>
    <service id="sonata.admin.doctrine_orm.form.type.choice_field_mask" class="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType">
      <tag name="form.type" alias="sonata_type_choice_field_mask"/>
    </service>
    <service id="sonata.admin.form.extension.field" class="Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="email"></argument>
        <argument key="textarea"></argument>
        <argument key="text"></argument>
        <argument key="choice"></argument>
        <argument key="integer"></argument>
        <argument key="datetime">sonata-medium-date</argument>
        <argument key="date">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateTimeType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\EmailType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\IntegerType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextareaType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextType"></argument>
      </argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="lock_protection">false</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
          <argument>bundles/sonataadmin/css/colors.css</argument>
          <argument>bundles/applicationsonataadmin/custom.css</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.admin.form.extension.field.mopa" class="Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="sonata.admin.form.extension.choice" class="Sonata\AdminBundle\Form\Extension\ChoiceTypeExtension">
      <tag name="form.type_extension" alias="choice" extended_type="Symfony\Component\Form\Extension\Core\Type\ChoiceType" extended-type="Symfony\Component\Form\Extension\Core\Type\ChoiceType"/>
    </service>
    <service id="sonata.admin.form.filter.type.number" class="Sonata\AdminBundle\Form\Type\Filter\NumberType">
      <tag name="form.type" alias="sonata_type_filter_number"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.choice" class="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">
      <tag name="form.type" alias="sonata_type_filter_choice"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.default" class="Sonata\AdminBundle\Form\Type\Filter\DefaultType">
      <tag name="form.type" alias="sonata_type_filter_default"/>
    </service>
    <service id="sonata.admin.form.filter.type.date" class="Sonata\AdminBundle\Form\Type\Filter\DateType">
      <tag name="form.type" alias="sonata_type_filter_date"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.daterange" class="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">
      <tag name="form.type" alias="sonata_type_filter_date_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">
      <tag name="form.type" alias="sonata_type_filter_datetime"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime_range" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_filter_datetime_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.admin.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.admin.route.path_info" class="Sonata\AdminBundle\Route\PathInfoBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.query_string" class="Sonata\AdminBundle\Route\QueryStringBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.default_generator" class="Sonata\AdminBundle\Route\DefaultRouteGenerator">
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="sonata.admin.route.cache"/>
    </service>
    <service id="sonata.admin.route.cache" class="Sonata\AdminBundle\Route\RoutesCache">
      <argument>C:/wamp/www/Aparchi/app/cache/dev/sonata/admin</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.route.cache_warmup" class="Sonata\AdminBundle\Route\RoutesCacheWarmUp">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="sonata.admin.route.cache"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.admin_list" class="Sonata\AdminBundle\Block\AdminListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.admin_list</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.search_result" class="Sonata\AdminBundle\Block\AdminSearchBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.search_result</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.search.handler"/>
    </service>
    <service id="sonata.admin.block.stats" class="Sonata\AdminBundle\Block\AdminStatsBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.stats</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.menu_builder" class="Sonata\AdminBundle\Menu\MenuBuilder">
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.sidebar_menu" class="Knp\Menu\MenuItem">
      <tag name="knp_menu.menu" alias="sonata_admin_sidebar"/>
      <factory service="sonata.admin.menu_builder" method="createSidebarMenu"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.admin" class="Sonata\AdminBundle\Menu\Matcher\Voter\AdminVoter">
      <tag name="knp_menu.voter" request="1"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.children" class="Sonata\AdminBundle\Menu\Matcher\Voter\ChildrenVoter">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="knp_menu.matcher"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.active" class="Sonata\AdminBundle\Menu\Matcher\Voter\ActiveVoter">
      <tag name="knp_menu.voter"/>
    </service>
    <service id="sonata.admin.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminAclManipulator">
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.object.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminObjectAclManipulator">
      <argument type="service" id="form.factory"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.cache.manager" class="Sonata\Cache\CacheManager">
      <argument type="service" id="sonata.cache.invalidation.simple"/>
      <argument type="collection">
        <argument key="sonata.cache.noop" type="service" id="sonata.cache.noop"/>
        <argument key="sonata.cache.esi" type="service" id="sonata.cache.esi"/>
        <argument key="sonata.cache.ssi" type="service" id="sonata.cache.ssi"/>
        <argument key="sonata.cache.symfony" type="service" id="sonata.cache.symfony"/>
        <argument key="sonata.page.cache.js_sync" type="service" id="sonata.page.cache.js_sync"/>
        <argument key="sonata.page.cache.js_async" type="service" id="sonata.page.cache.js_async"/>
      </argument>
      <call method="setRecorder">
        <argument type="service" id="sonata.cache.recorder"/>
      </call>
    </service>
    <service id="sonata.cache.recorder" class="Sonata\Cache\Invalidation\Recorder">
      <argument type="service" id="sonata.cache.model_identifier"/>
    </service>
    <service id="sonata.cache.model_identifier" class="Sonata\Cache\Invalidation\ModelCollectionIdentifiers">
      <argument type="collection"/>
    </service>
    <service id="sonata.cache.noop" class="Sonata\Cache\Adapter\Cache\NoopCache">
      <tag name="sonata.cache"/>
    </service>
    <service id="sonata.cache.esi" class="Sonata\CacheBundle\Adapter\VarnishCache">
      <tag name="sonata.cache"/>
      <argument>an unique security key</argument>
      <argument type="collection">
        <argument>varnishadm -T 127.0.0.1:2000 {{ COMMAND }} "{{ EXPRESSION }}"</argument>
      </argument>
      <argument type="service" id="cmf_routing.router"/>
      <argument>purge</argument>
      <argument type="service" id="controller_resolver"/>
    </service>
    <service id="sonata.cache.ssi" class="Sonata\CacheBundle\Adapter\SsiCache">
      <tag name="sonata.cache"/>
      <argument>an unique security key</argument>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="controller_resolver"/>
    </service>
    <service id="sonata.cache.symfony" class="Sonata\CacheBundle\Adapter\SymfonyCache">
      <tag name="sonata.cache"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="filesystem"/>
      <argument>C:/wamp/www/Aparchi/app/cache/dev</argument>
      <argument>s3cur3</argument>
      <argument>true</argument>
      <argument type="collection">
        <argument>mytype1</argument>
        <argument>mycustomtype2</argument>
      </argument>
      <argument type="collection">
        <argument type="collection">
          <argument key="domain">kooqit.local</argument>
          <argument key="ip">127.0.0.1</argument>
          <argument key="port">80</argument>
          <argument key="basic">false</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="RCV" type="collection">
          <argument key="sec">2</argument>
          <argument key="usec">0</argument>
        </argument>
        <argument key="SND" type="collection">
          <argument key="sec">2</argument>
          <argument key="usec">0</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.cache.invalidation.simple" class="Sonata\CacheBundle\Invalidation\SimpleCacheInvalidation">
      <argument type="service" id="logger"/>
    </service>
    <service id="sonata.cache.orm.event_subscriber.default" class="Sonata\CacheBundle\Invalidation\DoctrineORMListener">
      <argument type="service" id="sonata.cache.model_identifier"/>
      <argument type="collection">
        <argument key="sonata.cache.noop" type="service" id="sonata.cache.noop"/>
        <argument key="sonata.cache.esi" type="service" id="sonata.cache.esi"/>
        <argument key="sonata.cache.ssi" type="service" id="sonata.cache.ssi"/>
        <argument key="sonata.cache.symfony" type="service" id="sonata.cache.symfony"/>
        <argument key="sonata.page.cache.js_sync" type="service" id="sonata.page.cache.js_sync"/>
        <argument key="sonata.page.cache.js_async" type="service" id="sonata.page.cache.js_async"/>
      </argument>
    </service>
    <service id="sonata.cache.orm.event_subscriber" class="Sonata\CacheBundle\Invalidation\DoctrineORMListenerContainerAware">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="service_container"/>
      <argument>sonata.cache.orm.event_subscriber.default</argument>
    </service>
    <service id="sonata.seo.block.email.share_button" class="Sonata\SeoBundle\Block\Social\EmailShareButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.email.share_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.facebook.like_box" class="Sonata\SeoBundle\Block\Social\FacebookLikeBoxBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.facebook.like_box</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.facebook.like_button" class="Sonata\SeoBundle\Block\Social\FacebookLikeButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.facebook.like_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.facebook.send_button" class="Sonata\SeoBundle\Block\Social\FacebookSendButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.facebook.send_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.facebook.share_button" class="Sonata\SeoBundle\Block\Social\FacebookShareButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.facebook.share_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.twitter.share_button" class="Sonata\SeoBundle\Block\Social\TwitterShareButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.twitter.share_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.twitter.follow_button" class="Sonata\SeoBundle\Block\Social\TwitterFollowButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.twitter.follow_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.twitter.hashtag_button" class="Sonata\SeoBundle\Block\Social\TwitterHashtagButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.twitter.hashtag_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.twitter.mention_button" class="Sonata\SeoBundle\Block\Social\TwitterMentionButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.twitter.mention_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.twitter.embed" class="Sonata\SeoBundle\Block\Social\TwitterEmbedTweetBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.twitter.embed</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.pinterest.pin_button" class="Sonata\SeoBundle\Block\Social\PinterestPinButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.pinterest.pin_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.breadcrumb.homepage" class="Sonata\SeoBundle\Block\Breadcrumb\HomepageBreadcrumbBlockService">
      <tag name="sonata.breadcrumb"/>
      <tag name="sonata.block"/>
      <argument>homepage</argument>
      <argument>sonata.seo.block.breadcrumb.homepage</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.seo.event.breadcrumb" class="Sonata\SeoBundle\Event\BreadcrumbListener">
      <tag name="kernel.event_listener" event="sonata.block.event.breadcrumb" method="onBlock"/>
      <call method="addBlockService">
        <argument>sonata.seo.block.breadcrumb.homepage</argument>
        <argument type="service" id="sonata.seo.block.breadcrumb.homepage"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.page.block.breadcrumb</argument>
        <argument type="service" id="sonata.page.block.breadcrumb"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.user.block.breadcrumb_index</argument>
        <argument type="service" id="sonata.user.block.breadcrumb_index"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.user.block.breadcrumb_profile</argument>
        <argument type="service" id="sonata.user.block.breadcrumb_profile"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.media.block.breadcrumb_view</argument>
        <argument type="service" id="sonata.media.block.breadcrumb_view"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.media.block.breadcrumb_index</argument>
        <argument type="service" id="sonata.media.block.breadcrumb_index"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.media.block.breadcrumb_view_media</argument>
        <argument type="service" id="sonata.media.block.breadcrumb_view_media"/>
      </call>
    </service>
    <service id="sonata.seo.page.default" class="Sonata\SeoBundle\Seo\SeoPage">
      <call method="setTitle">
        <argument>Sonata Project</argument>
      </call>
      <call method="setMetas">
        <argument type="collection">
          <argument key="name" type="collection">
            <argument key="keywords">foo bar</argument>
            <argument key="description">The description</argument>
            <argument key="robots">index, follow</argument>
          </argument>
          <argument key="property" type="collection">
            <argument key="og:site_name">Sonata Project Sandbox</argument>
            <argument key="og:description">A demo of the some rich bundles for your Symfony2 projects</argument>
          </argument>
          <argument key="http-equiv" type="collection">
            <argument key="Content-Type">text/html; charset=utf-8</argument>
          </argument>
          <argument key="charset" type="collection">
            <argument key="UTF-8"></argument>
          </argument>
        </argument>
      </call>
      <call method="setHtmlAttributes">
        <argument type="collection">
          <argument key="xmlns">http://www.w3.org/1999/xhtml</argument>
          <argument key="xmlns:og">http://opengraphprotocol.org/schema/</argument>
        </argument>
      </call>
      <call method="setSeparator">
        <argument> - </argument>
      </call>
    </service>
    <service id="sonata.seo.sitemap.manager" class="Sonata\SeoBundle\Sitemap\SourceManager" shared="false"/>
    <service id="sonata.easy_extends.generator.bundle" class="Sonata\EasyExtendsBundle\Generator\BundleGenerator"/>
    <service id="sonata.easy_extends.generator.orm" class="Sonata\EasyExtendsBundle\Generator\OrmGenerator"/>
    <service id="sonata.easy_extends.generator.odm" class="Sonata\EasyExtendsBundle\Generator\OdmGenerator"/>
    <service id="sonata.easy_extends.generator.phpcr" class="Sonata\EasyExtendsBundle\Generator\PHPCRGenerator"/>
    <service id="sonata.easy_extends.generator.serializer" class="Sonata\EasyExtendsBundle\Generator\SerializerGenerator"/>
    <service id="sonata.easy_extends.doctrine.mapper" class="Sonata\EasyExtendsBundle\Mapper\DoctrineORMMapper">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection"/>
      <call method="addAssociation">
        <argument>Application\Sonata\PageBundle\Entity\Page</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">children</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">parent</argument>
            <argument key="orphanRemoval">false</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">blocks</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Block</argument>
            <argument key="cascade" type="collection">
              <argument>remove</argument>
              <argument>persist</argument>
              <argument>refresh</argument>
              <argument>merge</argument>
              <argument>detach</argument>
            </argument>
            <argument key="mappedBy">page</argument>
            <argument key="orphanRemoval">false</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">sources</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">target</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\PageBundle\Entity\Page</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">site</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Site</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">site_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">parent</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">children</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">parent_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">target</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">sources</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">target_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\PageBundle\Entity\Block</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">children</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Block</argument>
            <argument key="cascade" type="collection">
              <argument>remove</argument>
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">parent</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\PageBundle\Entity\Block</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">parent</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Block</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">children</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">parent_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">page</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">blocks</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">page_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\PageBundle\Entity\Snapshot</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">site</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Site</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">site_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">page</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">page_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\UserBundle\Entity\User</argument>
        <argument>mapManyToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">groups</argument>
            <argument key="targetEntity">Application\Sonata\UserBundle\Entity\Group</argument>
            <argument key="cascade" type="collection"/>
            <argument key="joinTable" type="collection">
              <argument key="name">fos_user_user_group</argument>
              <argument key="joinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">user_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
              <argument key="inverseJoinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">group_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">media</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">gallery</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Gallery</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">gallery_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Media</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">gallery</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\NotificationBundle\Entity\Message</argument>
        <argument>idx_state</argument>
        <argument type="collection">
          <argument>state</argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\NotificationBundle\Entity\Message</argument>
        <argument>idx_created_at</argument>
        <argument type="collection">
          <argument>created_at</argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\PageBundle\Entity\Snapshot</argument>
        <argument>idx_snapshot_dates_enabled</argument>
        <argument type="collection">
          <argument>publication_date_start</argument>
          <argument>publication_date_end</argument>
          <argument>enabled</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.notification.dispatcher" class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher">
      <argument type="service" id="service_container"/>
      <call method="addListenerService">
        <argument>mailer</argument>
        <argument type="collection">
          <argument>sonata.notification.consumer.swift_mailer</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>logger</argument>
        <argument type="collection">
          <argument>sonata.notification.consumer.logger</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.page.create_snapshots</argument>
        <argument type="collection">
          <argument>sonata.page.notification.create_snapshots</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.page.create_snapshot</argument>
        <argument type="collection">
          <argument>sonata.page.notification.create_snapshot</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.page.cleanup_snapshots</argument>
        <argument type="collection">
          <argument>sonata.page.notification.cleanup_snapshots</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.page.cleanup_snapshot</argument>
        <argument type="collection">
          <argument>sonata.page.notification.cleanup_snapshot</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.media.create_thumbnail</argument>
        <argument type="collection">
          <argument>sonata.media.notification.create_thumbnail</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="sonata.notification.manager.message.default" class="Sonata\NotificationBundle\Entity\MessageManager">
      <argument>Application\Sonata\NotificationBundle\Entity\Message</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.notification.backend.runtime" class="Sonata\NotificationBundle\Backend\RuntimeBackend">
      <argument type="service" id="sonata.notification.dispatcher"/>
    </service>
    <service id="sonata.notification.backend.postpone" class="Sonata\NotificationBundle\Backend\PostponeRuntimeBackend">
      <tag name="kernel.event_listener" event="kernel.terminate" method="onEvent"/>
      <argument type="service" id="sonata.notification.dispatcher"/>
    </service>
    <service id="sonata.notification.backend.doctrine" class="Sonata\NotificationBundle\Backend\MessageManagerBackendDispatcher">
      <argument type="service" id="sonata.notification.manager.message.default"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="sonata.notification.consumer.metadata" class="Sonata\NotificationBundle\Consumer\Metadata">
      <argument type="collection">
        <argument key="mailer" type="collection">
          <argument>sonata.notification.consumer.swift_mailer</argument>
        </argument>
        <argument key="logger" type="collection">
          <argument>sonata.notification.consumer.logger</argument>
        </argument>
        <argument key="sonata.page.create_snapshots" type="collection">
          <argument>sonata.page.notification.create_snapshots</argument>
        </argument>
        <argument key="sonata.page.create_snapshot" type="collection">
          <argument>sonata.page.notification.create_snapshot</argument>
        </argument>
        <argument key="sonata.page.cleanup_snapshots" type="collection">
          <argument>sonata.page.notification.cleanup_snapshots</argument>
        </argument>
        <argument key="sonata.page.cleanup_snapshot" type="collection">
          <argument>sonata.page.notification.cleanup_snapshot</argument>
        </argument>
        <argument key="sonata.media.create_thumbnail" type="collection">
          <argument>sonata.media.notification.create_thumbnail</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.notification.erroneous_messages_selector" class="Sonata\NotificationBundle\Selector\ErroneousMessagesSelector">
      <argument type="service" id="doctrine"/>
      <argument>Application\Sonata\NotificationBundle\Entity\Message</argument>
    </service>
    <service id="sonata.notification.event.doctrine_optimize" class="Sonata\NotificationBundle\Event\DoctrineOptimizeListener">
      <tag name="kernel.event_listener" event="sonata.notification.event.message_iterate_event" method="iterate"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.notification.event.doctrine_backend_optimize" class="Sonata\NotificationBundle\Event\DoctrineBackendOptimizeListener">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.notification.consumer.swift_mailer" class="Sonata\NotificationBundle\Consumer\SwiftMailerConsumer">
      <tag name="sonata.notification.consumer" type="mailer"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
    </service>
    <service id="sonata.notification.consumer.logger" class="Sonata\NotificationBundle\Consumer\LoggerConsumer">
      <tag name="sonata.notification.consumer" type="logger"/>
      <argument type="service" id="logger"/>
    </service>
    <service id="sonata.page.site.selector.host" class="Sonata\PageBundle\Site\HostSiteSelector">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="47"/>
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequestRedirect" priority="0"/>
      <argument type="service" id="sonata.page.manager.site"/>
      <argument type="service" id="sonata.page.decorator_strategy"/>
      <argument type="service" id="sonata.seo.page.default"/>
    </service>
    <service id="sonata.page.response_listener" class="Sonata\PageBundle\Listener\ResponseListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onCoreResponse" priority="-1"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.page.page_service_manager"/>
      <argument type="service" id="sonata.page.decorator_strategy"/>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.page.request_listener" class="Sonata\PageBundle\Listener\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onCoreRequest" priority="30"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.page.site.selector.host"/>
      <argument type="service" id="sonata.page.decorator_strategy"/>
    </service>
    <service id="sonata.page.cms_manager_selector" class="Sonata\PageBundle\CmsManager\CmsManagerSelector">
      <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.page.cms.page" class="Sonata\PageBundle\CmsManager\CmsPageManager">
      <tag name="sonata.page.manager" type="page"/>
      <argument type="service" id="sonata.page.manager.page"/>
      <argument type="service" id="sonata.page.block_interactor"/>
    </service>
    <service id="sonata.page.cms.snapshot" class="Sonata\PageBundle\CmsManager\CmsSnapshotManager">
      <tag name="sonata.page.manager" type="snapshot"/>
      <argument type="service" id="sonata.page.manager.snapshot"/>
      <argument type="service" id="sonata.page.transformer"/>
    </service>
    <service id="sonata.page.decorator_strategy" class="Sonata\PageBundle\CmsManager\DecoratorStrategy">
      <argument type="collection">
        <argument>sonata_page_cache_esi</argument>
        <argument>sonata_page_cache_ssi</argument>
        <argument>sonata_page_js_sync_cache</argument>
        <argument>sonata_page_js_async_cache</argument>
        <argument>sonata_cache_esi</argument>
        <argument>sonata_cache_ssi</argument>
        <argument>sonata_cache_js_async</argument>
        <argument>sonata_cache_js_sync</argument>
        <argument>sonata_cache_apc</argument>
      </argument>
      <argument type="collection">
        <argument>^(.*)admin(.*)</argument>
        <argument>^_(.*)</argument>
      </argument>
      <argument type="collection">
        <argument>^/admin\/</argument>
      </argument>
    </service>
    <service id="sonata.page.router" class="Sonata\PageBundle\Route\CmsPageRouter">
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.page.site.selector.host"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="sonata.page.route.page.generator" class="Sonata\PageBundle\Route\RoutePageGenerator">
      <argument type="service" id="router.default"/>
      <argument type="service" id="sonata.page.manager.page"/>
      <argument type="service" id="sonata.page.decorator_strategy"/>
      <argument type="service" id="sonata.page.kernel.exception_listener"/>
    </service>
    <service id="sonata.page.template_manager" class="Sonata\PageBundle\Page\TemplateManager">
      <argument type="service" id="templating"/>
      <argument type="collection">
        <argument key="error_codes" type="collection">
          <argument key="404">_page_internal_error_not_found</argument>
          <argument key="500">_page_internal_error_fatal</argument>
        </argument>
      </argument>
      <call method="setAll">
        <argument type="collection">
          <argument key="default" type="service">
            <service class="Sonata\PageBundle\Model\Template" public="false">
              <argument>default</argument>
              <argument>SonataPageBundle::layout-custom.html.twig</argument>
              <argument type="collection">
                <argument key="header" type="collection">
                  <argument key="name">Header</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">0</argument>
                    <argument key="width">100</argument>
                    <argument key="height">12.5</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">87.5</argument>
                  </argument>
                </argument>
                <argument key="content_top" type="collection">
                  <argument key="name">Top content</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">12.5</argument>
                    <argument key="width">50</argument>
                    <argument key="height">50</argument>
                    <argument key="right">50</argument>
                    <argument key="bottom">37.5</argument>
                  </argument>
                </argument>
                <argument key="content" type="collection">
                  <argument key="name">Main content</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">62.5</argument>
                    <argument key="width">100</argument>
                    <argument key="height">25</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">12.5</argument>
                  </argument>
                </argument>
                <argument key="content_bottom" type="collection">
                  <argument key="name">Bottom content</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">50</argument>
                    <argument key="y">12.5</argument>
                    <argument key="width">50</argument>
                    <argument key="height">50</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">37.5</argument>
                  </argument>
                </argument>
                <argument key="footer" type="collection">
                  <argument key="name">Footer</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">87.5</argument>
                    <argument key="width">100</argument>
                    <argument key="height">12.5</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">0</argument>
                  </argument>
                </argument>
              </argument>
            </service>
          </argument>
          <argument key="2columns" type="service">
            <service class="Sonata\PageBundle\Model\Template" public="false">
              <argument>2 columns layout</argument>
              <argument>SonataPageBundle::2columns_layout.html.twig</argument>
              <argument type="collection"/>
            </service>
          </argument>
        </argument>
      </call>
      <call method="setDefaultTemplateCode">
        <argument>default</argument>
      </call>
    </service>
    <service id="sonata.page.page_service_manager" class="Sonata\PageBundle\Page\PageServiceManager">
      <argument type="service" id="cmf_routing.router"/>
      <call method="setDefault">
        <argument type="service" id="sonata.page.service.default"/>
      </call>
      <call method="add">
        <argument>sonata.page.service.default</argument>
        <argument type="service" id="sonata.page.service.default"/>
      </call>
    </service>
    <service id="sonata.page.service.default" class="Sonata\PageBundle\Page\Service\DefaultPageService">
      <tag name="sonata.page"/>
      <argument>Default</argument>
      <argument type="service" id="sonata.page.template_manager"/>
      <argument type="service" id="sonata.seo.page.default"/>
    </service>
    <service id="sonata.page.admin.page" class="Sonata\PageBundle\Admin\PageAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="sonata_page" label_catalogue="%sonata.page.admin.page.translation_domain%" label="page" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.page.admin.page</argument>
      <argument>Application\Sonata\PageBundle\Entity\Page</argument>
      <argument>SonataPageBundle:PageAdmin</argument>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\PageBundle\Admin\BlockAdmin" shared="false">
            <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="sonata_page" label_catalogue="%sonata.page.admin.page.translation_domain%" label="block" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.page.admin.block</argument>
            <argument>Application\Sonata\PageBundle\Entity\Block</argument>
            <argument>SonataPageBundle:BlockAdmin</argument>
            <argument type="collection">
              <argument key="sonata.admin.block.admin_list" type="collection">
                <argument key="contexts" type="collection">
                  <argument>admin</argument>
                </argument>
                <argument key="templates" type="collection"/>
                <argument key="cache">sonata.cache.noop</argument>
                <argument key="settings" type="collection"/>
              </argument>
              <argument key="sonata.block.service.text" type="collection">
                <argument key="contexts" type="collection">
                  <argument>sonata_page_bundle</argument>
                </argument>
                <argument key="templates" type="collection"/>
                <argument key="cache">sonata.cache.noop</argument>
                <argument key="settings" type="collection"/>
              </argument>
              <argument key="sonata.block.service.rss" type="collection">
                <argument key="contexts" type="collection">
                  <argument>sonata_page_bundle</argument>
                </argument>
                <argument key="templates" type="collection"/>
                <argument key="cache">sonata.cache.noop</argument>
                <argument key="settings" type="collection"/>
              </argument>
              <argument key="sonata.media.block.media" type="collection">
                <argument key="contexts" type="collection">
                  <argument>sonata_page_bundle</argument>
                </argument>
                <argument key="templates" type="collection"/>
                <argument key="cache">sonata.cache.noop</argument>
                <argument key="settings" type="collection"/>
              </argument>
              <argument key="sonata.media.block.gallery" type="collection">
                <argument key="contexts" type="collection">
                  <argument>sonata_page_bundle</argument>
                </argument>
                <argument key="templates" type="collection"/>
                <argument key="cache">sonata.cache.noop</argument>
                <argument key="settings" type="collection"/>
              </argument>
              <argument key="sonata.formatter.block.formatter" type="collection">
                <argument key="contexts" type="collection">
                  <argument>sonata_page_bundle</argument>
                </argument>
                <argument key="templates" type="collection"/>
                <argument key="cache">sonata.cache.noop</argument>
                <argument key="settings" type="collection"/>
              </argument>
              <argument key="sonata.user.block.menu" type="collection">
                <argument key="contexts" type="collection">
                  <argument>sonata_page_bundle</argument>
                </argument>
                <argument key="templates" type="collection"/>
                <argument key="cache">sonata.cache.noop</argument>
                <argument key="settings" type="collection"/>
              </argument>
              <argument key="sonata.user.block.account" type="collection">
                <argument key="contexts" type="collection">
                  <argument>sonata_page_bundle</argument>
                </argument>
                <argument key="templates" type="collection"/>
                <argument key="cache">sonata.cache.noop</argument>
                <argument key="settings" type="collection"/>
              </argument>
            </argument>
            <call method="setCacheManager">
              <argument type="service" id="sonata.cache.manager"/>
            </call>
            <call method="setBlockManager">
              <argument type="service" id="sonata.block.manager"/>
            </call>
            <call method="setTranslationDomain">
              <argument>SonataPageBundle</argument>
            </call>
            <call method="setContainerBlockTypes">
              <argument type="collection">
                <argument>sonata.block.service.container</argument>
                <argument>sonata.page.block.container</argument>
                <argument>sonata.dashboard.block.container</argument>
                <argument>cmf.block.container</argument>
                <argument>cmf.block.slideshow</argument>
              </argument>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataPageBundle:Form:form_admin_fields.html.twig</argument>
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
              <argument>false</argument>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setPagerType">
              <argument>default</argument>
            </call>
            <call method="setLabel">
              <argument>block</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="showMosaicButton">
              <argument>true</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
                <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
                <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
                <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
                <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
                <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
                <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
                <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
                <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
                <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection"/>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\PageBundle\Admin\SnapshotAdmin" shared="false">
            <tag name="sonata.admin" manager_type="orm" group="sonata_page" label_catalogue="%sonata.page.admin.snapshot.translation_domain%" label="snapshot" show_in_dashboard="" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.page.admin.snapshot</argument>
            <argument>Application\Sonata\PageBundle\Entity\Snapshot</argument>
            <argument>SonataPageBundle:SnapshotAdmin</argument>
            <call method="setCacheManager">
              <argument type="service" id="sonata.cache.manager"/>
            </call>
            <call method="setTranslationDomain">
              <argument>SonataPageBundle</argument>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
              <argument>false</argument>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setPagerType">
              <argument>default</argument>
            </call>
            <call method="setLabel">
              <argument>snapshot</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="showMosaicButton">
              <argument>true</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
                <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
                <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
                <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
                <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
                <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
                <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
                <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
                <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
                <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection"/>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="setPageManager">
        <argument type="service" id="sonata.page.manager.page"/>
      </call>
      <call method="setCacheManager">
        <argument type="service" id="sonata.cache.manager"/>
      </call>
      <call method="setSiteManager">
        <argument type="service" id="sonata.page.manager.site"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataPageBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>page</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataPageBundle:PageAdmin:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
          <argument key="tree">SonataPageBundle:PageAdmin:tree.html.twig</argument>
          <argument key="compose">SonataPageBundle:PageAdmin:compose.html.twig</argument>
          <argument key="compose_container_show">SonataPageBundle:PageAdmin:compose_container_show.html.twig</argument>
          <argument key="select_site">SonataPageBundle:PageAdmin:select_site.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.page.admin.block" class="Sonata\PageBundle\Admin\BlockAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="sonata_page" label_catalogue="%sonata.page.admin.page.translation_domain%" label="block" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.page.admin.block</argument>
      <argument>Application\Sonata\PageBundle\Entity\Block</argument>
      <argument>SonataPageBundle:BlockAdmin</argument>
      <argument type="collection">
        <argument key="sonata.admin.block.admin_list" type="collection">
          <argument key="contexts" type="collection">
            <argument>admin</argument>
          </argument>
          <argument key="templates" type="collection"/>
          <argument key="cache">sonata.cache.noop</argument>
          <argument key="settings" type="collection"/>
        </argument>
        <argument key="sonata.block.service.text" type="collection">
          <argument key="contexts" type="collection">
            <argument>sonata_page_bundle</argument>
          </argument>
          <argument key="templates" type="collection"/>
          <argument key="cache">sonata.cache.noop</argument>
          <argument key="settings" type="collection"/>
        </argument>
        <argument key="sonata.block.service.rss" type="collection">
          <argument key="contexts" type="collection">
            <argument>sonata_page_bundle</argument>
          </argument>
          <argument key="templates" type="collection"/>
          <argument key="cache">sonata.cache.noop</argument>
          <argument key="settings" type="collection"/>
        </argument>
        <argument key="sonata.media.block.media" type="collection">
          <argument key="contexts" type="collection">
            <argument>sonata_page_bundle</argument>
          </argument>
          <argument key="templates" type="collection"/>
          <argument key="cache">sonata.cache.noop</argument>
          <argument key="settings" type="collection"/>
        </argument>
        <argument key="sonata.media.block.gallery" type="collection">
          <argument key="contexts" type="collection">
            <argument>sonata_page_bundle</argument>
          </argument>
          <argument key="templates" type="collection"/>
          <argument key="cache">sonata.cache.noop</argument>
          <argument key="settings" type="collection"/>
        </argument>
        <argument key="sonata.formatter.block.formatter" type="collection">
          <argument key="contexts" type="collection">
            <argument>sonata_page_bundle</argument>
          </argument>
          <argument key="templates" type="collection"/>
          <argument key="cache">sonata.cache.noop</argument>
          <argument key="settings" type="collection"/>
        </argument>
        <argument key="sonata.user.block.menu" type="collection">
          <argument key="contexts" type="collection">
            <argument>sonata_page_bundle</argument>
          </argument>
          <argument key="templates" type="collection"/>
          <argument key="cache">sonata.cache.noop</argument>
          <argument key="settings" type="collection"/>
        </argument>
        <argument key="sonata.user.block.account" type="collection">
          <argument key="contexts" type="collection">
            <argument>sonata_page_bundle</argument>
          </argument>
          <argument key="templates" type="collection"/>
          <argument key="cache">sonata.cache.noop</argument>
          <argument key="settings" type="collection"/>
        </argument>
      </argument>
      <call method="setCacheManager">
        <argument type="service" id="sonata.cache.manager"/>
      </call>
      <call method="setBlockManager">
        <argument type="service" id="sonata.block.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataPageBundle</argument>
      </call>
      <call method="setContainerBlockTypes">
        <argument type="collection">
          <argument>sonata.block.service.container</argument>
          <argument>sonata.page.block.container</argument>
          <argument>sonata.dashboard.block.container</argument>
          <argument>cmf.block.container</argument>
          <argument>cmf.block.slideshow</argument>
        </argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataPageBundle:Form:form_admin_fields.html.twig</argument>
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>block</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.page.admin.shared_block" class="Sonata\PageBundle\Admin\SharedBlockAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard="1" group="sonata_page" label_catalogue="%sonata.page.admin.page.translation_domain%" label="shared_block" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.page.admin.shared_block</argument>
      <argument>Application\Sonata\PageBundle\Entity\Block</argument>
      <argument>SonataPageBundle:BlockAdmin</argument>
      <call method="setCacheManager">
        <argument type="service" id="sonata.cache.manager"/>
      </call>
      <call method="setBlockManager">
        <argument type="service" id="sonata.block.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataPageBundle</argument>
      </call>
      <call method="setContainerBlockTypes">
        <argument type="collection">
          <argument>sonata.block.service.container</argument>
          <argument>sonata.page.block.container</argument>
          <argument>sonata.dashboard.block.container</argument>
          <argument>cmf.block.container</argument>
          <argument>cmf.block.slideshow</argument>
        </argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataPageBundle:Form:form_admin_fields.html.twig</argument>
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>shared_block</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.page.admin.snapshot" class="Sonata\PageBundle\Admin\SnapshotAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="sonata_page" label_catalogue="%sonata.page.admin.snapshot.translation_domain%" label="snapshot" show_in_dashboard="" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.page.admin.snapshot</argument>
      <argument>Application\Sonata\PageBundle\Entity\Snapshot</argument>
      <argument>SonataPageBundle:SnapshotAdmin</argument>
      <call method="setCacheManager">
        <argument type="service" id="sonata.cache.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataPageBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>snapshot</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.page.admin.site" class="Sonata\PageBundle\Admin\SiteAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="sonata_page" label_catalogue="%sonata.page.admin.site.translation_domain%" label="site" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.page.admin.site</argument>
      <argument>Application\Sonata\PageBundle\Entity\Site</argument>
      <argument>SonataPageBundle:SiteAdmin</argument>
      <argument type="service" id="sonata.page.route.page.generator"/>
      <call method="setTranslationDomain">
        <argument>SonataPageBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>site</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.page.block.container" class="Sonata\PageBundle\Block\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.page.block.container</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.page.block.children_pages" class="Sonata\PageBundle\Block\ChildrenPagesBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.page.block.children_pages</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.page.site.selector.host"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
    </service>
    <service id="sonata.page.block.ajax" class="Sonata\PageBundle\Controller\AjaxController">
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.page.block.context_manager"/>
    </service>
    <service id="sonata.page.block.context_manager" class="Sonata\PageBundle\Block\BlockContextManager">
      <argument type="service" id="sonata.block.loader.service"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.page.block.breadcrumb" class="Sonata\PageBundle\Block\BreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>page</argument>
      <argument>sonata.page.block.breadcrumb</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
    </service>
    <service id="sonata.page.block.shared_block" class="Sonata\PageBundle\Block\SharedBlockBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.page.block.shared_block</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.page.manager.block"/>
    </service>
    <service id="sonata.page.block.pagelist" class="Sonata\PageBundle\Block\PageListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.page.block.pagelist</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="sonata.page.proxy.snapshot.factory" class="Sonata\PageBundle\Model\SnapshotPageProxyFactory">
      <argument>Sonata\PageBundle\Model\SnapshotPageProxy</argument>
    </service>
    <service id="sonata.page.manager.page" class="Sonata\PageBundle\Entity\PageManager">
      <argument>Application\Sonata\PageBundle\Entity\Page</argument>
      <argument type="service" id="doctrine"/>
      <argument type="collection">
        <argument key="templateCode">default</argument>
        <argument key="enabled">true</argument>
        <argument key="routeName">null</argument>
        <argument key="name">null</argument>
        <argument key="slug">null</argument>
        <argument key="url">null</argument>
        <argument key="requestMethod">null</argument>
        <argument key="decorate">true</argument>
      </argument>
      <argument type="collection">
        <argument key="homepage" type="collection">
          <argument key="templateCode">default</argument>
          <argument key="enabled">true</argument>
          <argument key="routeName">null</argument>
          <argument key="name">null</argument>
          <argument key="slug">null</argument>
          <argument key="url">null</argument>
          <argument key="requestMethod">null</argument>
          <argument key="decorate">false</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.page.manager.snapshot" class="Sonata\PageBundle\Entity\SnapshotManager">
      <argument>Application\Sonata\PageBundle\Entity\Snapshot</argument>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.page.proxy.snapshot.factory"/>
    </service>
    <service id="sonata.page.manager.block" class="Sonata\PageBundle\Entity\BlockManager">
      <argument>Application\Sonata\PageBundle\Entity\Block</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.page.manager.site" class="Sonata\PageBundle\Entity\SiteManager">
      <argument>Application\Sonata\PageBundle\Entity\Site</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.page.block_interactor" class="Sonata\PageBundle\Entity\BlockInteractor">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.page.manager.block"/>
    </service>
    <service id="sonata.page.transformer" class="Sonata\PageBundle\Entity\Transformer">
      <argument type="service" id="sonata.page.manager.snapshot"/>
      <argument type="service" id="sonata.page.manager.page"/>
      <argument type="service" id="sonata.page.manager.block"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.page.form.type.page_selector" class="Sonata\PageBundle\Form\Type\PageSelectorType">
      <tag name="form.type" alias="sonata_page_selector"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="sonata.page.form.create_snapshot" class="Sonata\PageBundle\Form\Type\CreateSnapshotType">
      <tag name="form.type" alias="sonata_page_create_snapshot"/>
    </service>
    <service id="sonata.page.form.template_choice" class="Sonata\PageBundle\Form\Type\TemplateChoiceType">
      <tag name="form.type" alias="sonata_page_template"/>
      <argument type="service" id="sonata.page.template_manager"/>
    </service>
    <service id="sonata.page.form.page_type_choice" class="Sonata\PageBundle\Form\Type\PageTypeChoiceType">
      <tag name="form.type" alias="sonata_page_type_choice"/>
      <argument type="service" id="sonata.page.page_service_manager"/>
    </service>
    <service id="sonata.page.cache.js_sync" class="Sonata\PageBundle\Cache\BlockJsCache">
      <tag name="sonata.cache"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.page.block.context_manager"/>
      <argument>true</argument>
    </service>
    <service id="sonata.page.cache.js_async" class="Sonata\PageBundle\Cache\BlockJsCache">
      <tag name="sonata.cache"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.page.block.context_manager"/>
      <argument>false</argument>
    </service>
    <service id="sonata.page.twig.global" class="Sonata\PageBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.page.kernel.exception_listener" class="Sonata\PageBundle\Listener\ExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-127"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="sonata.page.site.selector.host"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument>true</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.page.page_service_manager"/>
      <argument type="service" id="sonata.page.decorator_strategy"/>
      <argument type="collection">
        <argument key="404">_page_internal_error_not_found</argument>
        <argument key="500">_page_internal_error_fatal</argument>
      </argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="sonata.page.notification.create_snapshots" class="Sonata\PageBundle\Consumer\CreateSnapshotsConsumer">
      <tag name="sonata.notification.consumer" type="sonata.page.create_snapshots"/>
      <argument type="service" id="sonata.notification.backend.runtime"/>
      <argument type="service" id="sonata.notification.backend.runtime"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="sonata.page.notification.create_snapshot" class="Sonata\PageBundle\Consumer\CreateSnapshotConsumer">
      <tag name="sonata.notification.consumer" type="sonata.page.create_snapshot"/>
      <argument type="service" id="sonata.page.manager.snapshot"/>
      <argument type="service" id="sonata.page.manager.page"/>
      <argument type="service" id="sonata.page.transformer"/>
    </service>
    <service id="sonata.page.notification.cleanup_snapshots" class="Sonata\PageBundle\Consumer\CleanupSnapshotsConsumer">
      <tag name="sonata.notification.consumer" type="sonata.page.cleanup_snapshots"/>
      <argument type="service" id="sonata.notification.backend.runtime"/>
      <argument type="service" id="sonata.notification.backend.runtime"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="sonata.page.notification.cleanup_snapshot" class="Sonata\PageBundle\Consumer\CleanupSnapshotConsumer">
      <tag name="sonata.notification.consumer" type="sonata.page.cleanup_snapshot"/>
      <argument type="service" id="sonata.page.manager.snapshot"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="sonata.page.validator.unique_url" class="Sonata\PageBundle\Validator\UniqueUrlValidator">
      <tag name="validator.constraint_validator" alias="sonata.page.validator.unique_url"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="cmf_routing.router" class="Symfony\Cmf\Component\Routing\ChainRouter">
      <argument type="service" id="logger" on-invalid="ignore"/>
      <call method="setContext">
        <argument type="service" id="router.request_context"/>
      </call>
      <call method="add">
        <argument type="service" id="sonata.page.router"/>
        <argument>150</argument>
      </call>
      <call method="add">
        <argument type="service" id="router.default"/>
        <argument>100</argument>
      </call>
    </service>
    <service id="cmf_routing.route_type_form_type" class="Symfony\Cmf\Bundle\RoutingBundle\Form\Type\RouteTypeType">
      <tag name="form.type" alias="cmf_routing_route_type"/>
    </service>
    <service id="cmf_routing.validator.route_defaults" class="Symfony\Cmf\Bundle\RoutingBundle\Validator\Constraints\RouteDefaultsValidator">
      <tag name="validator.constraint_validator" alias="cmf_routing.validator.route_defaults"/>
      <argument type="service" id="controller_resolver"/>
      <argument type="service" id="templating"/>
    </service>
    <service id="markdown.parser.parser_manager" class="Knp\Bundle\MarkdownBundle\Parser\ParserManager" public="false">
      <call method="addParser">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Min" public="false">
            <tag name="markdown.parser" alias="min"/>
          </service>
        </argument>
        <argument>min</argument>
      </call>
      <call method="addParser">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Light" public="false">
            <tag name="markdown.parser" alias="light"/>
          </service>
        </argument>
        <argument>light</argument>
      </call>
      <call method="addParser">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Medium" public="false">
            <tag name="markdown.parser" alias="medium"/>
          </service>
        </argument>
        <argument>medium</argument>
      </call>
      <call method="addParser">
        <argument type="service" id="markdown.parser"/>
        <argument>default</argument>
      </call>
      <call method="addParser">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Flavored" public="false">
            <tag name="markdown.parser" alias="flavored"/>
          </service>
        </argument>
        <argument>flavored</argument>
      </call>
    </service>
    <service id="templating.helper.markdown" class="Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper">
      <tag name="templating.helper" alias="markdown"/>
      <argument type="service" id="markdown.parser.parser_manager"/>
    </service>
    <service id="ivory_ck_editor.form.type" class="Ivory\CKEditorBundle\Form\Type\CKEditorType">
      <tag name="form.type" alias="ckeditor"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.styles_set_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
    </service>
    <service id="ivory_ck_editor.config_manager" class="Ivory\CKEditorBundle\Model\ConfigManager"/>
    <service id="ivory_ck_editor.plugin_manager" class="Ivory\CKEditorBundle\Model\PluginManager"/>
    <service id="ivory_ck_editor.styles_set_manager" class="Ivory\CKEditorBundle\Model\StylesSetManager"/>
    <service id="ivory_ck_editor.template_manager" class="Ivory\CKEditorBundle\Model\TemplateManager"/>
    <service id="ivory_ck_editor.renderer" class="Ivory\CKEditorBundle\Renderer\CKEditorRenderer">
      <argument type="service" id="service_container"/>
    </service>
    <service id="ivory_ck_editor.twig_extension" class="Ivory\CKEditorBundle\Twig\CKEditorExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="ivory_ck_editor.renderer"/>
    </service>
    <service id="sonata.formatter.pool" class="Sonata\FormatterBundle\Formatter\Pool">
      <argument>text</argument>
      <call method="setLogger">
        <argument type="service" id="logger"/>
      </call>
      <call method="add">
        <argument>markdown</argument>
        <argument type="service" id="sonata.formatter.text.markdown"/>
        <argument type="service" id="sonata.formatter.twig.env.markdown"/>
      </call>
      <call method="add">
        <argument>text</argument>
        <argument type="service" id="sonata.formatter.text.text"/>
        <argument type="service" id="sonata.formatter.twig.env.text"/>
      </call>
      <call method="add">
        <argument>rawhtml</argument>
        <argument type="service" id="sonata.formatter.text.raw"/>
        <argument type="service" id="sonata.formatter.twig.env.rawhtml"/>
      </call>
      <call method="add">
        <argument>richhtml</argument>
        <argument type="service" id="sonata.formatter.text.raw"/>
        <argument type="service" id="sonata.formatter.twig.env.richhtml"/>
      </call>
      <call method="add">
        <argument>twig</argument>
        <argument type="service" id="sonata.formatter.text.twigengine"/>
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.formatter.text.markdown" class="Sonata\FormatterBundle\Formatter\MarkdownFormatter">
      <tag name="sonata.text.formatter" code="markdown"/>
      <argument type="service" id="markdown.parser"/>
    </service>
    <service id="sonata.formatter.text.text" class="Sonata\FormatterBundle\Formatter\TextFormatter">
      <tag name="sonata.text.formatter"/>
    </service>
    <service id="sonata.formatter.text.raw" class="Sonata\FormatterBundle\Formatter\RawFormatter">
      <tag name="sonata.text.formatter"/>
    </service>
    <service id="sonata.formatter.text.twigengine" class="Sonata\FormatterBundle\Formatter\TwigFormatter">
      <tag name="sonata.text.formatter"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.formatter.twig.gist" class="Sonata\FormatterBundle\Extension\GistExtension"/>
    <service id="sonata.formatter.twig.control_flow" class="Sonata\FormatterBundle\Extension\ControlFlowExtension"/>
    <service id="sonata.formatter.validator.formatter" class="Sonata\FormatterBundle\Validator\Constraints\FormatterValidator">
      <tag name="validator.constraint_validator" alias="sonata.formatter.validator.formatter"/>
      <argument type="service" id="sonata.formatter.pool"/>
    </service>
    <service id="sonata.formatter.form.type.selector" class="Sonata\FormatterBundle\Form\Type\FormatterType">
      <tag name="form.type" alias="sonata_formatter_type"/>
      <argument type="service" id="sonata.formatter.pool"/>
      <argument type="service" id="translator"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
    </service>
    <service id="sonata.formatter.form.type.simple" class="Sonata\FormatterBundle\Form\Type\SimpleFormatterType">
      <tag name="form.type" alias="sonata_simple_formatter_type"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
    </service>
    <service id="sonata.formatter.block.formatter" class="Sonata\FormatterBundle\Block\FormatterBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.formatter.block.formatter</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.formatter.ckeditor.extension" class="Sonata\FormatterBundle\Admin\CkeditorAdminExtension">
      <tag name="sonata.admin.extension" target="sonata.media.admin.media"/>
    </service>
    <service id="sonata.formatter.twig.env.markdown" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_Array" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.markdown"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.formatter.twig.env.text" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_Array" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.text"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.formatter.twig.env.rawhtml" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_Array" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.rawhtml"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.formatter.twig.env.richhtml" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_Array" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.richhtml"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="fos_user.entity_manager" class="Doctrine\ORM\EntityManager" factory-method="getManager" factory-service="doctrine" public="false">
      <argument>null</argument>
    </service>
    <service id="fos_user.security.interactive_login_listener" class="FOS\UserBundle\Security\InteractiveLoginListener">
      <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.security.login_manager" class="FOS\UserBundle\Security\LoginManager">
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.user_checker.admin"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="fos_user.user_provider.username" class="FOS\UserBundle\Security\UserProvider" public="false">
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.util.user_manipulator" class="FOS\UserBundle\Util\UserManipulator">
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.username_form_type" class="FOS\UserBundle\Form\Type\UsernameFormType">
      <tag name="form.type" alias="fos_user_username"/>
      <argument type="service">
        <service class="FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer" public="false">
          <argument type="service" id="fos_user.user_manager"/>
        </service>
      </argument>
    </service>
    <service id="fos_user.profile.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_profile_form</argument>
      <argument>fos_user_profile</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Profile</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.profile.form.type" class="FOS\UserBundle\Form\Type\ProfileFormType">
      <tag name="form.type" alias="fos_user_profile"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.registration.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_registration_form</argument>
      <argument>fos_user_registration</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Registration</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.registration.form.type" class="FOS\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="fos_user_registration"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.change_password.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_change_password_form</argument>
      <argument>fos_user_change_password</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>ChangePassword</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.change_password.form.type" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
    </service>
    <service id="fos_user.change_password.form.handler.default" class="FOS\UserBundle\Form\Handler\ChangePasswordFormHandler" scope="request">
      <argument type="service" id="fos_user.change_password.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.resetting.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_resetting_form</argument>
      <argument>fos_user_resetting</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>ResetPassword</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.resetting.form.type" class="FOS\UserBundle\Form\Type\ResettingFormType">
      <tag name="form.type" alias="fos_user_resetting"/>
    </service>
    <service id="fos_user.group.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_group_form</argument>
      <argument>fos_user_group</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Registration</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.group.form.type" class="FOS\UserBundle\Form\Type\GroupFormType">
      <tag name="form.type" alias="fos_user_group"/>
      <argument>Application\Sonata\UserBundle\Entity\Group</argument>
    </service>
    <service id="sonata.user.editable_role_builder" class="Sonata\UserBundle\Security\EditableRolesBuilder">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_ALLOWED_TO_SWITCH</argument>
        </argument>
        <argument key="SONATA" type="collection">
          <argument>ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.user.form.type.security_roles" class="Sonata\UserBundle\Form\Type\SecurityRolesType">
      <tag name="form.type" alias="sonata_security_roles"/>
      <argument type="service" id="sonata.user.editable_role_builder"/>
    </service>
    <service id="sonata.user.admin.user" class="Sonata\UserBundle\Admin\Entity\UserAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.user.admin.groupname%" label="users" label_catalogue="%sonata.user.admin.label_catalogue%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.user.admin.groupicon%"/>
      <argument>sonata.user.admin.user</argument>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setUserManager">
        <argument type="service" id="fos_user.user_manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataUserBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>users</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.user.admin.group" class="Sonata\UserBundle\Admin\Entity\GroupAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.user.admin.groupname%" label="groups" label_catalogue="%sonata.user.admin.label_catalogue%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.user.admin.group</argument>
      <argument>Application\Sonata\UserBundle\Entity\Group</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataUserBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>groups</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.user.manager.user" class="Sonata\UserBundle\Entity\UserManagerProxy">
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="sonata.user.block.menu" class="Sonata\UserBundle\Block\ProfileMenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.user.block.menu</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="sonata.user.profile.menu_builder"/>
    </service>
    <service id="sonata.user.block.account" class="Sonata\UserBundle\Block\AccountBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.user.block.account</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="sonata.user.profile.menu_builder" class="Sonata\UserBundle\Menu\ProfileMenuBuilder">
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="translator"/>
      <argument type="collection">
        <argument type="collection">
          <argument key="route">sonata_user_profile_edit</argument>
          <argument key="label">link_edit_profile</argument>
          <argument key="domain">SonataUserBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
        <argument type="collection">
          <argument key="route">sonata_user_profile_edit_authentication</argument>
          <argument key="label">link_edit_authentication</argument>
          <argument key="domain">SonataUserBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.user.profile.form" class="Symfony\Component\Form\Form">
      <argument>sonata_user_profile_form</argument>
      <argument>sonata_user_profile</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Profile</argument>
          <argument>Default</argument>
        </argument>
        <argument key="translation_domain">SonataUserBundle</argument>
      </argument>
      <factory service="form.factory" method="createNamed"/>
    </service>
    <service id="sonata.user.profile.form.type" class="Sonata\UserBundle\Form\Type\ProfileType">
      <tag name="form.type" alias="sonata_user_profile"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="sonata.user.form.gender_list" class="Sonata\UserBundle\Form\Type\UserGenderListType">
      <tag name="form.type" alias="sonata_user_gender"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
      <argument>getGenderList</argument>
      <argument>sonata_user_gender</argument>
    </service>
    <service id="sonata.user.registration.form" class="Symfony\Component\Form\Form">
      <argument>sonata_user_registration_form</argument>
      <argument>sonata_user_registration</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Registration</argument>
          <argument>Default</argument>
        </argument>
      </argument>
      <factory service="form.factory" method="createNamed"/>
    </service>
    <service id="sonata.user.registration.form.type" class="Sonata\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="sonata_user_registration"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
      <argument type="collection"/>
    </service>
    <service id="sonata.user.twig.global" class="Sonata\UserBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.user.block.breadcrumb_index" class="Sonata\UserBundle\Block\Breadcrumb\UserIndexBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>user_index</argument>
      <argument>sonata.user.block.breadcrumb_index</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.user.block.breadcrumb_profile" class="Sonata\UserBundle\Block\Breadcrumb\UserProfileBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>user_profile</argument>
      <argument>sonata.user.block.breadcrumb_profile</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.media.pool" class="Sonata\MediaBundle\Provider\Pool">
      <argument>default</argument>
      <call method="addContext">
        <argument>Envies</argument>
        <argument type="collection">
          <argument>sonata.media.provider.dailymotion</argument>
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
          <argument>sonata.media.provider.vimeo</argument>
        </argument>
        <argument type="collection">
          <argument key="Envies_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Envies_medium" type="collection">
            <argument key="width">250</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Envies_big" type="collection">
            <argument key="width">500</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>Espèce</argument>
        <argument type="collection">
          <argument>sonata.media.provider.dailymotion</argument>
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
          <argument>sonata.media.provider.vimeo</argument>
        </argument>
        <argument type="collection">
          <argument key="Espèce_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Espèce_medium" type="collection">
            <argument key="width">250</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Espèce_big" type="collection">
            <argument key="width">500</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>Pays</argument>
        <argument type="collection">
          <argument>sonata.media.provider.dailymotion</argument>
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
          <argument>sonata.media.provider.vimeo</argument>
        </argument>
        <argument type="collection">
          <argument key="Pays_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Pays_medium" type="collection">
            <argument key="width">250</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Pays_big" type="collection">
            <argument key="width">500</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>Pictogramme</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="Pictogramme_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Pictogramme_medium" type="collection">
            <argument key="width">250</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Pictogramme_big" type="collection">
            <argument key="width">500</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>Produits</argument>
        <argument type="collection">
          <argument>sonata.media.provider.dailymotion</argument>
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
          <argument>sonata.media.provider.vimeo</argument>
        </argument>
        <argument type="collection">
          <argument key="Produits_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Produits_medium" type="collection">
            <argument key="width">250</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Produits_big" type="collection">
            <argument key="width">500</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>Sliders</argument>
        <argument type="collection">
          <argument>sonata.media.provider.dailymotion</argument>
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
          <argument>sonata.media.provider.vimeo</argument>
        </argument>
        <argument type="collection">
          <argument key="Sliders_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Sliders_medium" type="collection">
            <argument key="width">250</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Sliders_big" type="collection">
            <argument key="width">500</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>Spot</argument>
        <argument type="collection">
          <argument>sonata.media.provider.dailymotion</argument>
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
          <argument>sonata.media.provider.vimeo</argument>
        </argument>
        <argument type="collection">
          <argument key="Spot_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Spot_medium" type="collection">
            <argument key="width">250</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Spot_big" type="collection">
            <argument key="width">500</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>Zones</argument>
        <argument type="collection">
          <argument>sonata.media.provider.dailymotion</argument>
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
          <argument>sonata.media.provider.vimeo</argument>
        </argument>
        <argument type="collection">
          <argument key="Zones_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Zones_medium" type="collection">
            <argument key="width">250</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="Zones_big" type="collection">
            <argument key="width">500</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>default</argument>
        <argument type="collection">
          <argument>sonata.media.provider.dailymotion</argument>
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
          <argument>sonata.media.provider.vimeo</argument>
        </argument>
        <argument type="collection">
          <argument key="default_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="default_medium" type="collection">
            <argument key="width">250</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="default_big" type="collection">
            <argument key="width">500</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addDownloadStrategy">
        <argument>sonata.media.security.superadmin_strategy</argument>
        <argument type="service" id="sonata.media.security.superadmin_strategy"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.image</argument>
        <argument type="service" id="sonata.media.provider.image"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.file</argument>
        <argument type="service" id="sonata.media.provider.file"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.youtube</argument>
        <argument type="service" id="sonata.media.provider.youtube"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.dailymotion</argument>
        <argument type="service" id="sonata.media.provider.dailymotion"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.vimeo</argument>
        <argument type="service" id="sonata.media.provider.vimeo"/>
      </call>
    </service>
    <service id="sonata.media.thumbnail.format" class="Sonata\MediaBundle\Thumbnail\FormatThumbnail">
      <argument>jpg</argument>
    </service>
    <service id="sonata.media.provider.image" class="Sonata\MediaBundle\Provider\ImageProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.image</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>jpg</argument>
        <argument>png</argument>
        <argument>jpeg</argument>
      </argument>
      <argument type="collection">
        <argument>image/pjpeg</argument>
        <argument>image/jpeg</argument>
        <argument>image/png</argument>
        <argument>image/x-png</argument>
      </argument>
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_image.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pictogramme_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pictogramme_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pictogramme_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.square"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.file" class="Sonata\MediaBundle\Provider\FileProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.file</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>pdf</argument>
        <argument>txt</argument>
        <argument>rtf</argument>
        <argument>doc</argument>
        <argument>docx</argument>
        <argument>xls</argument>
        <argument>xlsx</argument>
        <argument>ppt</argument>
        <argument>pttx</argument>
        <argument>odt</argument>
        <argument>odg</argument>
        <argument>odp</argument>
        <argument>ods</argument>
        <argument>odc</argument>
        <argument>odf</argument>
        <argument>odb</argument>
        <argument>csv</argument>
        <argument>xml</argument>
        <argument>mp4</argument>
        <argument>webm</argument>
      </argument>
      <argument type="collection">
        <argument>application/pdf</argument>
        <argument>application/x-pdf</argument>
        <argument>application/rtf</argument>
        <argument>text/html</argument>
        <argument>text/rtf</argument>
        <argument>text/plain</argument>
        <argument>video/mp4</argument>
        <argument>video/webm</argument>
      </argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_file.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.youtube" class="Sonata\MediaBundle\Provider\YouTubeProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.youtube</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <argument>false</argument>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_youtube.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.dailymotion" class="Sonata\MediaBundle\Provider\DailyMotionProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.dailymotion</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_dailymotion.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.vimeo" class="Sonata\MediaBundle\Provider\VimeoProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.vimeo</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_vimeo.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Envies_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Espèce_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Pays_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Produits_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Sliders_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Spot_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>Zones_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_medium</argument>
        <argument type="collection">
          <argument key="width">250</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.file_get_contents" class="Buzz\Client\FileGetContents">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.curl" class="Buzz\Client\Curl">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.browser" class="Buzz\Browser">
      <argument type="service" id="sonata.media.buzz.connector.curl"/>
    </service>
    <service id="sonata.media.cdn.server" class="Sonata\MediaBundle\CDN\Server">
      <argument>/uploads/media</argument>
    </service>
    <service id="sonata.media.twig.extension" class="Sonata\MediaBundle\Twig\Extension\MediaExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.twig.global" class="Sonata\MediaBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.security.public_strategy" class="Sonata\MediaBundle\Security\PublicDownloadStrategy">
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.media.security.forbidden_strategy" class="Sonata\MediaBundle\Security\ForbiddenDownloadStrategy">
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.media.security.superadmin_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.manager"/>
          <argument type="service" id="security.access.decision_manager"/>
          <argument>false</argument>
        </service>
      </argument>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
        <argument>ROLE_ADMIN</argument>
      </argument>
    </service>
    <service id="sonata.media.security.session_strategy" class="Sonata\MediaBundle\Security\SessionDownloadStrategy">
      <argument type="service" id="translator"/>
      <argument type="service" id="session"/>
      <argument>1</argument>
    </service>
    <service id="sonata.media.security.connected_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.manager"/>
          <argument type="service" id="security.access.decision_manager"/>
          <argument>false</argument>
        </service>
      </argument>
      <argument type="collection">
        <argument>IS_AUTHENTICATED_FULLY</argument>
        <argument>IS_AUTHENTICATED_REMEMBERED</argument>
      </argument>
    </service>
    <service id="sonata.media.form.type.media" class="Sonata\MediaBundle\Form\Type\MediaType">
      <tag name="form.type" alias="sonata_media_type"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="sonata.media.adapter.filesystem.local" class="Sonata\MediaBundle\Filesystem\Local">
      <argument>C:\wamp\www\Aparchi\app/../web/uploads/media</argument>
      <argument>false</argument>
    </service>
    <service id="sonata.media.adapter.service.s3" class="Aws\S3\S3Client">
      <argument type="collection"/>
      <factory class="Aws\S3\S3Client" method="factory"/>
    </service>
    <service id="sonata.media.filesystem.local" class="Gaufrette\Filesystem">
      <argument type="service" id="sonata.media.adapter.filesystem.local"/>
    </service>
    <service id="sonata.media.metadata.proxy" class="Sonata\MediaBundle\Metadata\ProxyMetadataBuilder">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.metadata.amazon" class="Sonata\MediaBundle\Metadata\AmazonMetadataBuilder"/>
    <service id="sonata.media.metadata.noop" class="Sonata\MediaBundle\Metadata\NoopMetadataBuilder"/>
    <service id="sonata.media.validator.format" class="Sonata\MediaBundle\Validator\FormatValidator">
      <tag name="validator.constraint_validator" alias="sonata.media.validator.format"/>
      <argument type="service" id="sonata.media.pool"/>
    </service>
    <service id="sonata.media.serializer.handler.media" class="Sonata\MediaBundle\Serializer\MediaSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.serializer.handler.gallery" class="Sonata\MediaBundle\Serializer\GallerySerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="sonata.media.notification.create_thumbnail" class="Sonata\MediaBundle\Consumer\CreateThumbnailConsumer">
      <tag name="sonata.notification.consumer" type="sonata.media.create_thumbnail"/>
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.thumbnail.consumer.format" class="Sonata\MediaBundle\Thumbnail\ConsumerThumbnail">
      <argument>sonata.media.thumbnail.format</argument>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.notification.backend.runtime"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.media.formatter.twig" class="Sonata\MediaBundle\Twig\Extension\FormatterMediaExtension">
      <argument type="service" id="sonata.media.twig.extension"/>
    </service>
    <service id="sonata.media.block.media" class="Sonata\MediaBundle\Block\MediaBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.media</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.feature_media" class="Sonata\MediaBundle\Block\FeatureMediaBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.feature_media</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.gallery" class="Sonata\MediaBundle\Block\GalleryBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.gallery</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="sonata.media.block.gallery_list" class="Sonata\MediaBundle\Block\GalleryListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.gallery_list</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
      <argument type="service" id="sonata.media.pool"/>
    </service>
    <service id="sonata.media.block.breadcrumb_view" class="Sonata\MediaBundle\Block\Breadcrumb\GalleryViewBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>gallery_view</argument>
      <argument>sonata.media.block.breadcrumb_view</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.media.block.breadcrumb_index" class="Sonata\MediaBundle\Block\Breadcrumb\GalleryIndexBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>gallery_index</argument>
      <argument>sonata.media.block.breadcrumb_view</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.media.block.breadcrumb_view_media" class="Sonata\MediaBundle\Block\Breadcrumb\MediaViewBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>media_view</argument>
      <argument>sonata.media.block.breadcrumb_view_media</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.media.manager.media" class="Sonata\MediaBundle\Entity\MediaManager">
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.manager.gallery" class="Sonata\MediaBundle\Entity\GalleryManager">
      <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.generator.default" class="Sonata\MediaBundle\Generator\DefaultGenerator"/>
    <service id="sonata.media.doctrine.event_subscriber" class="Sonata\MediaBundle\Listener\ORM\MediaEventSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.admin.media" class="Sonata\MediaBundle\Admin\ORM\MediaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.media.admin.groupname%" label_catalogue="%sonata.media.admin.media.translation_domain%" label="media" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <argument>SonataMediaBundle:MediaAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <argument>null</argument>
      <call method="setModelManager">
        <argument type="service" id="sonata.media.admin.media.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>media</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataMediaBundle:MediaAdmin:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataMediaBundle:MediaAdmin:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataMediaBundle:MediaAdmin:inner_row_media.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataMediaBundle:MediaAdmin:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_flat_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.ckeditor.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.media.admin.media.manager" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.admin.gallery" class="Sonata\MediaBundle\Admin\GalleryAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.media.admin.groupname%" label="gallery" label_catalogue="%sonata.media.admin.gallery.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.gallery</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
      <argument>SonataMediaBundle:GalleryAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>gallery</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataMediaBundle:GalleryAdmin:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.media.admin.gallery_has_media" class="Sonata\MediaBundle\Admin\GalleryHasMediaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="%sonata.media.admin.groupname%" label_catalogue="%sonata.media.admin.gallery_has_media.translation_domain%" label="gallery_has_media" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.gallery_has_media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>gallery_has_media</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">ApplicationSonataAdminBundle::layout.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.media.adapter.image.gd" class="Imagine\Gd\Imagine"/>
    <service id="sonata.media.adapter.image.imagick" class="Imagine\Imagick\Imagine"/>
    <service id="sonata.media.adapter.image.gmagick" class="Imagine\Gmagick\Imagine"/>
    <service id="sonata.media.resizer.simple" class="Sonata\MediaBundle\Resizer\SimpleResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="sonata.media.resizer.square" class="Sonata\MediaBundle\Resizer\SquareResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber">
      <tag name="jms_serializer.event_subscriber"/>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="1" type="collection">
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToyml</argument>
            </argument>
          </argument>
        </argument>
        <argument key="2" type="collection">
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromyml</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sO</argument>
      <argument>UTC</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.php_collection_handler" class="JMS\Serializer\Handler\PhpCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.form_error_handler" class="JMS\Serializer\Handler\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\JsonSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\JsonDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\XmlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\XmlDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <call method="setDoctypeWhitelist">
        <argument type="collection"/>
      </call>
    </service>
    <service id="jms_serializer.yaml_serialization_visitor" class="JMS\Serializer\YamlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="yml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="assetic.filter_manager" class="Symfony\Bundle\AsseticBundle\FilterManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="scssphp">assetic.filter.scssphp</argument>
        <argument key="cssrewrite">assetic.filter.cssrewrite</argument>
      </argument>
    </service>
    <service id="assetic.asset_manager" class="Assetic\Factory\LazyAssetManager">
      <argument type="service" id="assetic.asset_factory"/>
      <argument type="collection">
        <argument key="config" type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader" public="false">
            <tag name="assetic.formula_loader" alias="config"/>
          </service>
        </argument>
        <argument key="twig" type="service">
          <service class="Assetic\Factory\Loader\CachedFormulaLoader" public="false">
            <tag name="assetic.formula_loader" alias="twig"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service">
              <service class="Assetic\Extension\Twig\TwigFormulaLoader" public="false">
                <tag name="assetic.templating.twig"/>
                <tag name="monolog.logger" channel="assetic"/>
                <argument type="service" id="twig"/>
                <argument type="service" id="monolog.logger.assetic" on-invalid="ignore"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Assetic\Cache\ConfigCache" public="false">
                <argument>C:/wamp/www/Aparchi/app/cache/dev/assetic/config</argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </argument>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource" public="false">
            <tag name="assetic.formula_resource" loader="config"/>
            <argument type="collection">
              <argument key="bootstrap_css" type="collection">
                <argument type="collection">
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/less/bootstrap.less</argument>
                </argument>
                <argument type="collection">
                  <argument>cssrewrite</argument>
                </argument>
                <argument type="collection">
                  <argument key="output">css/bootstrap.css</argument>
                </argument>
              </argument>
              <argument key="bootstrap_js" type="collection">
                <argument type="collection">
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/affix.js</argument>
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/alert.js</argument>
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/button.js</argument>
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/carousel.js</argument>
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/collapse.js</argument>
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/dropdown.js</argument>
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/modal.js</argument>
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/tooltip.js</argument>
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/popover.js</argument>
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/scrollspy.js</argument>
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/tab.js</argument>
                  <argument>C:\wamp\www\Aparchi\app/../vendor/twbs/bootstrap/js/transition.js</argument>
                </argument>
                <argument type="collection"/>
                <argument type="collection">
                  <argument key="output">js/bootstrap.js</argument>
                </argument>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>config</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="service" id="templating.loader"/>
            <argument></argument>
            <argument>C:\wamp\www\Aparchi\app/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
    </service>
    <service id="assetic.asset_factory" class="Symfony\Bundle\AsseticBundle\Factory\AssetFactory" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\DependencyInjection\ParameterBag\ParameterBag" public="false">
          <factory service="service_container" method="getParameterBag"/>
        </service>
      </argument>
      <argument>C:\wamp\www\Aparchi\app/../web</argument>
      <argument>true</argument>
    </service>
    <service id="assetic.filter.scssphp" class="Assetic\Filter\ScssphpFilter">
      <tag name="assetic.filter" alias="scssphp"/>
      <call method="enableCompass">
        <argument>false</argument>
      </call>
      <call method="setImportPaths">
        <argument type="collection"/>
      </call>
      <call method="setVariables">
        <argument type="collection"/>
      </call>
      <call method="setFormatter">
        <argument>Leafo\ScssPhp\Formatter\Compressed</argument>
      </call>
    </service>
    <service id="assetic.filter.cssrewrite" class="Assetic\Filter\CssRewriteFilter">
      <tag name="assetic.filter" alias="cssrewrite"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.cli_dumper"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
    </service>
    <service id="var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController">
      <argument type="service" id="cmf_routing.router" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="data_collector.request" type="collection">
          <argument>request</argument>
          <argument>@WebProfiler/Collector/request.html.twig</argument>
        </argument>
        <argument key="data_collector.time" type="collection">
          <argument>time</argument>
          <argument>@WebProfiler/Collector/time.html.twig</argument>
        </argument>
        <argument key="data_collector.memory" type="collection">
          <argument>memory</argument>
          <argument>@WebProfiler/Collector/memory.html.twig</argument>
        </argument>
        <argument key="data_collector.ajax" type="collection">
          <argument>ajax</argument>
          <argument>@WebProfiler/Collector/ajax.html.twig</argument>
        </argument>
        <argument key="data_collector.form" type="collection">
          <argument>form</argument>
          <argument>@WebProfiler/Collector/form.html.twig</argument>
        </argument>
        <argument key="data_collector.exception" type="collection">
          <argument>exception</argument>
          <argument>@WebProfiler/Collector/exception.html.twig</argument>
        </argument>
        <argument key="data_collector.logger" type="collection">
          <argument>logger</argument>
          <argument>@WebProfiler/Collector/logger.html.twig</argument>
        </argument>
        <argument key="data_collector.events" type="collection">
          <argument>events</argument>
          <argument>@WebProfiler/Collector/events.html.twig</argument>
        </argument>
        <argument key="data_collector.router" type="collection">
          <argument>router</argument>
          <argument>@WebProfiler/Collector/router.html.twig</argument>
        </argument>
        <argument key="data_collector.translation" type="collection">
          <argument>translation</argument>
          <argument>@WebProfiler/Collector/translation.html.twig</argument>
        </argument>
        <argument key="data_collector.security" type="collection">
          <argument>security</argument>
          <argument>@Security/Collector/security.html.twig</argument>
        </argument>
        <argument key="data_collector.twig" type="collection">
          <argument>twig</argument>
          <argument>@WebProfiler/Collector/twig.html.twig</argument>
        </argument>
        <argument key="data_collector.doctrine" type="collection">
          <argument>db</argument>
          <argument>@Doctrine/Collector/db.html.twig</argument>
        </argument>
        <argument key="swiftmailer.data_collector" type="collection">
          <argument>swiftmailer</argument>
          <argument>@Swiftmailer/Collector/swiftmailer.html.twig</argument>
        </argument>
        <argument key="data_collector.dump" type="collection">
          <argument>dump</argument>
          <argument>@Debug/Profiler/dump.html.twig</argument>
        </argument>
        <argument key="sonata.block.data_collector" type="collection">
          <argument>block</argument>
          <argument>SonataBlockBundle:Profiler:block.html.twig</argument>
        </argument>
        <argument key="data_collector.config" type="collection">
          <argument>config</argument>
          <argument>@WebProfiler/Collector/config.html.twig</argument>
        </argument>
      </argument>
      <argument>bottom</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="cmf_routing.router" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument>bottom</argument>
      <argument type="service" id="cmf_routing.router" on-invalid="ignore"/>
      <argument>^/(app(_[\w]+)?\.php/)?_wdt</argument>
    </service>
    <service id="sensio_distribution.webconfigurator" class="Sensio\Bundle\DistributionBundle\Configurator\Configurator">
      <argument>C:\wamp\www\Aparchi\app</argument>
      <call method="addStep">
        <argument type="service">
          <service class="Sensio\Bundle\DistributionBundle\Configurator\Step\DoctrineStep" public="false">
            <tag name="webconfigurator.step" priority="10"/>
          </service>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addStep">
        <argument type="service">
          <service class="Sensio\Bundle\DistributionBundle\Configurator\Step\SecretStep" public="false">
            <tag name="webconfigurator.step"/>
          </service>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="sensio_distribution.security_checker" class="SensioLabs\Security\SecurityChecker"/>
    <service id="sensio_distribution.security_checker.command" class="SensioLabs\Security\Command\SecurityCheckerCommand">
      <tag name="console.command"/>
      <argument type="service" id="sensio_distribution.security_checker"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.assetic" class="Symfony\Bridge\Monolog\Logger">
      <argument>assetic</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.handler.debug" class="Symfony\Bridge\Monolog\Handler\DebugHandler">
      <argument>100</argument>
      <argument>true</argument>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="form.extension" class="Sonata\CoreBundle\Form\Extension\DependencyInjectionExtension">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="form">form.type.form</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType">form.type.form</argument>
        <argument key="birthday">form.type.birthday</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\BirthdayType">form.type.birthday</argument>
        <argument key="checkbox">form.type.checkbox</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CheckboxType">form.type.checkbox</argument>
        <argument key="choice">form.type.choice</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType">form.type.choice</argument>
        <argument key="collection">form.type.collection</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CollectionType">form.type.collection</argument>
        <argument key="country">form.type.country</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CountryType">form.type.country</argument>
        <argument key="date">form.type.date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateType">form.type.date</argument>
        <argument key="datetime">form.type.datetime</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateTimeType">form.type.datetime</argument>
        <argument key="email">form.type.email</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\EmailType">form.type.email</argument>
        <argument key="file">form.type.file</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType">form.type.file</argument>
        <argument key="hidden">form.type.hidden</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\HiddenType">form.type.hidden</argument>
        <argument key="integer">form.type.integer</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\IntegerType">form.type.integer</argument>
        <argument key="language">form.type.language</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\LanguageType">form.type.language</argument>
        <argument key="locale">form.type.locale</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\LocaleType">form.type.locale</argument>
        <argument key="money">form.type.money</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\MoneyType">form.type.money</argument>
        <argument key="number">form.type.number</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\NumberType">form.type.number</argument>
        <argument key="password">form.type.password</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\PasswordType">form.type.password</argument>
        <argument key="percent">form.type.percent</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\PercentType">form.type.percent</argument>
        <argument key="radio">form.type.radio</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RadioType">form.type.radio</argument>
        <argument key="range">form.type.range</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RangeType">form.type.range</argument>
        <argument key="repeated">form.type.repeated</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType">form.type.repeated</argument>
        <argument key="search">form.type.search</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SearchType">form.type.search</argument>
        <argument key="textarea">form.type.textarea</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextareaType">form.type.textarea</argument>
        <argument key="text">form.type.text</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextType">form.type.text</argument>
        <argument key="time">form.type.time</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TimeType">form.type.time</argument>
        <argument key="timezone">form.type.timezone</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TimezoneType">form.type.timezone</argument>
        <argument key="url">form.type.url</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\UrlType">form.type.url</argument>
        <argument key="button">form.type.button</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ButtonType">form.type.button</argument>
        <argument key="submit">form.type.submit</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType">form.type.submit</argument>
        <argument key="reset">form.type.reset</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ResetType">form.type.reset</argument>
        <argument key="currency">form.type.currency</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CurrencyType">form.type.currency</argument>
        <argument key="entity">form.type.entity</argument>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType">form.type.entity</argument>
        <argument key="sonata_type_immutable_array">sonata.core.form.type.array</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ImmutableArrayType">sonata.core.form.type.array</argument>
        <argument key="sonata_type_boolean">sonata.core.form.type.boolean</argument>
        <argument key="Sonata\CoreBundle\Form\Type\BooleanType">sonata.core.form.type.boolean</argument>
        <argument key="sonata_type_collection">sonata.core.form.type.collection</argument>
        <argument key="Sonata\CoreBundle\Form\Type\CollectionType">sonata.core.form.type.collection</argument>
        <argument key="sonata_type_translatable_choice">sonata.core.form.type.translatable_choice</argument>
        <argument key="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">sonata.core.form.type.translatable_choice</argument>
        <argument key="sonata_type_date_range">sonata.core.form.type.date_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangeType">sonata.core.form.type.date_range</argument>
        <argument key="sonata_type_datetime_range">sonata.core.form.type.datetime_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangeType">sonata.core.form.type.datetime_range</argument>
        <argument key="sonata_type_date_picker">sonata.core.form.type.date_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DatePickerType">sonata.core.form.type.date_picker</argument>
        <argument key="sonata_type_datetime_picker">sonata.core.form.type.datetime_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimePickerType">sonata.core.form.type.datetime_picker</argument>
        <argument key="sonata_type_date_range_picker">sonata.core.form.type.date_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangePickerType">sonata.core.form.type.date_range_picker</argument>
        <argument key="sonata_type_datetime_range_picker">sonata.core.form.type.datetime_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">sonata.core.form.type.datetime_range_picker</argument>
        <argument key="sonata_type_equal">sonata.core.form.type.equal</argument>
        <argument key="Sonata\CoreBundle\Form\Type\EqualType">sonata.core.form.type.equal</argument>
        <argument key="sonata_type_color_selector">sonata.core.form.type.color_selector</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ColorSelectorType">sonata.core.form.type.color_selector</argument>
        <argument key="sonata_type_color">sonata.core.form.type.color</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ColorType">sonata.core.form.type.color</argument>
        <argument key="sonata_block_service_choice">sonata.block.form.type.block</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType">sonata.block.form.type.block</argument>
        <argument key="sonata_type_container_template_choice">sonata.block.form.type.container_template</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType">sonata.block.form.type.container_template</argument>
        <argument key="sonata_type_admin">sonata.admin.form.type.admin</argument>
        <argument key="Sonata\AdminBundle\Form\Type\AdminType">sonata.admin.form.type.admin</argument>
        <argument key="sonata_type_model">sonata.admin.form.type.model_choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType">sonata.admin.form.type.model_choice</argument>
        <argument key="sonata_type_model_list">sonata.admin.form.type.model_list</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelListType">sonata.admin.form.type.model_list</argument>
        <argument key="sonata_type_model_reference">sonata.admin.form.type.model_reference</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType">sonata.admin.form.type.model_reference</argument>
        <argument key="sonata_type_model_hidden">sonata.admin.form.type.model_hidden</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType">sonata.admin.form.type.model_hidden</argument>
        <argument key="sonata_type_model_autocomplete">sonata.admin.form.type.model_autocomplete</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">sonata.admin.form.type.model_autocomplete</argument>
        <argument key="sonata_type_native_collection">sonata.admin.form.type.collection</argument>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType">sonata.admin.form.type.collection</argument>
        <argument key="sonata_type_choice_field_mask">sonata.admin.doctrine_orm.form.type.choice_field_mask</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType">sonata.admin.doctrine_orm.form.type.choice_field_mask</argument>
        <argument key="sonata_type_filter_number">sonata.admin.form.filter.type.number</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType">sonata.admin.form.filter.type.number</argument>
        <argument key="sonata_type_filter_choice">sonata.admin.form.filter.type.choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">sonata.admin.form.filter.type.choice</argument>
        <argument key="sonata_type_filter_default">sonata.admin.form.filter.type.default</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType">sonata.admin.form.filter.type.default</argument>
        <argument key="sonata_type_filter_date">sonata.admin.form.filter.type.date</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType">sonata.admin.form.filter.type.date</argument>
        <argument key="sonata_type_filter_date_range">sonata.admin.form.filter.type.daterange</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">sonata.admin.form.filter.type.daterange</argument>
        <argument key="sonata_type_filter_datetime">sonata.admin.form.filter.type.datetime</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">sonata.admin.form.filter.type.datetime</argument>
        <argument key="sonata_type_filter_datetime_range">sonata.admin.form.filter.type.datetime_range</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">sonata.admin.form.filter.type.datetime_range</argument>
        <argument key="sonata_page_selector">sonata.page.form.type.page_selector</argument>
        <argument key="Sonata\PageBundle\Form\Type\PageSelectorType">sonata.page.form.type.page_selector</argument>
        <argument key="sonata_page_create_snapshot">sonata.page.form.create_snapshot</argument>
        <argument key="Sonata\PageBundle\Form\Type\CreateSnapshotType">sonata.page.form.create_snapshot</argument>
        <argument key="sonata_page_template">sonata.page.form.template_choice</argument>
        <argument key="Sonata\PageBundle\Form\Type\TemplateChoiceType">sonata.page.form.template_choice</argument>
        <argument key="sonata_page_type_choice">sonata.page.form.page_type_choice</argument>
        <argument key="Sonata\PageBundle\Form\Type\PageTypeChoiceType">sonata.page.form.page_type_choice</argument>
        <argument key="cmf_routing_route_type">cmf_routing.route_type_form_type</argument>
        <argument key="Symfony\Cmf\Bundle\RoutingBundle\Form\Type\RouteTypeType">cmf_routing.route_type_form_type</argument>
        <argument key="ckeditor">ivory_ck_editor.form.type</argument>
        <argument key="Ivory\CKEditorBundle\Form\Type\CKEditorType">ivory_ck_editor.form.type</argument>
        <argument key="sonata_formatter_type">sonata.formatter.form.type.selector</argument>
        <argument key="Sonata\FormatterBundle\Form\Type\FormatterType">sonata.formatter.form.type.selector</argument>
        <argument key="sonata_simple_formatter_type">sonata.formatter.form.type.simple</argument>
        <argument key="Sonata\FormatterBundle\Form\Type\SimpleFormatterType">sonata.formatter.form.type.simple</argument>
        <argument key="fos_user_username">fos_user.username_form_type</argument>
        <argument key="FOS\UserBundle\Form\Type\UsernameFormType">fos_user.username_form_type</argument>
        <argument key="fos_user_profile">fos_user.profile.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ProfileFormType">fos_user.profile.form.type</argument>
        <argument key="fos_user_registration">fos_user.registration.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\RegistrationFormType">fos_user.registration.form.type</argument>
        <argument key="fos_user_change_password">fos_user.change_password.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType">fos_user.change_password.form.type</argument>
        <argument key="fos_user_resetting">fos_user.resetting.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ResettingFormType">fos_user.resetting.form.type</argument>
        <argument key="fos_user_group">fos_user.group.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\GroupFormType">fos_user.group.form.type</argument>
        <argument key="sonata_security_roles">sonata.user.form.type.security_roles</argument>
        <argument key="Sonata\UserBundle\Form\Type\SecurityRolesType">sonata.user.form.type.security_roles</argument>
        <argument key="sonata_user_profile">sonata.user.profile.form.type</argument>
        <argument key="Sonata\UserBundle\Form\Type\ProfileType">sonata.user.profile.form.type</argument>
        <argument key="sonata_user_gender">sonata.user.form.gender_list</argument>
        <argument key="Sonata\UserBundle\Form\Type\UserGenderListType">sonata.user.form.gender_list</argument>
        <argument key="sonata_user_registration">sonata.user.registration.form.type</argument>
        <argument key="Sonata\UserBundle\Form\Type\RegistrationFormType">sonata.user.registration.form.type</argument>
        <argument key="sonata_media_type">sonata.media.form.type.media</argument>
        <argument key="Sonata\MediaBundle\Form\Type\MediaType">sonata.media.form.type.media</argument>
      </argument>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.upload.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>sonata.admin.form.extension.field</argument>
          <argument>sonata.admin.form.extension.field.mopa</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument>form.type_guesser.validator</argument>
        <argument>form.type_guesser.doctrine</argument>
      </argument>
      <argument type="collection">
        <argument key="form">Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument key="birthday">Symfony\Component\Form\Extension\Core\Type\BirthdayType</argument>
        <argument key="checkbox">Symfony\Component\Form\Extension\Core\Type\CheckboxType</argument>
        <argument key="choice">Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument key="collection">Symfony\Component\Form\Extension\Core\Type\CollectionType</argument>
        <argument key="country">Symfony\Component\Form\Extension\Core\Type\CountryType</argument>
        <argument key="date">Symfony\Component\Form\Extension\Core\Type\DateType</argument>
        <argument key="datetime">Symfony\Component\Form\Extension\Core\Type\DateTimeType</argument>
        <argument key="email">Symfony\Component\Form\Extension\Core\Type\EmailType</argument>
        <argument key="file">Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument key="hidden">Symfony\Component\Form\Extension\Core\Type\HiddenType</argument>
        <argument key="integer">Symfony\Component\Form\Extension\Core\Type\IntegerType</argument>
        <argument key="language">Symfony\Component\Form\Extension\Core\Type\LanguageType</argument>
        <argument key="locale">Symfony\Component\Form\Extension\Core\Type\LocaleType</argument>
        <argument key="money">Symfony\Component\Form\Extension\Core\Type\MoneyType</argument>
        <argument key="number">Symfony\Component\Form\Extension\Core\Type\NumberType</argument>
        <argument key="password">Symfony\Component\Form\Extension\Core\Type\PasswordType</argument>
        <argument key="percent">Symfony\Component\Form\Extension\Core\Type\PercentType</argument>
        <argument key="radio">Symfony\Component\Form\Extension\Core\Type\RadioType</argument>
        <argument key="repeated">Symfony\Component\Form\Extension\Core\Type\RepeatedType</argument>
        <argument key="search">Symfony\Component\Form\Extension\Core\Type\SearchType</argument>
        <argument key="textarea">Symfony\Component\Form\Extension\Core\Type\TextareaType</argument>
        <argument key="text">Symfony\Component\Form\Extension\Core\Type\TextType</argument>
        <argument key="time">Symfony\Component\Form\Extension\Core\Type\TimeType</argument>
        <argument key="timezone">Symfony\Component\Form\Extension\Core\Type\TimezoneType</argument>
        <argument key="url">Symfony\Component\Form\Extension\Core\Type\UrlType</argument>
        <argument key="button">Symfony\Component\Form\Extension\Core\Type\ButtonType</argument>
        <argument key="submit">Symfony\Component\Form\Extension\Core\Type\SubmitType</argument>
        <argument key="reset">Symfony\Component\Form\Extension\Core\Type\ResetType</argument>
        <argument key="currency">Symfony\Component\Form\Extension\Core\Type\CurrencyType</argument>
        <argument key="entity">Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument key="sonata_type_immutable_array">Sonata\CoreBundle\Form\Type\ImmutableArrayType</argument>
        <argument key="sonata_type_boolean">Sonata\CoreBundle\Form\Type\BooleanType</argument>
        <argument key="sonata_type_collection">Sonata\CoreBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_translatable_choice">Sonata\CoreBundle\Form\Type\TranslatableChoiceType</argument>
        <argument key="sonata_type_date_range">Sonata\CoreBundle\Form\Type\DateRangeType</argument>
        <argument key="sonata_type_datetime_range">Sonata\CoreBundle\Form\Type\DateTimeRangeType</argument>
        <argument key="sonata_type_date_picker">Sonata\CoreBundle\Form\Type\DatePickerType</argument>
        <argument key="sonata_type_datetime_picker">Sonata\CoreBundle\Form\Type\DateTimePickerType</argument>
        <argument key="sonata_type_date_range_picker">Sonata\CoreBundle\Form\Type\DateRangePickerType</argument>
        <argument key="sonata_type_datetime_range_picker">Sonata\CoreBundle\Form\Type\DateTimeRangePickerType</argument>
        <argument key="sonata_type_equal">Sonata\CoreBundle\Form\Type\EqualType</argument>
        <argument key="sonata_type_color_selector">Sonata\CoreBundle\Form\Type\ColorSelectorType</argument>
        <argument key="sonata_block_service_choice">Sonata\BlockBundle\Form\Type\ServiceListType</argument>
        <argument key="sonata_type_container_template_choice">Sonata\BlockBundle\Form\Type\ContainerTemplateType</argument>
        <argument key="sonata_type_admin">Sonata\AdminBundle\Form\Type\AdminType</argument>
        <argument key="sonata_type_model">Sonata\AdminBundle\Form\Type\ModelType</argument>
        <argument key="sonata_type_model_list">Sonata\AdminBundle\Form\Type\ModelListType</argument>
        <argument key="sonata_type_model_reference">Sonata\AdminBundle\Form\Type\ModelReferenceType</argument>
        <argument key="sonata_type_model_hidden">Sonata\AdminBundle\Form\Type\ModelHiddenType</argument>
        <argument key="sonata_type_model_autocomplete">Sonata\AdminBundle\Form\Type\ModelAutocompleteType</argument>
        <argument key="sonata_type_native_collection">Sonata\AdminBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_choice_field_mask">Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType</argument>
        <argument key="sonata_type_filter_number">Sonata\AdminBundle\Form\Type\Filter\NumberType</argument>
        <argument key="sonata_type_filter_choice">Sonata\AdminBundle\Form\Type\Filter\ChoiceType</argument>
        <argument key="sonata_type_filter_default">Sonata\AdminBundle\Form\Type\Filter\DefaultType</argument>
        <argument key="sonata_type_filter_date">Sonata\AdminBundle\Form\Type\Filter\DateType</argument>
        <argument key="sonata_type_filter_date_range">Sonata\AdminBundle\Form\Type\Filter\DateRangeType</argument>
        <argument key="sonata_type_filter_datetime">Sonata\AdminBundle\Form\Type\Filter\DateTimeType</argument>
        <argument key="sonata_type_filter_datetime_range">Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType</argument>
        <argument key="tab">Mopa\Bundle\BootstrapBundle\Form\Type\TabType</argument>
        <argument key="sonata_notification_api_form_message">Sonata\NotificationBundle\Form\Type\MessageSerializationType</argument>
        <argument key="sonata_page_api_form_site">Sonata\PageBundle\Form\Type\ApiSiteType</argument>
        <argument key="sonata_page_api_form_page">Sonata\PageBundle\Form\Type\ApiPageType</argument>
        <argument key="sonata_page_api_form_block">Sonata\PageBundle\Form\Type\ApiBlockType</argument>
        <argument key="sonata_page_selector">Sonata\PageBundle\Form\Type\PageSelectorType</argument>
        <argument key="sonata_page_create_snapshot">Sonata\PageBundle\Form\Type\CreateSnapshotType</argument>
        <argument key="sonata_page_template">Sonata\PageBundle\Form\Type\TemplateChoiceType</argument>
        <argument key="sonata_page_type_choice">Sonata\PageBundle\Form\Type\PageTypeChoiceType</argument>
        <argument key="cmf_routing_route_type">Symfony\Cmf\Bundle\RoutingBundle\Form\Type\RouteTypeType</argument>
        <argument key="ckeditor">Ivory\CKEditorBundle\Form\Type\CKEditorType</argument>
        <argument key="sonata_formatter_type">Sonata\FormatterBundle\Form\Type\FormatterType</argument>
        <argument key="sonata_simple_formatter_type">Sonata\FormatterBundle\Form\Type\SimpleFormatterType</argument>
        <argument key="fos_user_username">FOS\UserBundle\Form\Type\UsernameFormType</argument>
        <argument key="fos_user_profile">FOS\UserBundle\Form\Type\ProfileFormType</argument>
        <argument key="fos_user_registration">FOS\UserBundle\Form\Type\RegistrationFormType</argument>
        <argument key="fos_user_change_password">FOS\UserBundle\Form\Type\ChangePasswordFormType</argument>
        <argument key="fos_user_resetting">FOS\UserBundle\Form\Type\ResettingFormType</argument>
        <argument key="fos_user_group">FOS\UserBundle\Form\Type\GroupFormType</argument>
        <argument key="sonata_security_roles">Sonata\UserBundle\Form\Type\SecurityRolesType</argument>
        <argument key="sonata_user_profile">Sonata\UserBundle\Form\Type\ProfileType</argument>
        <argument key="sonata_user_gender">Sonata\UserBundle\Form\Type\UserGenderListType</argument>
        <argument key="sonata_user_registration">Sonata\UserBundle\Form\Type\RegistrationFormType</argument>
        <argument key="sonata_user_api_form_group">Sonata\UserBundle\Form\Type\ApiGroupType</argument>
        <argument key="sonata_user_api_form_user">Sonata\UserBundle\Form\Type\ApiUserType</argument>
        <argument key="sonata_media_type">Sonata\MediaBundle\Form\Type\MediaType</argument>
        <argument key="sonata_media_api_form_media">Sonata\MediaBundle\Form\Type\ApiMediaType</argument>
        <argument key="sonata_media_api_form_doctrine_media">Sonata\MediaBundle\Form\Type\ApiDoctrineMediaType</argument>
        <argument key="sonata_media_api_form_gallery">Sonata\MediaBundle\Form\Type\ApiGalleryType</argument>
        <argument key="sonata_media_api_form_gallery_has_media">Sonata\MediaBundle\Form\Type\ApiGalleryHasMediaType</argument>
      </argument>
      <argument type="collection">
        <argument key="form" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>sonata.admin.form.extension.field</argument>
          <argument>mopa_bootstrap.form.type_extension.help</argument>
          <argument>mopa_bootstrap.form.type_extension.legend</argument>
          <argument>mopa_bootstrap.form.type_extension.error</argument>
          <argument>mopa_bootstrap.form.type_extension.widget</argument>
          <argument>mopa_bootstrap.form.type_extension.horizontal</argument>
          <argument>mopa_bootstrap.form.type_extension.widget_collection</argument>
          <argument>mopa_bootstrap.form.type_extension.tabbed</argument>
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>sonata.admin.form.extension.field</argument>
          <argument>mopa_bootstrap.form.type_extension.help</argument>
          <argument>mopa_bootstrap.form.type_extension.legend</argument>
          <argument>mopa_bootstrap.form.type_extension.error</argument>
          <argument>mopa_bootstrap.form.type_extension.widget</argument>
          <argument>mopa_bootstrap.form.type_extension.horizontal</argument>
          <argument>mopa_bootstrap.form.type_extension.widget_collection</argument>
          <argument>mopa_bootstrap.form.type_extension.tabbed</argument>
        </argument>
        <argument key="repeated" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="submit" type="collection">
          <argument>form.type_extension.submit.validator</argument>
          <argument>form.type_extension.submit.validator</argument>
        </argument>
        <argument key="choice" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
        <argument key="button" type="collection">
          <argument>mopa_bootstrap.form.type_extension.button</argument>
          <argument>mopa_bootstrap.form.type_extension.button</argument>
        </argument>
        <argument key="date" type="collection">
          <argument>mopa_bootstrap.form.type_extension.date</argument>
          <argument>mopa_bootstrap.form.type_extension.date</argument>
        </argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="session.storage.filesystem" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>C:/wamp/www/Aparchi/app/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="templating.loader" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating" class="Symfony\Bundle\TwigBundle\TwigEngine">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="translator" class="Symfony\Component\Translation\DataCollectorTranslator">
      <argument type="service">
        <service class="Symfony\Component\Translation\LoggingTranslator" public="false">
          <tag name="monolog.logger" channel="translation"/>
          <argument type="service" id="translator.default"/>
          <argument type="service" id="monolog.logger.translation"/>
        </service>
      </argument>
    </service>
    <service id="annotation_reader" class="Doctrine\Common\Annotations\CachedReader">
      <argument type="service">
        <service class="Doctrine\Common\Annotations\AnnotationReader" public="false"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\Common\Cache\FilesystemCache" public="false">
          <argument>C:/wamp/www/Aparchi/app/cache/dev/annotations</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="security.encoder_factory" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="FOS\UserBundle\Model\UserInterface" type="collection">
          <argument key="class">%security.encoder.digest.class%</argument>
          <argument key="arguments" type="collection">
            <argument>sha512</argument>
            <argument>true</argument>
            <argument>5000</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.password_encoder" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder">
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.user_checker.admin" class="Symfony\Component\Security\Core\User\UserChecker"/>
    <service id="security.acl.provider" class="Symfony\Component\Security\Acl\Dbal\MutableAclProvider">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Acl\Domain\PermissionGrantingStrategy" public="false"/>
      </argument>
      <argument type="collection">
        <argument key="class_table_name">acl_classes</argument>
        <argument key="entry_table_name">acl_entries</argument>
        <argument key="oid_table_name">acl_object_identities</argument>
        <argument key="oid_ancestors_table_name">acl_object_identity_ancestors</argument>
        <argument key="sid_table_name">acl_security_identities</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
      <autowiring-type>Psr\Log\LoggerInterface</autowiring-type>
    </service>
    <service id="swiftmailer.mailer.default.transport" class="Swift_Transport_SpoolTransport">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.spool" class="Swift_MemorySpool"/>
    <service id="swiftmailer.mailer.default.transport.real" class="Swift_Transport_EsmtpTransport">
      <argument type="service">
        <service class="Swift_Transport_StreamBuffer" public="false">
          <argument type="service">
            <service class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
          </argument>
        </service>
      </argument>
      <argument type="collection">
        <argument type="service">
          <service class="Swift_Transport_Esmtp_AuthHandler" public="false">
            <argument type="collection">
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
              </argument>
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
              </argument>
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
              </argument>
            </argument>
            <call method="setUsername">
              <argument>null</argument>
            </call>
            <call method="setPassword">
              <argument>null</argument>
            </call>
            <call method="setAuthMode">
              <argument>null</argument>
            </call>
          </service>
        </argument>
      </argument>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <call method="setHost">
        <argument>127.0.0.1</argument>
      </call>
      <call method="setPort">
        <argument>25</argument>
      </call>
      <call method="setEncryption">
        <argument>null</argument>
      </call>
      <call method="setTimeout">
        <argument>30</argument>
      </call>
      <call method="setSourceIp">
        <argument>null</argument>
      </call>
      <configurator method="configure">
        <service class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false">
          <argument>null</argument>
          <argument type="service" id="router.request_context" on-invalid="null"/>
        </service>
      </configurator>
    </service>
    <service id="sonata.admin.security.handler" class="Sonata\AdminBundle\Security\Handler\NoopSecurityHandler"/>
    <service id="markdown.parser" class="Knp\Bundle\MarkdownBundle\Parser\Preset\Max">
      <tag name="markdown.parser" alias="max"/>
    </service>
    <service id="fos_user.mailer" class="FOS\UserBundle\Mailer\Mailer">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="templating"/>
      <argument type="collection">
        <argument key="confirmation.template">FOSUserBundle:Registration:email.txt.twig</argument>
        <argument key="resetting.template">FOSUserBundle:Resetting:email.txt.twig</argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="webmaster@example.com">webmaster</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="webmaster@example.com">webmaster</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.util.email_canonicalizer" class="FOS\UserBundle\Util\Canonicalizer"/>
    <service id="fos_user.util.token_generator" class="FOS\UserBundle\Util\TokenGenerator">
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="fos_user.user_manager" class="Sonata\UserBundle\Entity\UserManager">
      <argument type="service" id="security.encoder_factory"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service" id="fos_user.entity_manager"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.profile.form.handler" class="FOS\UserBundle\Form\Handler\ProfileFormHandler" scope="request">
      <argument type="service" id="fos_user.profile.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.registration.form.handler" class="FOS\UserBundle\Form\Handler\RegistrationFormHandler" scope="request">
      <argument type="service" id="fos_user.registration.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
      <argument type="service" id="fos_user.mailer"/>
      <argument type="service" id="fos_user.util.token_generator"/>
    </service>
    <service id="fos_user.resetting.form.handler" class="FOS\UserBundle\Form\Handler\ResettingFormHandler" scope="request">
      <argument type="service" id="fos_user.resetting.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.group_manager" class="Sonata\UserBundle\Entity\GroupManager">
      <argument type="service" id="fos_user.entity_manager"/>
      <argument>Application\Sonata\UserBundle\Entity\Group</argument>
    </service>
    <service id="fos_user.group.form.handler" class="FOS\UserBundle\Form\Handler\GroupFormHandler" scope="request">
      <argument type="service" id="fos_user.group.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.group_manager"/>
    </service>
    <service id="sonata.user.profile.form.handler" class="Sonata\UserBundle\Form\Handler\ProfileFormHandler" scope="request">
      <argument type="service" id="sonata.user.profile.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="sonata.user.registration.form.handler" class="Sonata\UserBundle\Form\Handler\RegistrationFormHandler" scope="request">
      <argument type="service" id="sonata.user.registration.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
      <argument type="service" id="fos_user.mailer"/>
      <argument type="service" id="fos_user.util.token_generator"/>
    </service>
    <service id="jms_serializer.metadata_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver">
      <argument type="service">
        <service class="Metadata\Driver\DriverChain" public="false">
          <argument type="collection">
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">C:\wamp\www\Aparchi\vendor\symfony\monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">C:\wamp\www\Aparchi\vendor\symfony\swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">C:\wamp\www\Aparchi\vendor\doctrine\doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">C:\wamp\www\Aparchi\vendor\sensio\framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">C:\wamp\www\Aparchi\vendor\sonata-project\block-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">C:\wamp\www\Aparchi\vendor\knplabs\knp-menu-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">C:\wamp\www\Aparchi\vendor\sonata-project\doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CacheBundle">C:\wamp\www\Aparchi\vendor\sonata-project\cache-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\SeoBundle">C:\wamp\www\Aparchi\vendor\sonata-project\seo-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">C:\wamp\www\Aparchi\vendor\sonata-project\easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\NotificationBundle">C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\NotificationBundle">C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PageBundle">C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\PageBundle">C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Cmf\Bundle\RoutingBundle">C:\wamp\www\Aparchi\vendor\symfony-cmf\routing-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">C:\wamp\www\Aparchi\vendor\knplabs\knp-markdown-bundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">C:\wamp\www\Aparchi\vendor\egeloen\ckeditor-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/config/serializer</argument>
                      <argument key="FrontOfficeBundle">C:\wamp\www\Aparchi\src\FrontOfficeBundle/Resources/config/serializer</argument>
                      <argument key="BackOfficeBundle">C:\wamp\www\Aparchi\src\BackOfficeBundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\UserBundle">C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\UserBundle">C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">C:\wamp\www\Aparchi\vendor\jms\serializer-bundle\JMS\SerializerBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\MediaBundle">C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\AdminBundle">C:\wamp\www\Aparchi\src\Application\Sonata\AdminBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">C:\wamp\www\Aparchi\vendor\doctrine\doctrine-fixtures-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">C:\wamp\www\Aparchi\vendor\symfony\assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\DebugBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\DebugBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">C:\wamp\www\Aparchi\vendor\sensio\distribution-bundle\Sensio\Bundle\DistributionBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">C:\wamp\www\Aparchi\vendor\sensio\generator-bundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">C:\wamp\www\Aparchi\vendor\symfony\monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">C:\wamp\www\Aparchi\vendor\symfony\swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">C:\wamp\www\Aparchi\vendor\doctrine\doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">C:\wamp\www\Aparchi\vendor\sensio\framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">C:\wamp\www\Aparchi\vendor\sonata-project\block-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">C:\wamp\www\Aparchi\vendor\knplabs\knp-menu-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">C:\wamp\www\Aparchi\vendor\sonata-project\doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CacheBundle">C:\wamp\www\Aparchi\vendor\sonata-project\cache-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\SeoBundle">C:\wamp\www\Aparchi\vendor\sonata-project\seo-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">C:\wamp\www\Aparchi\vendor\sonata-project\easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\NotificationBundle">C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\NotificationBundle">C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PageBundle">C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\PageBundle">C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Cmf\Bundle\RoutingBundle">C:\wamp\www\Aparchi\vendor\symfony-cmf\routing-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">C:\wamp\www\Aparchi\vendor\knplabs\knp-markdown-bundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">C:\wamp\www\Aparchi\vendor\egeloen\ckeditor-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/config/serializer</argument>
                      <argument key="FrontOfficeBundle">C:\wamp\www\Aparchi\src\FrontOfficeBundle/Resources/config/serializer</argument>
                      <argument key="BackOfficeBundle">C:\wamp\www\Aparchi\src\BackOfficeBundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\UserBundle">C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\UserBundle">C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">C:\wamp\www\Aparchi\vendor\jms\serializer-bundle\JMS\SerializerBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\MediaBundle">C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\AdminBundle">C:\wamp\www\Aparchi\src\Application\Sonata\AdminBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">C:\wamp\www\Aparchi\vendor\doctrine\doctrine-fixtures-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">C:\wamp\www\Aparchi\vendor\symfony\assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\DebugBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\DebugBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">C:\wamp\www\Aparchi\vendor\sensio\distribution-bundle\Sensio\Bundle\DistributionBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">C:\wamp\www\Aparchi\vendor\sensio\generator-bundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\PhpDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">C:\wamp\www\Aparchi\vendor\symfony\monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">C:\wamp\www\Aparchi\vendor\symfony\swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">C:\wamp\www\Aparchi\vendor\doctrine\doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">C:\wamp\www\Aparchi\vendor\sensio\framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">C:\wamp\www\Aparchi\vendor\sonata-project\block-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">C:\wamp\www\Aparchi\vendor\knplabs\knp-menu-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">C:\wamp\www\Aparchi\vendor\sonata-project\doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CacheBundle">C:\wamp\www\Aparchi\vendor\sonata-project\cache-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\SeoBundle">C:\wamp\www\Aparchi\vendor\sonata-project\seo-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">C:\wamp\www\Aparchi\vendor\sonata-project\easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\NotificationBundle">C:\wamp\www\Aparchi\vendor\sonata-project\notification-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\NotificationBundle">C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PageBundle">C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\PageBundle">C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Cmf\Bundle\RoutingBundle">C:\wamp\www\Aparchi\vendor\symfony-cmf\routing-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">C:\wamp\www\Aparchi\vendor\knplabs\knp-markdown-bundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">C:\wamp\www\Aparchi\vendor\egeloen\ckeditor-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/config/serializer</argument>
                      <argument key="FrontOfficeBundle">C:\wamp\www\Aparchi\src\FrontOfficeBundle/Resources/config/serializer</argument>
                      <argument key="BackOfficeBundle">C:\wamp\www\Aparchi\src\BackOfficeBundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\UserBundle">C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\UserBundle">C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">C:\wamp\www\Aparchi\vendor\jms\serializer-bundle\JMS\SerializerBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\MediaBundle">C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\AdminBundle">C:\wamp\www\Aparchi\src\Application\Sonata\AdminBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">C:\wamp\www\Aparchi\vendor\doctrine\doctrine-fixtures-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">C:\wamp\www\Aparchi\vendor\symfony\assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\DebugBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\DebugBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">C:\wamp\www\Aparchi\vendor\sensio\distribution-bundle\Sensio\Bundle\DistributionBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">C:\wamp\www\Aparchi\vendor\sensio\generator-bundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.naming_strategy" class="JMS\Serializer\Naming\CacheNamingStrategy">
      <argument type="service">
        <service class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
          <argument type="service">
            <service class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
              <argument>_</argument>
              <argument>true</argument>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="jms_serializer.object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer" class="JMS\Serializer\Serializer">
      <argument type="service">
        <service class="Metadata\MetadataFactory" public="false">
          <argument type="service">
            <service class="Metadata\Driver\LazyLoadingDriver" public="false">
              <argument type="service" id="service_container"/>
              <argument>jms_serializer.metadata_driver</argument>
            </service>
          </argument>
          <argument>Metadata\ClassHierarchyMetadata</argument>
          <argument>true</argument>
          <call method="setCache">
            <argument type="service">
              <service class="Metadata\Cache\FileCache" public="false">
                <argument>C:/wamp/www/Aparchi/app/cache/dev/jms_serializer</argument>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
            <argument key="yml" type="service" id="jms_serializer.yaml_serialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
          <call method="setListeners">
            <argument type="collection">
              <argument key="serializer.pre_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
              <argument key="serializer.post_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPostSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="twig.loader" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\sonata-project\core-bundle/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\sonata-project\block-bundle/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\knplabs\knp-menu-bundle/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\sonata-project\doctrine-orm-admin-bundle/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\app/Resources/ApplicationSonataAdminBundle/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\AdminBundle/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\sonata-project\admin-bundle/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\sonata-project\seo-bundle/Resources/views</argument>
        <argument>SonataSeo</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle/Resources/views</argument>
        <argument>SonataNotification</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\NotificationBundle/Resources/views</argument>
        <argument>ApplicationSonataNotification</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle/Resources/views</argument>
        <argument>SonataPage</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\app/Resources/SonataPageBundle/views</argument>
        <argument>SonataPage</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\sonata-project\page-bundle/Resources/views</argument>
        <argument>SonataPage</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\PageBundle/Resources/views</argument>
        <argument>ApplicationSonataPage</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\egeloen\ckeditor-bundle/Resources/views</argument>
        <argument>IvoryCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\sonata-project\formatter-bundle/Resources/views</argument>
        <argument>SonataFormatter</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\FrontOfficeBundle/Resources/views</argument>
        <argument>FrontOffice</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\BackOfficeBundle/Resources/views</argument>
        <argument>BackOffice</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\friendsofsymfony\user-bundle\FOS\UserBundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\sonata-project\user-bundle/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\UserBundle/Resources/views</argument>
        <argument>ApplicationSonataUser</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle/Resources/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\sonata-project\media-bundle/Resources/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\MediaBundle/Resources/views</argument>
        <argument>ApplicationSonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\app/Resources/ApplicationSonataAdminBundle/views</argument>
        <argument>ApplicationSonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\src\Application\Sonata\AdminBundle/Resources/views</argument>
        <argument>ApplicationSonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\sensio\distribution-bundle\Sensio\Bundle\DistributionBundle/Resources/views</argument>
        <argument>SensioDistribution</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\symfony\symfony\src\Symfony\Bridge\Twig/Resources/views/Form</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\Aparchi\vendor\knplabs\knp-menu\src\Knp\Menu/Resources/views</argument>
      </call>
    </service>
    <service id="knp_menu.menu_provider" class="Knp\Menu\Provider\ChainProvider">
      <argument type="collection">
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="sonata_admin_sidebar">sonata.admin.sidebar_menu</argument>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\BuilderServiceProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="service_container"/>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="kernel"/>
            <argument type="service" id="service_container"/>
            <argument type="service" id="knp_menu.factory"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Sonata\AdminBundle\Menu\Provider\GroupMenuProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="knp_menu.factory"/>
            <argument type="service" id="sonata.admin.pool"/>
            <argument type="service" id="security.authorization_checker"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="router" alias="cmf_routing.router"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="security.user_checker.main" alias="security.user_checker.admin"/>
    <service id="security.acl.dbal.connection" alias="doctrine.dbal.default_connection"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.real"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport"/>
    <service id="mailer" alias="swiftmailer.mailer.default"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
    <service id="sonata.block.context_manager" alias="sonata.page.block.context_manager"/>
    <service id="sonata.block.cache.handler" alias="sonata.block.cache.handler.default"/>
    <service id="sonata.block.renderer" alias="sonata.block.renderer.default"/>
    <service id="sonata.seo.page" alias="sonata.seo.page.default"/>
    <service id="sonata.notification.backend" alias="sonata.notification.backend.runtime"/>
    <service id="sonata.notification.manager.message" alias="sonata.notification.manager.message.default"/>
    <service id="sonata.page.site.selector" alias="sonata.page.site.selector.host"/>
    <service id="fos_user.util.username_canonicalizer" alias="fos_user.util.email_canonicalizer"/>
    <service id="fos_user.change_password.form.handler" alias="fos_user.change_password.form.handler.default"/>
    <service id="sonata.user.user_manager" alias="fos_user.user_manager"/>
    <service id="sonata.user.group_manager" alias="fos_user.group_manager"/>
    <service id="sonata.user.authentication.form" alias="fos_user.profile.form"/>
    <service id="sonata.user.authentication.form_handler" alias="fos_user.profile.form.handler"/>
    <service id="sonata.media.adapter.image.default" alias="sonata.media.adapter.image.gd"/>
    <service id="sonata.media.resizer.default" alias="sonata.media.resizer.simple"/>
    <service id="serializer" alias="jms_serializer"/>
    <service id="sensio.distribution.webconfigurator" alias="sensio_distribution.webconfigurator"/>
    <service id="console.command.sensiolabs_security_command_securitycheckercommand" alias="sensio_distribution.security_checker.command"/>
  </services>
</container>
