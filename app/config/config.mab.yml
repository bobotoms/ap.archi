imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@FrontOfficeBundle/Resources/config/services.yml" }
    - { resource: "@BackOfficeBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    provider:
      4:  
        name: AMV SUBOCEA SEJOUR
        key: a053b5ea27edcddb81ab7a26b503a7d5
      5:  
        name: AMV SUBOCEA CROISIERE
        key: 93b8d15d2264ddf19390d5d531582050
      21:
        name: AMV SUBOCEA SAFARIS
        key: 0b0sqsdqsdqb1e98370630996648d0149cdc7514
      18: 
        name: DUNE SEJOURS
        key: 028a21927201e12a6fa4d415bf206d5a 
      17: 
        name: DUNE CROISIERES
        key: cd48d64b7e7f2c5620cad002df485a7d 
      20:
        name: DUNE SAFARIS
        key: 9db56b24jkhjkhjk6d1e68f0a435c3f5c8be5be5

#    sonata.page.admin.site.class: Application\Sonata\PageBundle\Admin\SiteAdmin
#    sonata.page.route.page.generator.class: Application\Sonata\PageBundle\Route\RoutePageGeneratorCustom

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
        gc_probability: 0
        gc_maxlifetime: 3600
        cookie_lifetime: 7200
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
    - 'bootstrap_3_layout.html.twig'
    
    form:
        resources:
            - 'SonataFormatterBundle:Form:formatter.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                driver: pdo_mysql
                host: '%database_host%'
                port: '%database_port%'
                dbname: '%database_name%'
                user: '%database_user%'
                password: '%database_password%'
                charset: UTF8
                mapping_types:
                    enum: string
                # if using pdo_sqlite as your database driver:
                #   1. add the path in parameters.yml
                #     e.g. database_path: '%kernel.root_dir%/data/data.db3'
                #   2. Uncomment database_path in parameters.yml.dist
                #   3. Uncomment next line:
                #path: '%database_path%'

            subocea:
                driver_class:   Realestate\MssqlBundle\Driver\PDODblib\Driver
                host:           "%subocea_host%"
                dbname:         "%subocea_name%"
                user:           "%subocea_user%"
                password:       "%subocea_password%"
                charset:        "%subocea_charset%"
            
        
        
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        default_entity_manager: default
        entity_managers:
            default:
                connection: default
                mappings:
                    ApplicationSonataPageBundle: ~ # only once the ApplicationSonataPageBundle is generated
                    SonataPageBundle: ~
                    SonataNotificationBundle: ~
                    ApplicationSonataNotificationBundle: ~
                    SonataMediaBundle: ~
                    ApplicationSonataMediaBundle: ~
                    SonataAdminBundle: ~
                    ApplicationSonataAdminBundle: ~    
                    ApplicationSonataAdminBundle: ~    
                    ApplicationSonataUserBundle: ~
            subocea:
                connection: subocea
                mappings:
                    ApplicationSonataPageBundle: ~ # only once the ApplicationSonataPageBundle is generated
                    SonataPageBundle: ~
                    SonataNotificationBundle: ~
                    ApplicationSonataNotificationBundle: ~
                    SonataMediaBundle: ~
                    ApplicationSonataMediaBundle: ~
                    SonataAdminBundle: ~
                    ApplicationSonataAdminBundle: ~    
                    ApplicationSonataAdminBundle: ~    
                    ApplicationSonataUserBundle: ~
        #auto_generate_proxy_classes: '%kernel.debug%'
        #naming_strategy: doctrine.orm.naming_strategy.underscore
        #auto_mapping: true
        #mappings:
        #    ApplicationSonataPageBundle: ~ # only once the ApplicationSonataPageBundle is generated
        #    SonataPageBundle: ~
        #    SonataNotificationBundle: ~
        #    ApplicationSonataNotificationBundle: ~
        #    SonataMediaBundle: ~
        #    ApplicationSonataMediaBundle: ~
        #    SonataAdminBundle: ~
        #    ApplicationSonataAdminBundle: ~		
        #    ApplicationSonataAdminBundle: ~		
        #    ApplicationSonataUserBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }
    
sonata_block:
    context_manager: sonata.page.block.context_manager
    default_contexts: [sonata_page_bundle]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        #sonata.admin_doctrine_orm.block.audit:
        #    contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.rss:
        sonata.media.block.media:
        sonata.media.block.gallery:
        sonata.formatter.block.formatter:
        sonata.user.block.menu:  # used to display the menu in profile pages
        sonata.user.block.account: # used to  display menu option (login option)

        #sonata.block.service.carte:
        #    templates:
        #        - { name: 'Carte', template: 'BackOfficeBundle:Block:map.html.twig' }

        # Some block with different templates
        #acme.demo.block.demo:
        #    templates:
        #       - { name: 'Simple', template: 'AcmeDemoBundle:Block:demo_simple.html.twig' }
        #       - { name: 'Big',    template: 'AcmeDemoBundle:Block:demo_big.html.twig' }
        
sonata_cache:
    caches:
        esi:
            token: an unique security key # a random one is generated by default
            servers:
                - varnishadm -T 127.0.0.1:2000 {{ COMMAND }} "{{ EXPRESSION }}"

        ssi:
            token: an unique security key # a random one is generated by default

        symfony:
            token: s3cur3 # token used to clear the related cache
            php_cache_enabled: true # Optional (default: false), clear APC or PHP OPcache
            types: [mytype1, mycustomtype2] # Optional, you can restrict allowed cache types
            servers:
                - { domain: kooqit.local, ip: 127.0.0.1, port: 80 }
            timeout:
                RCV: { sec: 2, usec: 0 }
                SND: { sec: 2, usec: 0 }

sonata_seo:
    encoding:         UTF-8
    page:
        title:            Subocea
        default:          sonata.seo.page.default
        metas:
            name:
                keywords:             plongée, voyage, séjours, croisières
                description:          Votre voyagiste plongée à travers le monde
                robots:               index, follow

            property:
                # Facebook application settings
                #'fb:app_id':          XXXXXX
                #'fb:admins':          admin1, admin2

                # Open Graph information
                # see http://developers.facebook.com/docs/opengraphprotocol/#types or http://ogp.me/
                'og:site_name':       Subocea
                'og:description':     Venez plonger avec nous

            http-equiv:
                'Content-Type':         text/html; charset=utf-8
                #'X-Ua-Compatible':      IE=EmulateIE7

            charset:
                UTF-8:    ''

        head:
            'xmlns':              http://www.w3.org/1999/xhtml
            'xmlns:og':           http://opengraphprotocol.org/schema/
            #'xmlns:fb':           "http://www.facebook.com/2008/fbml"
            
sonata_notification:
    admin:
        enabled: false
        
sonata_page:
    multisite: host
    use_streamed_response: true # set the value to false in debug mode or if the reverse proxy does not handle streamed response
    ignore_route_patterns:
        - ^(.*)admin(.*)   # ignore admin route, ie route containing 'admin'
        - ^_(.*)          # ignore symfony routes

    ignore_routes:
        - sonata_page_cache_esi
        - sonata_page_cache_ssi
        - sonata_page_js_sync_cache
        - sonata_page_js_async_cache
        - sonata_cache_esi
        - sonata_cache_ssi
        - sonata_cache_js_async
        - sonata_cache_js_sync
        - sonata_cache_apc

    ignore_uri_patterns:
        - ^/admin\/   # ignore admin route, ie route containing 'admin'

    page_defaults:
        homepage: {decorate: true} # disable decoration for homepage, key - is a page route

    default_template: default # template key from templates section, used as default for pages
    templates:
        default:
            path: 'SonataPageBundle::layout-custom.html.twig'
            name: 'default'
            containers:
                header:
                    name: Header
                content_top:
                    name: Top content
                content:
                    name: Main content
                content_bottom:
                    name: Bottom content
                footer:
                    name: Footer
            matrix:
                layout: |
                    HHHHHHHH
                    TTTTBBBB
                    TTTTBBBB
                    TTTTBBBB
                    TTTTBBBB
                    CCCCCCCC
                    CCCCCCCC
                    FFFFFFFF

                mapping:
                    H: header
                    T: content_top
                    C: content
                    B: content_bottom
                    F: footer

        2columns:
            path: 'SonataPageBundle::2columns_layout.html.twig'
            name: '2 columns layout'

        homepage:
            path: 'FrontOfficeBundle::homepage.html.twig'
            name: 'Homepage'

    # manage the http errors
    catch_exceptions:
        not_found: [404]    # render 404 page with "not_found" key (name generated: _page_internal_error_{key})
        fatal:     [500]    # so you can use the same page for different http errors or specify specific page for each error
        
sonata_admin:
    title:      Subocéa
    title_logo: /bundles/backoffice/images/logo_title.png
    templates:
        layout:             ApplicationSonataAdminBundle::layout.html.twig
        #knp_menu_template:  ApplicationAdminBundle:Menu:custom_knp_menu.html.twig
    assets:
        javascripts:
            - bundles/sonatacore/vendor/jquery/dist/jquery.min.js
            - bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js
            - bundles/sonatacore/vendor/moment/min/moment.min.js
            - bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js
            - bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js
            - bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js
            - bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js
            - bundles/sonataadmin/vendor/jquery-form/jquery.form.js
            - bundles/sonataadmin/jquery/jquery.confirmExit.js
            - bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js
            - bundles/sonatacore/vendor/select2/select2.min.js
            - bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js
            - bundles/sonataadmin/vendor/iCheck/icheck.min.js
            - bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js
            - bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js
            - bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js
            - bundles/sonataadmin/Admin.js
            - bundles/sonataadmin/treeview.js

        stylesheets:
            - bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css
            - bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css
            - bundles/sonatacore/vendor/ionicons/css/ionicons.min.css
            - bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css
            - bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css
            - bundles/sonataadmin/vendor/iCheck/skins/square/blue.css
            - bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css
            - bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css
            - bundles/sonatacore/vendor/select2/select2.css
            - bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css
            - bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css
            - bundles/sonataadmin/css/styles.css
            - bundles/sonataadmin/css/layout.css
            - bundles/sonataadmin/css/tree.css
            - bundles/sonataadmin/css/colors.css
            - bundles/applicationsonataadmin/custom.css

#    dashboard:
#        groups:
#            sonata.admin.group.geo:
#                label:           geo
#                label_catalogue: SonataAdminBundle
#                icon:            '<i class="fa fa-globe"></i>'
#                items:
#                    - sonata.customer.admin.customer
#                    - sonata.invoice.admin.invoice
#                    - sonata.order.admin.order
#                    - sonata.product.admin.product

cmf_routing:
    chain:
        routers_by_id:
            # enable the DynamicRouter with high priority to allow overwriting configured routes with content
            #cmf_routing.dynamic_router: 200
            # enable the symfony default router with a lower priority
            sonata.page.router: 150
            router.default: 100

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media:        MyVendor\MediaBundle\Entity\Media
    #    gallery:      MyVendor\MediaBundle\Entity\Gallery
    #    gallery_item: MyVendor\MediaBundle\Entity\GalleryItem
    providers:
        file:
            service:    sonata.media.provider.file
            resizer:    false
            filesystem: sonata.media.filesystem.local
 #           cdn:        sonata.media.cdn.cloudront
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format
            allowed_extensions: ['pdf', 'txt', 'rtf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pttx', 'odt', 'odg', 'odp', 'ods', 'odc', 'odf', 'odb', 'csv', 'xml', 'mp4', 'webm']
            allowed_mime_types: ['application/pdf', 'application/x-pdf', 'application/rtf', 'text/html', 'text/rtf', 'text/plain', 'video/mp4', 'video/webm']

        image:
            resizer: sonata.media.resizer.square
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        Envies:  
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                medium: { width: 250 , quality: 70}
                big:   { width: 500 , quality: 70}
        Espèce:  
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                medium: { width: 250 , quality: 70}
                big:   { width: 500 , quality: 70}
        Pays:  
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                medium: { width: 250 , quality: 70}
                big:   { width: 500 , quality: 70}
        Pictogramme:  
            providers:
                - sonata.media.provider.image

            formats:
                small: { width: 100 , quality: 70}
                medium: { width: 250 , quality: 70}
                big:   { width: 500 , quality: 70}
        Produits:  
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                medium: { width: 250 , quality: 70}
                big:   { width: 500 , quality: 70}
        Sliders:  
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                medium: { width: 250 , quality: 70}
                big:   { width: 500 , quality: 70}
        Spot:  
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                medium: { width: 250 , quality: 70}
                big:   { width: 500 , quality: 70}
        Zones:  
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                medium: { width: 250 , quality: 70}
                big:   { width: 500 , quality: 70}
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                medium: { width: 250 , quality: 70}
                big:   { width: 500 , quality: 70}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false              
            
sonata_formatter:
    default_formatter: text
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig #keep this commented unless you are using media bundle.


        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions   
            
sonata_user:
    security_acl: true
    manager_type: orm         
    
fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User


    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager
        
assetic:
    debug: %kernel.debug%
    use_controller: false
    bundles: [ ]
    filters:
        scssphp:
            formatter: 'Leafo\ScssPhp\Formatter\Compressed'
        cssrewrite: ~
    assets:
        bootstrap_css:
            inputs:
                - %kernel.root_dir%/../vendor/twbs/bootstrap/less/bootstrap.less
            filters:
                - cssrewrite
            output: css/bootstrap.css
        bootstrap_js:
            inputs:
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/affix.js
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/alert.js
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/button.js
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/carousel.js
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/collapse.js
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/dropdown.js
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/modal.js
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/tooltip.js
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/popover.js
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/scrollspy.js
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/tab.js
                - %kernel.root_dir%/../vendor/twbs/bootstrap/js/transition.js
            output: js/bootstrap.js